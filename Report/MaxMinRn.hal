external function val GetCUTurnover(record CUVc,string,Date,Date,string);
external function val GetINTurnover(record INVc,string,Date,Date);
external procedure HT2Per(Date, Date , var string);
external function Boolean SetInSet2(string,string);

procedure AddToSMSort(var record SMVc SMr,var record SMVc SM2r,record INVc INr,val q,val s,val sort)
begin
  row SMVc SMrw;
  row SMVc SM2rw;
  Integer i,j,rwcnt;
  Boolean addedf;
  
  addedf = false;
  rwcnt = MatRowCnt(SMr);
  j = 0;
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(SMr,i,SMrw);
    if ((SMrw.DebVal2<sort) and (addedf==false)) then begin
      SM2rw.Objects = INr.Code;
      SM2rw.Comment = INr.Name;
      SM2rw.DebVal = q;
      SM2rw.CredVal = s;
      SM2rw.DebVal2 = sort;
      SM2rw.CredVal2 = q*s;
      MatRowPut(SM2r,j,SM2rw);
      j = j + 1;
      addedf = true;
    end;
    MatRowPut(SM2r,j,SMrw);
    j = j + 1;
  end;
  if (addedf==false) then begin
    SM2rw.Objects = INr.Code;
    SM2rw.Comment = INr.Name;
    SM2rw.DebVal = q;
    SM2rw.CredVal = s;
    SM2rw.DebVal2 = sort;
    SM2rw.CredVal2 = q*s;
    MatRowPut(SM2r,j,SM2rw);
  end;
  RecordNew(SMr);
  rwcnt = MatRowCnt(SM2r);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(SM2r,i,SMrw);
    MatRowPut(SMr,i,SMrw);
  end;
  return;
end;

global
procedure CustSalesRn(record RcVc RepSpec)
begin
  record CUVc CUr;
  record INVc INr;
  record SMVc SMr;
  record SMVc SM2r;
  string 50 frcc,tocc;
  Boolean found,testf;
  val gp,s,sort;
  row SMVc SMrw; 
  val tot;
  Integer i,rwcnt;
  string 255 tstr;
  Integer rw;
  
  StartReportJob(USetStr(2500));
   rw = 1;
   HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
   Header(rw,tstr,1);
   rw = rw + 1;   
  EndHeader;
/*  
  if (RepSpec.wholemonthf==0) then begin
    StartFormat(15);
    OutString(0,0,USetStr(1163),false);
    EndFormat;
    goto LCustSalesRn;
  end;
*/  
  StartFormat(15);
  OutString(0,0,USetStr(2692),false);// Edit ************************** Monday, 15 October 2012 15:30:25
  OutString(50,0,USetStr(2482),false);// Edit ************************** Monday, 15 October 2012 15:30:27
  OutString(160,0,USetStr(2483),false);// Edit ************************** Monday, 15 October 2012 15:30:27
  OutString(400,0,USetStr(2493),true);// Edit ************************** Monday, 15 October 2012 15:30:28
  OutString(1,0,USetStr(2565),true);// Edit ************************** Monday, 15 October 2012 15:30:29
  EndFormat;
  Gray_Divider(0,1);
  frcc = FirstInRange(RepSpec.f1,20);
  tocc = LastInRange(RepSpec.f1,20);
  CUr.Code = frcc;
  found = true;
  while (LoopMain(CUr,1,found)) begin
    testf = true;
    if (nonblank(RepSpec.f1)) then begin
      if (tocc<CUr.Code) then begin found = false; end;
    end;
    if (nonblank(RepSpec.f2)) then begin
      if (RepSpec.f2<>CUr.CustCat) then begin testf = false; end;
    end;  
    if (nonblank(RepSpec.f4)) then begin
      if (SetInSet2(RepSpec.f4,CUr.Classification)==false) then begin
        testf = false;
      end;
    end;      
    if (found==false) then begin testf = false; end;
    if (CUr.CUType==0) then begin testf = false; end;
    if (testf) then begin
      gp = GetCUTurnover(CUr,"grossprofit",RepSpec.sStartDate,RepSpec.sEndDate,"");
      s = GetCUTurnover(CUr,"salesexclvat",RepSpec.sStartDate,RepSpec.sEndDate,"");
      if (RepSpec.ArtMode==0) then begin sort = s; end;
      if (RepSpec.ArtMode==1) then begin sort = -s; end;
      if (RepSpec.ArtMode==2) then begin sort = gp; end;
      if ((sort<>0) or (RepSpec.flags[1]==1)) then begin
        RecordNew(SM2r);
        INr.Code = CUr.Code;
        INr.Name = CUr.Name;
        AddToSMSort(SMr,SM2r,INr,gp,s,sort);
      end;
    end;
  end;
  tot = 0;
  rwcnt = MatRowCnt(SMr);
  if (RepSpec.long1>-1) then begin
    if (rwcnt>RepSpec.long1) then begin rwcnt = RepSpec.long1; end;
  end;
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(SMr,i,SMrw);
    StartFormat(15);
    
    CUr.Code = SMrw.Objects;
    readfirstmain(CUr,1,true);
    OutString(0,0,CUr.SalesMan,false);
    OutString(60,0,SMrw.Objects,false);
    OutString(160,0,SMrw.Comment,false);
    OutVal(400,0,SMrw.DebVal,M4Val,true);
    OutVal(1,0,SMrw.CredVal,M4Val,true);
    EndFormat;
    tot = tot + SMrw.CredVal;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutVal(1,0,tot,M4Val,true);
  EndFormat;
LCustSalesRn:;  
  EndJob;
  return;
end;

global
procedure ItemSalesRn(record RcVc RepSpec)
begin
  record INVc INr;
  record SMVc SMr;
  record SMVc SM2r;
  string 50 frcc,tocc;
  Boolean found,testf;
  val q,s,sort;
  row SMVc SMrw; 
  val tot;
  Integer i,rwcnt;
  string 255 tstr;
  Integer rw;
  
  StartReportJob(USetStr(2469));
   rw = 1;
   HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
   Header(rw,tstr,1);
   rw = rw + 1;   
  EndHeader;
  if (RepSpec.wholemonthf==0) then begin
    StartFormat(15);
     OutString(0,0,USetStr(1163),false);
    EndFormat;
    goto LItemSalesRn;
  end;  
  StartFormat(15);
  OutString(0,0,USetStr(2462),false);
  OutString(100,0,USetStr(2448),false);
  OutString(340,0,USetStr(2464),true);
//  OutString(410,0,USetStr(2465),true);
  OutString(1,0,USetStr(2466),true);
  EndFormat;
  Gray_Divider(0,1);
  frcc = FirstInRange(RepSpec.f1,20);
  tocc = LastInRange(RepSpec.f1,20);
  INr.Code = frcc;
  found = true;
  while (LoopMain(INr,1,found)) begin
    testf = true;
    if (nonblank(RepSpec.f1)) then begin
      if (tocc<INr.Code) then begin found = false; end;
    end;
    if (nonblank(RepSpec.f2)) then begin
      if (RepSpec.f2<>INr.Group) then begin testf = false; end;
    end;
    if (nonblank(RepSpec.f4)) then begin
      if (SetInSet2(RepSpec.f4,INr.DispGroups)==false) then begin
        testf = false;
      end;
    end; 
    if (found==false) then begin testf = false; end;
    if (testf) then begin
      q = GetINTurnover(INr,"quant",RepSpec.sStartDate,RepSpec.sEndDate);
      s = GetINTurnover(INr,"salesexclvat",RepSpec.sStartDate,RepSpec.sEndDate);
      if (RepSpec.ArtMode==0) then begin sort = q; end;
      if (RepSpec.ArtMode==1) then begin sort = -q; end;
      if (RepSpec.ArtMode==2) then begin sort = s; end;
      if ((sort<>0) or (RepSpec.flags[1]==1)) then begin
        RecordNew(SM2r);
        AddToSMSort(SMr,SM2r,INr,q,s,sort);
      end;
    end;
  end;
  tot = 0;
  rwcnt = MatRowCnt(SMr);
  if (RepSpec.long1>-1) then begin
    if (rwcnt>RepSpec.long1) then begin rwcnt = RepSpec.long1; end;
  end;
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(SMr,i,SMrw);
    StartFormat(15);
    OutString(0,0,SMrw.Objects,false);
    OutString(100,0,SMrw.Comment,false);
    OutVal(340,0,SMrw.DebVal,M4Val,true);
  //  OutVal(410,0,SMrw.CredVal2,M4Val,true);
    OutVal(1,0,SMrw.CredVal,M4Val,true);
    EndFormat;
    tot = tot + SMrw.CredVal;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutVal(1,0,tot,M4Val,true);
  EndFormat;
LItemSalesRn:;  
  EndJob;
  return;
end;

