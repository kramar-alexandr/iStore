external function Boolean AllowedToTakeFromThisLoc(record LocationVc);
external updating procedure CreateAutoProduction(record StockMovVc);
external function Integer CheckStockMovRowFromPosition(record StockMovVc,row StockMovVc,record LocationVc,record INVc,
                                              record MainWHMBlock,Integer,Boolean,Boolean);
external function Integer CheckSerialStatus(string,string,var string);
external function Boolean CanOKStockRecord();
external updating procedure UpdateStockResFromStockMov(record StockMovVc);
external function Integer CheckRates(string,val,val,val,val,val,var string);
external function Integer MakeTransFromStockMov(record TRVc,record StockMovVc,record LocationVc,record LocationVc,Boolean,Integer);
external updating procedure StockMovUpdateReserved(record StockMovVc,Boolean,Boolean);
external function Boolean StockMovVc_PasteQuant(var record StockMovVc,Integer);
external procedure StockMovSumUp(var record StockMovVc);
external function Boolean StockMovVc_PasteArtCode(var record StockMovVc,Integer,Integer,Boolean);
external function string 20 FindFreePositionInLocArea(record INVc,string,string,string);
external updating procedure UpdatePosition(string,string,string,val,val,val);
external updating function Boolean UpdateForkLiftQueue(record StockMovVc,Boolean);
external updating procedure SetPositionStatus(string,Integer);
external function Integer CheckPosition(string,string,Integer,val,val,val);
external function Integer CheckObjs(string,string,var string);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external function Boolean IsSerialNrCorrect(string);
external updating procedure StockMovUpdateCostPrice(record StockMovVc,record StockMovVc);
external updating procedure StockMovUpdateItemHist(record StockMovVc,record StockMovVc);
external updating procedure StockMovUpdateSerialNr(record StockMovVc,record StockMovVc);
external updating procedure StockMovUpdateStock(record StockMovVc,record StockMovVc,Boolean,Boolean);
external procedure StockMovSumUp(var record StockMovVc);
external procedure SwapM4Val(var val,var val);
external procedure B1ToB2Val(val,val,val,var val);
external procedure B1ToB2StrVal(string,val,val,var string);
external procedure ConvertToDualBase(var string,date,var val,var val,var val,var val,var val,var val,Boolean);
external updating function Boolean UpdateIntOrderFromStockMov(record StockMovVc,record StockMovVc,Boolean);
external updating procedure UpdateLocOKNr(string,var val);
external procedure UpdateStockMovFIFO(var record StockMovVc,record StockMovVc,Integer);
external function string 255 CheckTrans(var record TRVc,Integer,Boolean);
external updating procedure SaveTrans(record TRVc);
external function Boolean ExistStockTrans(string ,Date,var Integer,string,LongInt,Integer);
external function Boolean SerialNrAvail(string,string,string,val);
external procedure FindStockValue(string,string,var record ItemStatusVc);
external function Boolean Date2Test(string,Date,string,Integer);
external function Boolean SerNrTestStockMovVc(LongInt,Date,var Boolean);
// Edit Start ---------------------------------------------- Edit Start
	//Thursday, 13 January 2011 14:59:38
	
global
function LongInt StockMovVcRecordDefaultsClient(var record StockMovVc StockMovr,record StockMovVc StockMov2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record LocalMachineBlock LMb;

  blockload(LMb);
  if(nonblank(LMb.DefLocation)) then begin
    StockMovr.FrLocation = LMb.DefLocation;
  end;
  StockMovVcRecordDefaultsClient = res; 
  RETURN;
END;
	// Edit End ---------------------------------------------- Edit End
	

function Integer CheckStockMovRowToPosition(record StockMovVc SMp,row StockMovVc StockMovrw,record LocationVc LocToRec,record INVc INr,
                                            record MainWHMBlock MainWHMRec,Integer rownr,Boolean disperrf)
BEGIN
  Integer res;
  string 20 topos,topos2;
  record PISVc PISr;
  val w,h,d,m;
  record INVc IN2r;
  row StockMovVc StockMov2rw;
  Integer j,errcode;
  record PosVc Posr;
  

  topos = StockMovrw.ToPosCode;
  if (blank(topos)) then begin
    topos = SMp.ToPos;
  end;
  if (nonblank(topos)) then begin
    Posr.Code = topos;
    if (ReadFirstMain(Posr,1,true)==false) then begin
      if (disperrf) then begin
        RecordCheckError(1734," " & topos,-1,"ToPos");
      end;
      res = 1734; 
      goto LCheckStockMovRowToPosition;
    end;
    Posr.Code = topos;
    Posr.Location = LocToRec.Code;
    if (ReadFirstKey("Location",Posr,2,true)==false) then begin
      if (disperrf) then begin
        RecordCheckError(1748," " & topos,-1,"ToPos");
      end;
      res = 1748; 
      goto LCheckStockMovRowToPosition;
    end;
  end;
  if (LocToRec.RequirePos!=0) then begin
    if (blank(topos)) then begin
      if (disperrf) then begin
        RecordCheckError(1854,topos,-1,"ToPos");
      end;
      res = 1854; 
      goto LCheckStockMovRowToPosition;
    end;  
    w = 0;
    h = 0;
    d = 0;
    m = StockMovrw.Quant/INr.QtyonPallet;
    if (INr.PalletWidth!=0) then begin w = w + INr.PalletWidth*m; end;
    if (INr.PalletHeight!=0) then begin h = h + INr.PalletHeight*m; end;
    if (INr.PalletDepth!=0) then begin d = d + INr.PalletDepth*m; end;
    for (j=0;j<rownr;j=j+1) begin
      MatRowGet(SMp,j,StockMov2rw);
      topos2 = StockMov2rw.ToPosCode;
      if (blank(topos2)) then begin
        topos2 = SMp.ToPos;
      end;
      if (topos==topos2) then begin
        if (ReadFirstItem(StockMov2rw.ArtCode,IN2r,true,true)) then begin
          m = 0;
          if (IN2r.QtyonPallet>0) then begin
            m = StockMov2rw.Quant/IN2r.QtyonPallet;
          end;              
          if (IN2r.PalletWidth!=0) then begin
            w = w + IN2r.PalletWidth*m;
          end;
          if (IN2r.PalletHeight!=0) then begin
            h = h + IN2r.PalletHeight*m;
          end;
          if (IN2r.PalletDepth!=0) then begin
            d = d + IN2r.PalletDepth*m;
          end;
        end;
      end;
    end;    
    errcode = CheckPosition(topos,LocToRec.Code,LocToRec.RequirePos,w,h,d);      
    if (errcode!=0) then begin
      if (disperrf) then begin
        if (nonblank(StockMovrw.ToPosCode)) then begin
          RecordCheckError(errcode,topos,rownr,"ToPosCode");
        end else begin
          RecordCheckError(errcode,topos,-1,"ToPos");
        end;
      end;
      res = errcode; 
      goto LCheckStockMovRowToPosition;
    end;    
  end;
LCheckStockMovRowToPosition:;
  CheckStockMovRowToPosition = res;
  RETURN;
END;

function Integer CheckStockMovRow(record StockMovVc SMp,row StockMovVc StockMovrw,record INVc INr,
                                  record MainWHMBlock MainWHMRec,
                                  record MainStockBlock MSb,Integer rownr,
                                  string frlocation,string tolocation,Boolean sentquantf,Boolean disperrf,LongInt check)
BEGIN
  Integer res;
  record INVc IN2r;
  record ItemStatusVc ISr;
  record PISVc PISr;
  val w,h,d,m;
  val prev;
  row StockMovVc StockMov2rw;
  Integer errcode;
  string 255 objstr,errstr;
  Integer j;
  val quant;
  record LocationVc ToLocr;

  
  ToLocr.Code = tolocation;
  if (ReadFirstMain(ToLocr,1,true)) then begin
  end;
  if (sentquantf) then begin
    quant = StockMovrw.SentQuant;
  end else begin
    quant = StockMovrw.Quant;
  end; 
  if (quant<0) then begin
    if (disperrf) then begin
      if (sentquantf) then begin
        RecordCheckError(1574,"",rownr,"SentQuant");      
      end else begin
        RecordCheckError(1574,"",rownr,"Quant");      
      end;
    end;
    res = 1574; 
    goto LCheckStockMovRow;
  end;
  if (blank(quant)) then begin
    if (disperrf) then begin
      if (sentquantf) then begin
        RecordCheckError(1574,"",rownr,"SentQuant");      
      end else begin
        RecordCheckError(1574,"",rownr,"Quant");      
      end;
    end;
    res = 1058;
    goto LCheckStockMovRow;
  end;    
  if (((INr.SerNrf>0) and (INr.SerNrf<3)) and (MSb.NoSerOnPU==0)) then begin
    if (ToLocr.Type==1) then begin
      if (CheckSerialStatus(StockMovrw.ArtCode,StockMovrw.SerialNr,errstr)==2) then begin
        if (disperrf) then begin
          RecordCheckError(2210," " & errstr,rownr,"SerialNr");      
        end;
        res = -1;
        goto LCheckStockMovRow;
      end;
    end;
  end;
  if (check!=0) then begin
    if (MSb.dontAllowOvership==1) then begin
      if (SMp.OKFlag==1) or (SMp.SentOKFlag==1) then begin
        if (INr.ItemType==1) then begin        
          prev = 0;
          for (j=0;j<rownr;j=j+1) begin           
            MatRowGet(SMp,j,StockMov2rw);
            if (StockMovrw.ArtCode==StockMov2rw.ArtCode) then begin
              if (sentquantf) then begin
                prev = prev + StockMov2rw.SentQuant;
              end else begin
                prev = prev + StockMov2rw.Quant;
              end;
            end;
          end;
          FindStockValue(StockMovrw.ArtCode,frlocation,ISr);            
          prev = prev + quant;
          if ((ISr.Instock)<prev) then begin
            if (disperrf) then begin
              if (sentquantf) then begin
                RecordCheckError(1247,"",rownr,"SentQuant");      
              end else begin
                RecordCheckError(1247,"",rownr,"Quant");      
              end;
            end;
            res = 1247; 
            goto LCheckStockMovRow;
          end;
          // Edit ************************** Tuesday, 11 September 2012 11:01:27
          if(currentuser!="SA")then begin
            if ((ISr.Instock-ISr.RsrvQty)<prev) then begin
              if (disperrf) then begin
                if (sentquantf) then begin
                  RecordCheckError(1247,"",rownr,"SentQuant");      
                end else begin
                  RecordCheckError(1247,"",rownr,"Quant");      
                end;
              end;
              res = 1247; 
              goto LCheckStockMovRow;
            end;
          end;
          // Edit ************************** Tuesday, 11 September 2012 11:01:26
        end;
      end;
    end;
  end;  
  
  if (((INr.SerNrf>0) and (INr.SerNrf<3)) and (MSb.NoSerOnPU==0)) then begin
    if (quant!=0) then begin
      if (IsSerialNrCorrect(StockMovrw.SerialNr)==false) then begin
        if (disperrf) then begin
          RecordCheckError(1209,StockMovrw.SerialNr,rownr,"SerialNr");      
        end;
        res = 1209; 
        goto LCheckStockMovRow;
      end;        
      if (blank(StockMovrw.SerialNr)) then begin
         if (disperrf) then begin
           RecordCheckError(1239,"",rownr,"SerialNr");      
         end;
         res = 1239; 
         goto LCheckStockMovRow;
      end;
    end;    
    if (INr.SerNrf==1) then begin
      if (SerialNrAvail(StockMovrw.ArtCode,StockMovrw.SerialNr,frlocation,quant)==false) then begin
        if (disperrf) then begin
          RecordCheckError(1240,"",rownr,"SerialNr");      
        end;
        res = 1240; 
        goto LCheckStockMovRow;
      end;
      for (j=0;j<rownr;j=j+1) begin
        MatRowGet(SMp,j,StockMov2rw);
         if ((StockMovrw.ArtCode==StockMov2rw.ArtCode) and (StockMovrw.SerialNr==StockMov2rw.SerialNr)) then begin
           if (disperrf) then begin
             RecordCheckError(1240,"",rownr,"SerialNr");      
           end;
           res = 1240; 
           goto LCheckStockMovRow;
         end;
      end;
    end else begin
      prev = 0;
      for (j=0;j<rownr;j=j+1) begin
        MatRowGet(SMp,j,StockMov2rw);
        if ((StockMovrw.ArtCode==StockMov2rw.ArtCode) and (StockMovrw.SerialNr==StockMov2rw.SerialNr)) then begin
          if (sentquantf) then begin
            prev = prev + StockMov2rw.SentQuant;
          end else begin
            prev = prev + StockMov2rw.Quant;
          end;
        end;
      end;
      prev = prev + quant;
      if (SerialNrAvail(StockMovrw.ArtCode,StockMovrw.SerialNr,frlocation,prev)==false) then begin
        if (disperrf) then begin
          RecordCheckError(1240,"",rownr,"SerialNr");      
        end;
        res = 1240; 
        goto LCheckStockMovRow;
      end;
    end;
  end;
LCheckStockMovRow:;  
  CheckStockMovRow = res;
  RETURN;
END;


global
updating function Integer CheckStockMovRecord(var record StockMovVc SMp,record StockMovVc SM2p,LongInt stat,LongInt check,Boolean disperrf)
BEGIN  
  record MainStockBlock MSb;
  record MainWHMBlock MainWHMRec;
  record LocationVc LocFrRec;
  record LocationVc LocToRec;
  record LocationVc LocThrouRec;
  record ItemStatusVc ISr;
  record INVc INr;
  row StockMovVc StockMovrw;
  row StockMovVc StockMov2rw;
  record TRVc gTRp;
  Integer res;
  LongInt oldnr,newnr;
  Integer i,rwcnt,j;
  Integer insertmode,updatemode;
  Boolean transreceivef,gentrans,transsendf;
  val prev,orsrv;
  Integer errcode;
  LongInt sernr;
  string 20 frlocation,tolocation,location;// Edit ************************** Monday, 21 February 2011 14:36:22
  string 255 objstr,errstr;
  record OrdSettBlock OrdSettRec;
  //string 50 location;// Edit ************************** Monday, 21 February 2011 12:27:36
  
  res = 0;
  insertmode = 1;//Rs_insert
  updatemode = 2;//Rs_update
  BlockLoad(MSb);
  BlockLoad(MainWHMRec);
  BlockLoad(OrdSettRec);
  if (stat==updatemode) then begin
    if (SMp.SerNr<=0) and (SM2p.OKFlag==0) then begin
      SMp.SerNr = SM2p.SerNr;
    end;
  end;      
  
  transreceivef = false;
  if (SMp.OKFlag!=0) then begin
    if (stat==insertmode) then begin transreceivef = true; end;
    if (stat==updatemode) then begin
      if (SM2p.OKFlag==0) then begin
        transreceivef = true;
        if (MSb.SetDelDateToCurrent!=0) then begin
          SMp.TransDate = CurrentDate;
        end;
      end;
    end;
  end;
  if (stat==updatemode) then begin
    if ((SM2p.OrdFlag==0) and (SMp.OrdFlag!=0)) then begin
      if (MSb.SetDelDateToCurrent!=0) then begin
        SMp.OrdTransDate = CurrentDate;
      end;
    end;
  end;    
  transsendf = false;
  if (SMp.SentOKFlag!=0) then begin
    if (stat==insertmode) then begin transsendf = true; end;
    if (stat==updatemode) then begin
      if (SM2p.SentOKFlag==0) then begin
        transsendf = true;
        if (MSb.SetDelDateToCurrent!=0) then begin
          SMp.SentTransDate = CurrentDate;
        end;
      end;
    end;
  end;
  if nonblank(SMp.SentTransDate) then begin
    if (SMp.OrdTransDate>SMp.SentTransDate) then begin
      if (disperrf) then begin
        RecordCheckError(20094,"",-1,"SentTransDate");      
      end;
      res = -1;
      goto LCheckStockMovRecord;
    end;
  end;
  if nonblank(SMp.TransDate) then begin
    if (SMp.SentTransDate>SMp.TransDate) then begin
      if (disperrf) then begin
        RecordCheckError(20095,"",-1,"TransDate");      
      end;
      res = -1;
      goto LCheckStockMovRecord;
    end;
  end;
  if blankdate(SMp.OrdTransDate) then begin
    if (disperrf) then begin
      RecordCheckError(1058,"",-1,"OrdTransDate");      
    end;
    res = -1;
    goto LCheckStockMovRecord;
  end;
  oldnr = SMp.SerNr;
  if (transsendf) then begin
    if (disperrf) then begin
      if (Date2Test("StockMovVc",SMp.SentTransDate,"SentTransDate",-1)==false) then begin
        res = -1;
        goto LCheckStockMovRecord;
      end;  
    end;
  end;
  /*if (transreceivef==false) and nonblankdate(SMp.SentTransDate) then begin
    if (SMp.SerNr==-1) then begin
      SMp.SerNr = NextSerNr("StockMovVc",SMp.SentTransDate,-1,false,"");
    end;
    if (SerNrTestStockMovVc(SMp.SerNr,SMp.SentTransDate,gentrans)==false) then begin
      if (disperrf) then begin
        RecordCheckError(1557,"",-1,"SerNr");      
      end;
      res = 1557; 
      goto LCheckStockMovRecord;
    end;
    if (disperrf) then begin
      if (Date2Test("StockMovVc",SMp.SentTransDate,"SentTransDate",-1)==false) then begin
        res = -1;
        goto LCheckStockMovRecord;
      end;  
    end;
  end else begin
    if (SMp.SerNr<=0) then begin
      SMp.SerNr = NextSerNr("StockMovVc",SMp.OrdTransDate,-1,false,"");
    end;
    if (SerNrTestStockMovVc(SMp.SerNr,SMp.OrdTransDate,gentrans)==false) then begin
      if (disperrf) then begin
        RecordCheckError(1557,"",-1,"SerNr");      
      end;
      res = 1557; 
      goto LCheckStockMovRecord;
    end;
    if (disperrf) then begin
      if (SMp.OKFlag==1) then begin
        if (Date2Test("StockMovVc",SMp.TransDate,"TransDate",-1)==false) then begin
          res = -1;
          goto LCheckStockMovRecord;
        end;
      end;    
    end;
  end;*/
  
  if (SMp.SerNr<=0) then begin
    SMp.SerNr = NextSerNr("StockMovVc",SMp.OrdTransDate,-1,false,"");
  end;
  if (SerNrTestStockMovVc(SMp.SerNr,SMp.OrdTransDate,gentrans)==false) then begin
    RecordCheckError(1557,"",-1,"SerNr");      
    res = 1557; 
    goto LCheckStockMovRecord;
  end;
  
  
  frlocation = SMp.FrLocation;
  LocFrRec.Code = frlocation;
  if (ReadFirstMain(LocFrRec,1,true)==false) then begin
    if (disperrf) then begin
      RecordCheckError(1120,SMp.FrLocation,-1,"FrLocation");      
    end;
    res = 1120; 
    goto LCheckStockMovRecord;    
  end;
  if (AllowedToTakeFromThisLoc(LocFrRec)==false) then begin
    if (disperrf) then begin
      RecordCheckError(1768,"",-1,"FrLocation");      
    end;
    res = -1;
    goto LCheckStockMovRecord;
  end;
  tolocation = SMp.ToLocation;
  LocToRec.Code = tolocation;
  if (ReadFirstMain(LocToRec,1,true)==false) then begin
    if (disperrf) then begin
      RecordCheckError(1120,SMp.ToLocation,-1,"ToLocation");
    end;
    res = 1120; 
    goto LCheckStockMovRecord;
  end;

  if (nonblank(SMp.ThrouLocation)) then begin
    if (SMp.FrLocation==SMp.ThrouLocation) then begin
      if (disperrf) then begin
        RecordCheckError(20081,SMp.ThrouLocation,-1,"ThrouLocation");
      end;
      res = 1120; 
      goto LCheckStockMovRecord;
    end;
    if (SMp.ThrouLocation==SMp.ToLocation) then begin
      if (disperrf) then begin
        RecordCheckError(20082,SMp.ThrouLocation,-1,"ThrouLocation");
      end;
      res = 1120; 
      goto LCheckStockMovRecord;
    end;
  end;
  if (SMp.SentOKFlag!=0) then begin
    LocThrouRec.Code = SMp.ThrouLocation;
    if (ReadFirstMain(LocThrouRec,1,true)==false) then begin
      if (disperrf) then begin
        RecordCheckError(1120,SMp.ThrouLocation,-1,"ThrouLocation");
      end;
      res = 1120; 
      goto LCheckStockMovRecord;
    end;
  end;
  if (SMp.SentOKFlag==0) and (SMp.OKFlag!=0) then begin
    if (nonblank(SMp.ThrouLocation)) then begin
      if (disperrf) then begin
        RecordCheckError(1084,SMp.ThrouLocation,-1,"ThrouLocation");
      end;
      res = 1120; 
      goto LCheckStockMovRecord;
    end;
  end;
  errcode = CheckRates(SMp.CurncyCode,SMp.FrRate,SMp.ToRateB1,SMp.ToRateB2,SMp.BaseRate1,SMp.BaseRate2,errstr);
  if (errcode!=0) then begin
    if (disperrf) then begin
      RecordCheckError(errcode,"",-1,errstr);      
    end;
    res = -1; 
    goto LCheckStockMovRecord;
  end;          
  rwcnt = MatRowCnt(SMp);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(SMp,i,StockMovrw);    
    
    // Edit Start ---------------------------------------------- Edit Start
	//Monday, 21 February 2011 11:13:44
         /* if ((SMp.OrdFlag!=0) or SMp.SentOKFlag!=0 or ORr.OKFlag!=0) then begin
              switch (INr.ItemType) begin
                case 1:
                  location = frlocation;
                  orsrv = StockMovrw.OrdQuant;
                  FindStockValue(StockMovrw.ArtCode,location,ISr);
                  for (j=0;j<i;j=j+1) begin
                    MatRowGet(SMp,j,StockMov2rw);
                    if (StockMov2rw.ArtCode==StockMovrw.ArtCode) then begin
                      orsrv = orsrv + StockMov2rw.OrdQuant;
                    end;
                  end;
                  if(ISr.RsrvQty<0) then begin
                    ISr.RsrvQty = 0;
                  end;
                  if (((orsrv)>(ISr.Instock-ISr.RsrvQty))) then begin
                    RecordCheckError(20011,"",rownr,"OrdQuant");      
                    res = -1;
                    goto LCheckStockMovRow;
                  end;
                case 2:
                //sabaka WTFaka
              end;
          end;*/
	// Edit End ---------------------------------------------- Edit End
    
    //----------------------------------------------------------------------------------------------------BEGIN  
    if(nonblank(StockMovrw.SerialNr)) then begin
      if(SMp.SentOKFlag==0)then begin
        if(SerialNrAvail(StockMovrw.ArtCode,StockMovrw.SerialNr,SMp.FrLocation,StockMovrw.Quant)==false) then begin
          RecordCheckError(1240,"",i,"SerialNr");      
          res = 1240; 
          goto LCheckStockMovRecord;
        end;    
      end;
      
      if(SMp.SentOKFlag!=0 and SM2p.SentOKFlag!=0)then begin
        if(SerialNrAvail(StockMovrw.ArtCode,StockMovrw.SerialNr,SMp.ThrouLocation,StockMovrw.Quant)==false) then begin
          RecordCheckError(1240,"",i,"SerialNr");      
          res = 1240; 
          goto LCheckStockMovRecord;
        end;    
      end;
    end;
    //----------------------------------------------------------------------------------------------------END
    if (StockMovrw.OrdQuant!=0) then begin
      if (StockMovrw.OrdQuant < StockMovrw.SentQuant) then begin
        if (disperrf) then begin
          RecordCheckError(20083,"",0,"SentQuant");
        end;
        res = 20083; 
        goto LCheckStockMovRecord;
      end;
      if blank(StockMovrw.SentQuant) then begin
        if (StockMovrw.OrdQuant < StockMovrw.Quant) then begin
          if (disperrf) then begin
            RecordCheckError(20085,"",0,"Quant");
          end;
          res = 20085; 
          goto LCheckStockMovRecord;
        end;
      end;
    end;
    if (StockMovrw.SentQuant!=0) then begin
      if (StockMovrw.SentQuant < StockMovrw.Quant) then begin
        if (disperrf) then begin
          RecordCheckError(20084,"",0,"Quant");
        end;
        res = 20084; 
        goto LCheckStockMovRecord;
      end;
    end;  
    if (StockMovrw.SentQuant!=0) then begin
      if (SMp.SentOKFlag==0) and (SMp.OKFlag!=0) then begin
        if (disperrf) then begin
          RecordCheckError(1084,"",i,"SentQuant");    
        end;
        res = errcode;
        goto LCheckStockMovRecord;
      end;
    end;
    if (ReadFirstItem(StockMovrw.ArtCode,INr,true,true)==false) then begin
      if (disperrf) then begin
        RecordCheckError(1233,"",i,"ArtCode");      
      end;
      res = 1233; 
      goto LCheckStockMovRecord;
    end;
    objstr = SMp.Objects;
    if (nonblank(objstr)) then begin
      objstr = objstr & ",";
    end;
    objstr = objstr & StockMovrw.Objects;
    errcode = CheckObjs("",objstr,errstr);
    if (errcode!=0) then begin
      if (disperrf) then begin
        RecordCheckError(errcode,errstr,i,"Objects");    
      end;
      res = errcode;
      goto LCheckStockMovRecord;
    end;
    if (INr.ItemType==2) then begin
      if (disperrf) then begin
        RecordCheckError(1826,"",i,"ArtCode");      
      end;
      res = 1826; 
      goto LCheckStockMovRecord;
    end;
    
  // Edit Start ---------------------------------------------- Edit Start
	//Monday, 21 February 2011 13:04:32
	  
    if (SMp.Reserved!=0 or SMp.OrdFlag!=0 or SMp.OKFlag!=0 or SMp.SentOKFlag!=0) then begin// Edit ************************** Monday, 21 February 2011 12:45:48
      if (OrdSettRec.dontAllowOverreserving!=0) then begin
        if(SMp.SentOKFlag!=0 and SM2p.SentOKFlag!=0)then begin
          location = SMp.ThrouLocation;
        end else begin
          location = SMp.FrLocation;
        end;
        FindStockValue(StockMovrw.ArtCode,location,ISr);
        orsrv = StockMovrw.Quant;
          if (RecordValid(SM2p)) then begin
              for (j=0;j<i;j=j+1) begin
                MatRowGet(SM2p,j,StockMov2rw);
                if (StockMov2rw.ArtCode==StockMovrw.ArtCode) then begin
                  orsrv = orsrv + StockMov2rw.Quant;
                end;
              end;
          end;
        if ((orsrv)>(ISr.Instock-ISr.RsrvQty)) then begin // StockRsrvQty ?
          if (disperrf) then begin
            RecordCheckError(20011,"",i,"Quant");      
          end;
          res = -1;
          goto LCheckStockMovRecord;
        end;
      end;
    end;
	
	// Edit End ---------------------------------------------- Edit End
	
	
	  /*if (SMp.Reserved!=0 or SMp.OrdFlag!=0 or SMp.SentOKFlag!=0 or SMp.OKFlag!=0) then begin// Edit ************************** Monday, 21 February 2011 12:45:48
      if (OrdSettRec.dontAllowOverreserving!=0) then begin
        FindStockValue(StockMovrw.ArtCode,SMp.FrLocation,ISr);
        orsrv = 0;
        if (stat==updatemode) then begin        
          if (RecordValid(SM2p)) then begin
            if (SM2p.Reserved!=0) then begin
              for (j=0;j<MatRowCnt(SM2p);j=j+1) begin
                MatRowGet(SM2p,j,StockMov2rw);
                if (StockMov2rw.ArtCode==StockMovrw.ArtCode) then begin
                  orsrv = orsrv + StockMov2rw.Quant;
                end;
              end;
            end;
          end;
        end;
        if ((StockMovrw.OrdQuant)>(ISr.Instock-ISr.RsrvQty+orsrv)) then begin // StockRsrvQty ?
          if (disperrf) then begin
            RecordCheckError(20011,"",i,"OrdQuant");      
          end;
          res = -1;
          goto LCheckStockMovRecord;
        end;
      end;
    end;
	*/
    
    if (SMp.SentOKFlag!=0) then begin
      if (blank(StockMovrw.SentQuant)) then begin
        if (disperrf) then begin
          RecordCheckError(1058,"",i,"SentQuant");      
        end;
        res = 1826; 
        goto LCheckStockMovRecord;
      end;
    end;
    if (transsendf) then begin
      errcode = CheckStockMovRow(SMp,StockMovrw,INr,MainWHMRec,MSb,i,SMp.FrLocation,SMp.ThrouLocation,true,disperrf,check);
      if (errcode!=0) then begin 
        res = -1;
        goto LCheckStockMovRecord;
      end;        
    end else begin
      if (transreceivef) then begin
        if (blank(SMp.ThrouLocation)) then begin
          errcode = CheckStockMovRow(SMp,StockMovrw,INr,MainWHMRec,MSb,i,SMp.FrLocation,SMp.ToLocation,false,disperrf,check);
        end else begin
          errcode = CheckStockMovRow(SMp,StockMovrw,INr,MainWHMRec,MSb,i,SMp.ThrouLocation,SMp.ToLocation,false,disperrf,check);
        end;
        if (errcode!=0) then begin 
          res = -1;
          goto LCheckStockMovRecord;
        end;
      end else begin
        if (blank(SMp.ThrouLocation)) then begin
          if (StockMovrw.SentQuant>0) then begin
            if (disperrf) then begin
              RecordCheckError(1058,"",-1,"ThrouLocation");      
            end;
            res = 1058;
            goto LCheckStockMovRecord;
          end;
        end;
      end;
    end;
    if (transsendf) then begin
      errcode = CheckStockMovRowFromPosition(SMp,StockMovrw,LocFrRec,INr,MainWHMRec,i,true,disperrf);
      if (errcode!=0) then begin 
        res = -1;
        goto LCheckStockMovRecord;
      end;
    end else begin
      if (transreceivef) then begin
        errcode = CheckStockMovRowFromPosition(SMp,StockMovrw,LocFrRec,INr,MainWHMRec,i,false,disperrf);
        if (errcode!=0) then begin 
          res = -1;
          goto LCheckStockMovRecord;
        end;
      end;
    end;
    if (transreceivef) then begin
/*
already checked few lines above
      if (nonblank(SMp.ThrouLocation)) then begin
        errcode = CheckStockMovRow(SMp,StockMovrw,INr,MainWHMRec,MSb,i,SMp.ThrouLocation,SMp.ToLocation,true,disperrf,check);
        if (errcode!=0) then begin 
          res = -1;
          goto LCheckStockMovRecord;
        end;
      end;
*/      
      errcode = CheckStockMovRowToPosition(SMp,StockMovrw,LocToRec,INr,MainWHMRec,i,disperrf);
      if (errcode!=0) then begin 
        res = -1;
        goto LCheckStockMovRecord;
      end;
    end;
  end;
  
  if (check!=0) then begin
   UpdateStockMovFIFO(SMp,SM2p,stat);///////???
  end;
  
  
  /*
  rwcnt = Matrowcnt(SMp);
  For(i=0;i<rwcnt;i=i+1) begin
    MatrowGet(SMp,i,StockMovrw);
    if(StockMovrw.NewPrice==0) then begin
      RecordCheckError(1574,"",i,"NewPrice");
      res = -1;
      goto LCheckStockMovRecord;
    end;
	end;
	
	*/
  
  if (transsendf) then begin
    if (UserCanAction("SentStockMovOK",true)==false) then begin
      if (disperrf) then begin
        RecordCheckError(1274,StringFromStringSet(3,"SentStockMovOK"),-1,"SerNr");      
      end;
      res = -1;
      goto LCheckStockMovRecord;
    end;
    if (MSb.Chronology!=0) then begin
      if (ExistStockTrans(frlocation,SMp.SentTransDate,
          errcode,"StockMovVc",sernr,MSb.Chronology)) then begin
         if (disperrf) then begin
           RecordCheckError(errcode,"",-1,"SentTransDate");      
         end;
         res = errcode; 
         goto LCheckStockMovRecord;
      end;
    end;
    if (CanOKStockRecord==false) then begin
      if (disperrf) then begin
        RecordCheckError(1766,"",-1,"SerNr");      
      end;
      res = -1; 
      goto LCheckStockMovRecord;
    end;
  end;
  if (transreceivef) then begin
    if (UserCanAction("StockMovOK",true)==false) then begin
      if (disperrf) then begin
        RecordCheckError(1274,StringFromStringSet(3,"StockMovOK"),-1,"SerNr");      
      end;
      res = -1;
      goto LCheckStockMovRecord;
    end;
    if (stat==updatemode) then begin sernr = SM2p.SerNr; end;
    if (MSb.Chronology!=0) then begin
      if (ExistStockTrans(frlocation,SMp.TransDate,
          errcode,"StockMovVc",sernr,MSb.Chronology)) then begin
         if (disperrf) then begin
           RecordCheckError(errcode,"",-1,"TransDate");      
         end;
         res = errcode; 
         goto LCheckStockMovRecord;
      end;
      if (ExistStockTrans(tolocation, SMp.TransDate,
          errcode,"StockMovVc", sernr,MSb.Chronology)) then begin
         if (disperrf) then begin
           RecordCheckError(errcode,"",-1,"TransDate");      
         end;
         res = errcode; 
         goto LCheckStockMovRecord;
      end;
      if (nonblank(SMp.ThrouLocation)) then begin
        if (ExistStockTrans(SMp.ThrouLocation,SMp.TransDate,
            errcode,"StockMovVc",sernr,MSb.Chronology)) then begin
           if (disperrf) then begin
             RecordCheckError(errcode,"",-1,"TransDate");      
           end;
           res = errcode; 
           goto LCheckStockMovRecord;
        end;      
      end;
    end;
  end;  
  if (gentrans==false) then begin transsendf = false; end;
  if (gentrans==false) then begin transreceivef = false; end;
  if (transsendf) then begin
    errcode = MakeTransFromStockMov(gTRp,SMp,LocFrRec,LocThrouRec,false,SentSTMovYc);
    if (errcode!=0) then begin
      if (disperrf) then begin
        RecordCheckError(errcode,"",-1,"SerNr");      
      end;
      res = errcode; 
      goto LCheckStockMovRecord;
    end;
    if (disperrf) then begin
      if ((gTRp.Number>0) and (gTRp.IntYc==SentSTMovYc)) then begin
        errstr = CheckTrans(gTRp,2,true);
        if (nonblank(errstr)) then begin
          if (disperrf) then begin
            RecordCheckError(1085,errstr,-1,"SerNr");      
          end;
          res = -1;
          goto LCheckStockMovRecord;
        end;
        SaveTrans(gTRp);
      end;
    end;
  end;
  
  
  
  if (transreceivef) then begin
    if (blank(SMp.ThrouLocation)) then begin
      if (SMp.SentOKFlag!=0) then begin
        errcode = MakeTransFromStockMov(gTRp,SMp,LocThrouRec,LocToRec,false,STMovYc);
      end else begin
        errcode = MakeTransFromStockMov(gTRp,SMp,LocFrRec,LocToRec,false,STMovYc);
      end;
    end else begin
      errcode = MakeTransFromStockMov(gTRp,SMp,LocThrouRec,LocToRec,false,STMovYc);
    end;
    if (errcode!=0) then begin
      if (disperrf) then begin
        RecordCheckError(errcode,"",-1,"SerNr");      
      end;
      res = errcode; 
      goto LCheckStockMovRecord;
    end;
    if (disperrf) then begin
      if ((gTRp.Number>0) and (gTRp.IntYc==STMovYc)) then begin
        errstr = CheckTrans(gTRp,2,true);
        if (nonblank(errstr)) then begin
          if (disperrf) then begin
            RecordCheckError(1085,errstr,-1,"SerNr");      
          end;
          res = -1;
          goto LCheckStockMovRecord;
        end;
        SaveTrans(gTRp);
      end;
    end;
  end;
LCheckStockMovRecord:;  
  CheckStockMovRecord = res;
  RETURN;
END;
  
global
updating function LongInt StockMovVcRecordCheck(var record StockMovVc SMp,record StockMovVc SM2p,LongInt stat,LongInt check)
BEGIN
  LongInt res;
  LongInt oldnr,newnr;

  res = 0;
  if (CheckStockMovRecord(SMp,SM2p,stat,check,true)!=0) then begin
    res = -1;
    goto LStockMovVcRecordCheck;
  end;
LStockMovVcRecordCheck:;
  StockMovVcRecordCheck = res;
  RETURN;
END;

global
updating function LongInt StockMovVcRecordSaveClient(var record StockMovVc StockMovp,record StockMovVc StockMov2p,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record AutoActionBlock AutoActionRec;
	
	Messagebox(31029,"");
 /*BlockLoad(AutoActionRec);
  if (AutoActionRec.ProdPalletLabelPrinting!=0) then begin
    PrintPalletLabels(StockMovp);
  end;  */    
  res = 1;
  StockMovVcRecordSaveClient = res;
  RETURN;
END;
