external procedure TrBal(record TRVc,var val,var val,Integer);
external function Boolean ReadTAcc(string,string,Boolean,var record TAccVc);
external procedure SetTRObjectRows(var record TRVc);
external function LongInt GetCurUserLastNr(string);
external procedure TRSumup(var record TRVc,var val);
external function Boolean TestTranspCorst(record TRVc);
external function Boolean RecordSupportExists(string,string,LongInt);
external function Integer GetVATLaw();
external function Boolean VATCodeExists(string);
external function Integer CheckObjs(string,string,var string);
external function Boolean SLAccTest(string,Integer);
external function Boolean DateLocked(Date,string);
external function Integer GetIntYc(Date);
external function Boolean SerNrTestTRVc(LongInt,Date,var Boolean);
external updating procedure BatchMain(record TRVc);


procedure ChangeLastTrRow(record TRVc TRp,val temp2)
BEGIN
  row TRVc TRrw;
  Integer rwcnt;
  
  rwcnt = MatRowCnt(TRp);
  if (rwcnt>0) then begin
    MatRowGet(TRp,rwcnt-1,TRrw);
    if (temp2!=0) then begin
      if (TRrw.DebVal2==0) then begin
        TRrw.CredVal2 = TRrw.CredVal2 + temp2;
      end else begin
        TRrw.DebVal2 = TRrw.DebVal2 - temp2;
      end;
    end;
    MatRowPut(TRp,rwcnt-1,TRrw);
  end;
  RETURN;
END;

global
updating function LongInt TRVcRecordCheck(record TRVc TRp,record TRVc TR2p,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record BaseCurBlock BaseCurr;
  record TRGenBlock TRGenRec;
  record CYBlock CompYear;
  record SRBlock SRRec;
  record IPrsVc IPrsr;  
  record OPrsVc OPrsr;  
  record AccVc Accr;
  record CUVc CUr;  
  record CUVc VEr;  
  record TRVc lTRr;
  record VIVc VIr;  
  record IVVc IVr;  
  row TRVc TR2rw;
  row TRVc TRrw;
  val temp,temp2;
  LongInt oldnr;
  LongInt newnr;
  Boolean gentrans,entinvnrf;
  string 255 tstr;
  Integer i,orwcnt,rwcnt,onaccf,errcode;
  Integer insertmode,updatemode;
  Integer kk;
  row TRVc TRtrw;
  string 255 errstr;
  Boolean testf;
  record TAccVc TAccr;
  record CurncyCodeVc CurncyCoder;
  
    
  res = 0;
  insertmode = 1;//Rs_insert
  updatemode = 2;//Rs_update
  BlockLoad(SRRec);
  BlockLoad(CompYear);
  BlockLoad(TRGenRec);
  BlockLoad(BaseCurr);
  SetTRObjectRows(TRp);
  oldnr = TRp.Number;
  if (TRp.Number<=0) then begin
    newnr = GetCurUserLastNr("TRVc");    
    if (newnr==-1) then begin
      newnr = SRRec.LastTRNr;
    end;    
    TRp.Number = NextSerNr("TRVc",TRp.TransDate,newnr,false,"");
  end;
  if (TRp.IntYc<=200) then begin// Powerfull 
    if ((stat==insertmode) or (TRp.Number!=Tr2p.Number) or (TRp.TransDate!=Tr2p.TransDate)) then begin
      if (SerNrTestTRVc(TRp.Number,TRp.TransDate,gentrans)==false) then begin
        RecordCheckError(1557,"",-1,"Number");      
        res = -1; 
        goto LTRVcRecordCheck;
      end;
    end;
  end;
  if (blankdate(TRp.TransDate)) then begin
    RecordCheckError(1024,"",-1,"TransDate");      
    res = -1; 
    goto LTRVcRecordCheck;
  end;
  if (TRp.IntYc<=200) then begin
    TRp.IntYc = GetIntYc(TRp.TransDate);
  end;
  if (TRp.IntYc<=1) then begin
    RecordCheckError(1047,"",-1,"TransDate");      
    res = -1; 
    goto LTRVcRecordCheck;
  end;
  if (DateLocked(TRp.TransDate,"TRVc")) then begin
    RecordCheckError(1046,"",-1,"TransDate");      
    res = -1; 
    goto LTRVcRecordCheck;
  end;
  if (stat==updatemode) then begin  
    if (DateLocked(TR2p.TransDate,"TRVc")) then begin
      RecordCheckError(1046,"",-1,"TransDate");      
      res = -1; 
      goto LTRVcRecordCheck;
    end;
  end;
  rwcnt = MatRowCnt(TRp);
  if (stat==updatemode) then begin
    orwcnt = MatRowCnt(Tr2p);
  end;
  if (rwcnt==0) then begin
    RecordCheckError(1030,"",0,"AccNumber");      
    res = -1; 
    goto LTRVcRecordCheck;
  end;
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(TRp,i,TRrw);
    if (stat==updatemode) then begin
      if (orwcnt>i) then begin
        MatRowGet(Tr2p,i,TR2rw);
      end;
    end;
    if (TRrw.Typ==1) then begin
      if (TRGenRec.IVGenTrans==1) then begin
        if ((nonblankdate(TRGenRec.IVStartDate)) and (TRp.TransDate<TRGenRec.IVStartDate)) then begin
          RecordCheckError(20856,"",-1,"TransDate");      
          res = -1; 
          goto LTRVcRecordCheck;
        end;   
      end else begin
        RecordCheckError(20856,"",-1,"TransDate");      
        res = -1; 
        goto LTRVcRecordCheck;
      end;
    end;
    if (TRrw.Typ==2) then begin
      if (TRGenRec.VIGenTrans==1) then begin
        if ((nonblankdate(TRGenRec.VIStartDate)) and (TRp.TransDate<TRGenRec.VIStartDate)) then begin
          RecordCheckError(20856,"",-1,"TransDate");      
          res = -1; 
          goto LTRVcRecordCheck;
        end;
      end else begin
        RecordCheckError(20856,"",-1,"TransDate");      
        res = -1; 
        goto LTRVcRecordCheck;
      end;
    end;
    switch (TRrw.stp) begin
      case 1:
        if (TRrw.ovst==0) then begin
          if (nonblank(TRrw.AccNumber)) then begin
            Accr.AccNumber = TRrw.AccNumber;
            if (ReadFirstMain(Accr,1,true)==false) then begin
              RecordCheckError(1007,TRrw.AccNumber,i,"AccNumber");      
              res = -1; 
              goto LTRVcRecordCheck;
            end;
            if ((Accr.blockedFlag!=0) or (Accr.GroupAcc!=0)) then begin
              RecordCheckError(1084,TRrw.AccNumber,i,"AccNumber");      
              res = -1; 
              goto LTRVcRecordCheck;
            end;
            if (SLAccTest(TRrw.AccNumber,0)) then begin
              if (TRrw.Typ==0) then begin
                if (CompYear.usePrel==0) then begin
                  if (stat==insertmode) then begin
                    RecordCheckError(1082,TRrw.AccNumber,i,"AccNumber");      
                    res = -1; 
                    goto LTRVcRecordCheck;
                  end else begin
                    if (i>=orwcnt ) then begin
                      RecordCheckError(1082,TRrw.AccNumber,i,"AccNumber");      
                      res = -1; 
                      goto LTRVcRecordCheck;
                    end;
                  end;
                end;
              end;
            end;
            if (nonblank(TRrw.Curncy)) then begin
              CurncyCoder.CurncyCode = TRrw.Curncy;
              if (ReadFirstMain(CurncyCoder,1,true)==false) then begin
                RecordCheckError(1260,TRrw.Curncy,i,"Curncy");      
                res = -1; 
                goto LTRVcRecordCheck;
              end;
            end;
            
            errcode = CheckObjs(TRrw.AccNumber,TRrw.Objects,errstr);
            if (errcode!=0) then begin
              RecordCheckError(errcode,errstr,i,"Objects");      
              res = -1; 
              goto LTRVcRecordCheck;
            end;
            if ((blank(TRrw.DebVal)) and (blank(TRrw.CredVal)) and (currentuser!="SA")) then begin// Edit ************************** Wednesday, 1 June 2011 09:51:19
              RecordCheckError(1009,"",i,"DebVal");      
              res = -1; 
              goto LTRVcRecordCheck;// Edit ************************** Tuesday, 7 June 2011 09:38:45
            end;
            if (nonblank(TRrw.VATCode)) then begin
              if (VATCodeExists(TRrw.VATCode)==false) then begin
                RecordCheckError(1120,TRrw.VATCode,i,"VATCode");      
                res = -1; 
                goto LTRVcRecordCheck;
              end;
            end;
            if (nonblank(Accr.Curncy)) then begin
              if (TRrw.Curncy!=Accr.Curncy) then begin
                RecordCheckError(1217,Accr.Curncy,i,"Curncy");      
                res = -1; 
                goto LTRVcRecordCheck;
              end;
              if (BaseCurr.BaseCur1!=Accr.Curncy) and (BaseCurr.BaseCur2!=Accr.Curncy) then begin
                if ((blank(TRrw.CurDebVal)) and (blank(TRrw.CurCredVal))) then begin// Edit ************************** Tuesday, 7 June 2011 09:38:37
                  RecordCheckError(1009,"",i,"CurDebVal");      
                  res = -1; 
                  goto LTRVcRecordCheck;
                end;
              end;
            end;          
            if (nonblank(TRrw.CompCode)) then begin
              if (TRrw.Typ==0) then begin
                RecordCheckError(1249,"",i,"CompCode");      
                res = -1; 
                goto LTRVcRecordCheck;
              end;
              if (TRrw.Typ==1) then begin              
                CUr.Code = TRrw.CompCode;
                if (ReadFirstMain(CUr,1,true)==false) then begin
                  RecordCheckError(1120,TRrw.CompCode,i,"CompCode");      
                  res = -1; 
                  goto LTRVcRecordCheck;
                end else begin
                  onaccf = CUr.OnAccount;
                end;
                if (nonblankdate(TRrw.DueDate)) then begin
                  if (TRrw.CredVal!=0) then begin//recipt
                    IVr.SerNr = TRrw.SerNr;
                    if (ReadFirstMain(IVr,1,true)) then begin
                      if (IVr.InvDate>TRp.TransDate) then begin
                        RecordCheckError(20852,"",i,"SerNr");      
                        res = -1; 
                        goto LTRVcRecordCheck;
                      end;
                    end;
                  end;
                end;
              end;
              if (TRrw.Typ==2) then begin
                VEr.Code = TRrw.CompCode;
                if (ReadFirstMain(VEr,1,true)==false) then begin
                  RecordCheckError(1120,TRrw.CompCode,i,"CompCode");      
                  res = -1; 
                  goto LTRVcRecordCheck;
                end else begin
                  onaccf = VEr.OnAccount;
                end;
                if (nonblankdate(TRrw.DueDate)) then begin
                  if (TRrw.DebVal!=0) then begin//payment
                    VIr.SerNr = TRrw.SerNr;
                    if (ReadFirstMain(VIr,1,true)) then begin
                      if (VIr.InvDate>TRp.TransDate) then begin
                        RecordCheckError(20852,"",i,"SerNr");      
                        res = -1; 
                        goto LTRVcRecordCheck;
                      end;
                    end;
                  end;
                end;
              end;
            end;
            if (TRrw.SerNr!=-1) then begin
              if (TRrw.Typ==0) then begin                
                for (kk=0;kk<rwcnt;kk=kk+1) begin
                   MatRowGet(TRp,kk,TRtrw);
                   if (TRtrw.SerNr==TRrw.SerNr) then begin
                     if (TRtrw.Typ!=0) then begin goto LTRVcRecordCheck11; end;
                   end;
                end;  
                RecordCheckError(1123,"",kk,"SerNr");      
                res = -1; 
                goto LTRVcRecordCheck;
LTRVcRecordCheck11:;                
              end;
              if (GetVATLaw()!=28) then begin//checkbox needed,LangLatvian
                if (TRrw.Typ!=0) then begin
                  for (kk=0;kk<rwcnt;kk=kk+1) begin
                    MatRowGet(TRp,kk,TRtrw);
                    if (TRtrw.SerNr==TRrw.SerNr) then begin
                      if (kk!=i) then begin
                        if (TRtrw.Typ!=0) then begin
                          if (TRtrw.Typ==TRrw.Typ) then begin
                            testf = false;
                            switch (TRtrw.Typ) begin
                              case 1:
                                IVr.SerNr = TRtrw.SerNr;
                                testf = !ReadFirstMain(IVr,1,true);
                              case 1:
                                VIr.SerNr = TRtrw.SerNr;
                                testf = !ReadFirstMain(VIr,1,true);
                            end;
                            if (testf) then begin//only invoices issued in NL
                              RecordCheckError(1115," flag 3",kk,"SerNr");      
                              res = -1; 
                              goto LTRVcRecordCheck;
                            end;
                          end;
                        end;
                      end;
                    end;
                  end; 
                end;
              end;  
              if (TRrw.Typ==1) then begin                
                RecordNew(IPrsr);
                IPrsr.IVNr = TRrw.SerNr;
                IPrsr.CustCode = "";
                IPrsr.AccNr = "";
                if (ReadFirstKey("IVKey",IPrsr,1,true)==true) then begin
                  /*if (TRrw.CompCode!=IPrsr.CustCode) then begin
                    RecordCheckError(1250,IPrsr.CustCode,i,"CompCode");   // Edit ************************** Wednesday, 11 May 2011 14:20:15   
                    res = -1; 
                    goto LTRVcRecordCheck;
                  end;*/
                  if (RecordSupportExists("ARVc","TRVc",TRrw.SerNr)) then begin
                    RecordCheckError(1115," flaf 4 ",i,"SerNr");      
                    res = -1; 
                    goto LTRVcRecordCheck;
                  end;
                end else begin
                  if (TRp.IntYc<201) then begin
                    if (TRrw.CredVal!=0) then begin
                      RecordCheckError(1133,TRrw.SerNr,i,"SerNr");      
                      res = -1; 
                      goto LTRVcRecordCheck;
                    end;
                  end;
                end;
              end;
              if (TRrw.Typ==2) then begin              
                RecordNew(OPrsr);
                OPrsr.VINr = TRrw.SerNr;
                OPrsr.VECode = "";
                if (ReadFirstKey("VIKey",OPrsr,1,true)==true) then begin
                  if (TRrw.CompCode!=OPrsr.VECode) then begin
                    RecordCheckError(1250,OPrsr.VECode,i,"CompCode");      
                    res = -1; 
                    goto LTRVcRecordCheck;
                  end;
                  if (RecordSupportExists("APVc","TRVc",TRrw.SerNr)) then begin
                    RecordCheckError(1560,"",i,"SerNr");      
                    res = -1; 
                    goto LTRVcRecordCheck;
                  end;
                end else begin
                  if (TRp.IntYc<201) then begin
                    if (TRrw.DebVal!=0) then begin
                      RecordCheckError(1133,OPrsr.VINr,i,"SerNr");      
                      res = -1; 
                      goto LTRVcRecordCheck;
                    end;
                  end;
                end;
              end;
            end else begin
              entinvnrf = false;            
              switch (TRrw.Typ) begin
                case 1:
                  if (TRrw.CredVal!=0) then begin
                    if (onaccf==0) then begin entinvnrf = true; end;
                  end else begin
                    if (TRrw.DebVal!=0) then begin 
                      if (onaccf==0) then begin entinvnrf = true; end;
                    end;
                  end;  
                case 2:
                  if (TRrw.DebVal!=0) then begin
                    if (onaccf==0) then begin entinvnrf = true; end;
                  end else begin
                    if (TRrw.CredVal!=0) then begin
                      if (onaccf==0) then begin entinvnrf=true; end;
                    end;
                  end;  
                otherwise
                  ;
              end;
              if (entinvnrf==true) then begin
                RecordCheckError(1116,TRrw.SerNr,i,"SerNr");      
                res = -1; 
                goto LTRVcRecordCheck;
              end;  
            end;
          end else begin            
            if ((TRrw.DebVal!=0) or (TRrw.CredVal!=0)) then begin
              RecordCheckError(1010,TRrw.AccNumber,i,"AccNumber");      
              res = -1; 
              goto LTRVcRecordCheck;
            end;
            if (TRrw.Typ!=0) then begin
              RecordCheckError(1010,TRrw.AccNumber,i,"AccNumber");      
              res = -1; 
              goto LTRVcRecordCheck;
            end;
            RecordCheckError(1010,"",i,"AccNumber");      
            res = -1; 
            goto LTRVcRecordCheck;            
          end;
          if (nonblank(TRrw.TAccNumber)) then begin
            if (ReadTAcc(TRrw.TAccNumber,TRrw.Objects,nonblank(TRrw.DebVal),TAccr)) then begin
              RecordCheckError(1007,TRrw.AccNumber,i,"TAccNumber");      
              res = -1; 
              goto LTRVcRecordCheck;
            end;
            if (TAccr.Closed!=0) then begin
              RecordCheckError(1084,TAccr.AccNumber,i,"TAccNumber");      
              res = -1; 
              goto LTRVcRecordCheck;
            end;
          end;
/*          
          if (TRrw.Typ==0) then begin
            if (SLAccTest(TRrw.AccNumber,0)) then begin
              RecordCheckError(1082,TRrw.AccNumber,i,"AccNumber");      
              res = -1; 
              goto LTRVcRecordCheck;
            end;
          end;          
*/
        end else begin
          if (SLAccTest(TRrw.AccNumber,0)) then begin
            RecordCheckError(1082,TRrw.AccNumber,i,"AccNumber");      
            res = -1; 
            goto LTRVcRecordCheck;
          end;
        end;
      case 2:
        if (blank(TRrw.Sign)) then begin
          RecordCheckError(1025,"",i,"Sign");      
          res = -1; 
          goto LTRVcRecordCheck;
        end;
      case 4:
        lTRr.Number = TRrw.CorrNr;
        lTRr.IntYc = TRrw.CorrYc;
        if (lTRr.IntYc==0) then begin
          lTRr.IntYc = TRp.IntYc;
          TRrw.CorrYc = TRp.IntYc;
        end;        
        if (ReadFirstMain(lTRr,2,true)==false) then begin
          RecordCheckError(1026,"",i,"CorrNr");      
          res = -1; 
          goto LTRVcRecordCheck;
        end;
    end;
  end;
  if (CompYear.TRCheckCorsp!=0) then begin
    if (TestTranspCorst(TRp)==false) then begin
      RecordCheckError(1583,"",rwcnt-1,"DebVal");      
      res = -1; 
      goto LTRVcRecordCheck;
    end;
  end;
  TrBal(TRp,temp,temp2,-1);
  if (temp!=0) then begin
    RecordCheckError(1011,"",rwcnt-1,"DebVal");      
    res = -1; 
    goto LTRVcRecordCheck;
  end;
  if (temp2!=0) then begin
    ChangeLastTrRow(TRp,temp2);
    TRSumup(TRp,temp);
  end;
LTRVcRecordCheck:;
  
  if(TRp.IntYc==666)then begin
  BatchMain(TRp);
  end;
  
  if (res!=0) then begin TRp.Number = oldnr; end;
  TRVcRecordCheck = res;
  RETURN;
END;