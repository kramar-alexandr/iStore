external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external function string 255 CreateInvoiceNumber(LongInt);
external function val MulRateToBase1(var string,val,val,val,val,val,val,Integer);
external function val MulWithRateToBase1(var string,Date,val,Integer);
external procedure HT2Per(Date, Date , var string);
external procedure HTSaleMan(string, var string);
external procedure PSFindPaydAmount2(record IPrsVc,Boolean,var val,var val,var Date);
external procedure FindSalesExVat(string,val,Integer,Integer,var val);


procedure PrintIVHeader(record RcVc RepSpec,record IVVc IVr,var LongInt oldSerNr)
BEGIN
  record CUVc CUr;
  string 255 tstr;
  
  if (oldSerNr!=IVr.SerNr) then begin
    StartFormat(15);
    tstr = CreateInvoiceNumber(IVr.SerNr);
    OutString(0,"DblCustPS2",tstr,false);
    if (RepSpec.flags[4]!=0) then begin
      OutString(100,0,IVr.CustCode,false);
      OutString(110,0,IVr.Addr0,false);
      if (RepSpec.flags[5]!=0) then begin        
        CUr.Code = IVr.CustCode;
        if (ReadFirstMain(CUr,1,true)) then begin
          if (nonblank(CUr.Department)) then begin
            OutString(390,0,CUr.Department,false);
          end;  
        end;
      end;  
    end;               
    oldSerNr = IVr.SerNr;
    EndFormat;
  end;
END;

procedure PSFindPaydAmountCLIn(record IPrsVc IPrsp,var val ap,var Date dp)
BEGIN
  record CLInVc CLInr;
  row CLInVc CLInrw;
  Integer i,rwcnt;
  
  ap = 0;
  CLInr.SerNr = IPrsp.TransNr;
  if (ReadFirstMain(CLInr,1,true)) then begin
    rwcnt = MatRowCnt(CLInr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(CLInr,i,CLInrw);
      if (CLInrw.Type==1) then begin
        if (CLInrw.TransNr==IPrsp.IVNr) then begin
          if (CLInr.TransDate==IPrsp.CustDate) then begin
            ap = CLInrw.Sum + ap;
          end;    
          dp = CLInr.TransDate;
        end;
      end;
    end;
  end;
  RETURN;
END;

procedure BonusRptDetailedHeader(Integer nr)
BEGIN
  StartFormat(15);
  EndFormat;
  StartFormat(15);
  OutString(0,0,USetStr(nr),false); 
  EndFormat;
  Gray_Divider(0,480);
  StartFormat(15);
  EndFormat;
  RETURN;
END;

procedure CalcBonus(string art,string sm,string cu,var val sum,var val pp,var val bp,Integer flags7,val vals0)
BEGIN
  record INVc INr;
  record UserVc Userr;
  record CUVc CUr;
  record BonusDefVc BonusDefr;
  row BonusDefVc BonusDefrw;
  integer i,rwcnt;
  boolean foundf;
  boolean skipf;
  val reb;
  
  bp = 0;
  pp = blankval;
  reb = 0;
  CUr.Code = cu;
  if (ReadFirstMain(CUr,1,true)) then begin
    foundf = true;
    BonusDefr.UserCode = sm;
    while (LoopMain(BonusDefr,1,foundf)) begin
      skipf = false;
      if (nonblank(BonusDefr.UserCode)) and (BonusDefr.UserCode != sm) then begin
        foundf = false;
        skipf = true;
      end;
      if (nonblank(BonusDefr.CustCode)) and (BonusDefr.CustCode != CUr.Code) then begin
        skipf = true;
      end;
      if (nonblank(BonusDefr.CustCat)) and (BonusDefr.CustCat != CUr.CustCat) then begin
        skipf = true;
      end;
      if (foundf) and (skipf==false) then begin
        rwcnt = MatRowCnt(BonusDefr);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(BonusDefr,i,BonusDefrw);
          if (BonusDefrw.CodeType == 0) then begin
            INr.Code = art;
            if (ReadFirstItem(art,INr,true,true)) then begin
              if (INr.Bonus==0) then begin
                if (INr.Group==BonusDefrw.ItemCode) then begin
                  pp = BonusDefrw.BonusPrc;
                end;
              end else begin
                pp = INr.Bonus;
              end;
            end;
          end else begin
            INr.Code = art;
            if (ReadFirstItem(art,INr,true,true)) then begin
              if (INr.Bonus==0) then begin
                if (INr.Code==BonusDefrw.ItemCode) then begin
                  pp = BonusDefrw.BonusPrc;
                end;
              end else begin
                pp = INr.Bonus;
              end;
            end;
          end; 
        end;
        if (blank(pp)) then begin
          pp = BonusDefr.BonusPrc;
        end;
      end;      
    end;
  end;
  switch (flags7) begin
	  case 0:
      if (blank(pp)) then begin
			  pp = vals0;
			  if (blank(pp)) then begin
			    Userr.Code = sm;
			    if (ReadFirstMain(Userr,1,true)) then begin
			      pp = Userr.Bonus;
			    end else begin
			      pp = 0;
			    end;
			  end;
			end;
	  case 1:
	    if (pp==0) then begin
	      pp = vals0;
    	  if (pp==0) then begin
		      INr.Code = art;
		      if (ReadFirstItem(art,INr,true,true)) then begin
		        if (INr.Bonus!=0) then begin
		          pp = INr.Bonus;
		        end;
		      end;
				  if (blank(pp)) then begin
				    Userr.Code = sm;
				    if (ReadFirstMain(Userr,1,true)) then begin
				      pp = Userr.Bonus;
				    end;
				  end;
		    end;
	    end;
  end;
  if ((pp>=-100) and (pp<=100)) then begin
    reb = pp/100;
    bp = sum*reb;
  end;
  RETURN;
END;

procedure AddRptResults(var val totbonusbase,var val totbon,var val totcost,var val totsales,val rowbonusbase,val rowsales,val rowbon,var val totcred,val rowcred,val rowcost)
BEGIN
  totbon = totbon + rowbon;
  totbonusbase = totbonusbase + rowbonusbase;
  totsales = totsales + rowsales;
  totcred = totcred + rowcred;
  totcost = totcost + rowcost;
  RETURN;
END;

procedure BonusRptResults(record RcVc RepSpec,string salesman,string salesmanname,val rowbonusbase,val rowsales,val rowbon,val rowcred,val rowcost)
BEGIN
  val sales;

  if(RepSpec.Media==20 or RepSpec.Media==2) then begin// Edit ************************** Wednesday, 15 September 2010 12:04:20
  end else begin;// Edit ************************** Wednesday, 15 September 2010 12:04:20
    if (RepSpec.flags[0]==0) then begin
      Gray_Divider(200,480);
    end;  
    
    StartFormat(15);
    if (RepSpec.flags[0]==0) then begin
      if (RepSpec.flags[9]!=0) then begin
        OutString(130,0,USetStr(4915),false);
        OutVal(265,0,rowsales,M4Val,true);
        OutVal(315,0,rowcost,M4Val,true);
        OutVal(365,0,rowbonusbase,M4Val,true);
        OutVal(400,0,(rowbonusbase*100)/rowsales,M4Val,true);
      end else begin
        OutString(200,0,USetStr(4915),false);
        OutVal(400,0,rowbonusbase,M4Val,true);
      end;
      OutVal(430,0,rowbon/rowbonusbase*100,M4Val,true);
    end else begin  
      sales = rowbonusbase + rowcred;
      if (sales==0) then begin 
        sales = blankval;
      end;  
      if (nonblank(salesman)) then begin
        OutString(0,0,salesman,false);
        OutString(55,0,salesmanname,false);
      end else begin
        OutString(0,0,USetStr(4914),false);
      end;
      OutVal(215,0,rowcred,M4Val,false);
      if (RepSpec.flags[9]!=0) then begin
        OutVal(265,0,rowsales,M4Val,true);
        OutVal(315,0,rowcost,M4Val,true);
        OutVal(365,0,rowbonusbase,M4Val,true);
        OutVal(400,0,(rowbonusbase*100)/rowsales,M4Val,true);
      end else begin
        OutVal(400,0,sales,M4Val,true);
      end;
    end;
    OutVal(480,0,rowbon,M4Val,true);
    EndFormat;
    if (RepSpec.flags[0]==0) then begin
      StartFormat(15);
      EndFormat;
    end;  
   end;// Edit ************************** Wednesday, 15 September 2010 12:04:18
  RETURN;
END;

function
Boolean BonusRowPrint(val totbonusbase,val totbon,Integer UsedOnly,Integer onlywbonus)
BEGIN
  Boolean res;
  
  res = true;
  if (UsedOnly==1) then begin
    if (totbonusbase==0) then begin
      if (totbon==0) then begin
        res = false;
      end;
    end;
  end;      
  if (onlywbonus==1) then begin
    if (totbon==0) then begin
      res = false;
    end;
  end;    
  BonusRowPrint = res;
  RETURN;
END;

// Edit Start ---------------------------------------------- Edit Start
	//Friday, 17 September 2010 10:35:11
	procedure GetPaymentEndDate(record IVVc IVr, var date EndDate,var val TransNo,record IPrsVc IPrsorig)
begin
  record IPrsVc IPrsr;
  record IPVc IPr;
  record TRVc TRr;
  record CLInVc CLInr;
  record CredManVc CredManr;
  val paid,t,tb1;
  boolean TrHs;
  date paydate;
  
  //messagebox(0,EndDate);
  TransNo = -1;
  TrHs = true;
  IPrsr.IVNr = IVr.SerNr;
  while(loopkey("IVKey",IPrsr,1,TrHs)) begin
    //if(IPrsr.TransNr>IPrsorig.TransNr) then begin TrHs=false; end;
    if(IPrsr.IVNr!=IVr.SerNr) then begin TrHs=false; end;
    if(TrHs) then begin 
     if (IPrsr.TransType==1 and TrHs) then begin
        PSFindPaydAmount2(IPrsr,false,t,tb1,paydate);
        paid = paid + t;
        TransNo = IPrsr.TransNr;
        if(paid>=IVr.Sum4) then begin TrHs = false; EndDate = paydate; end;
      end;
      if (IPrsr.TransType==3 and TrHs) then begin
        PSFindPaydAmountCLIn(IPrsr,t,paydate);      
        paid = paid + t;
        //EndDate = paydate;
        TransNo = IPrsr.TransNr;
        if(paid>=IVr.Sum4) then begin TrHs = false; EndDate = paydate; end;
      end;
    end;
  end;
return;
end;
	
	
procedure FindCredArtCode(record IVVc origIVr,string ArtCode, integer OrdRow,var integer Qty)
begin
record IPrsVc IPrsr;
record IVVc IVr;
row IVVc IVrw;
integer i, mtrw;
boolean TrHs,testf,cred;
  
  TrHs = true;
  Qty = 0;
  IPrsr.IVNr = origIVr.SerNr;
  IPrsr.TransType = 0;
  While(loopkey("IVKey",IPrsr,2,TrHs)) begin
    testf = true;
    if(IPrsr.IVNr!=origIVr.SerNr) then begin TrHs = false; testf=false; end;
    if(IPrsr.TransType!=0) then begin testf=false; end;
    If(testf) then begin
      IVr.SerNr =  IPrsr.TransNr;
      If(REadFirstMain(IVr,1,true)) then begin
        //MessageBox(0,IVr.InvType);
        if(IVr.InvType==3) then begin
        	mtrw = matrowcnt(IVr);
        	For(i=0;i<mtrw;i=i+1) begin
            MatRowGet(IVr,i,IVrw);
          //  MessageBox(0,IVrw.ArtCode & "_" & IVrw.OrdRow);
            If(IVrw.ArtCode==ArtCode and IVrw.OrdRow==OrdRow) then begin
              	Qty = Qty+IVrw.Quant;
            //  	MessageBox(0,IVr.SerNr);
            end; 
          end; 
        end;
      end; 
    end; 
  end;
return;
end;
// Edit End ---------------------------------------------- Edit End


procedure BonusRptPaidPrint(record RcVc RepSpec,string salesman,string salesmanname,var val totbonusbase,var val totbon,var val totcred,var val totcost,var val totsales,var Boolean headerfp)
BEGIN
  record ARVc ARr;
  record IVVc IVr;
  row IVVc IVrw;
  record IPrsVc IPrsr;
  Boolean found,testf;
  Boolean firstf;
  val rowbon,rowbonusbase,rowsales;
  val rowcred,v,rowcost;
  val bon,bprcnt,rs,paid,t,sales,tb1;
  val payprc,preayv;
  LongInt oldSerNr;
  Integer rwcnt,i;
  Date paydate;
  string 255 argnr;
  record INVc INr;
  val ivbb,ivsales,ivbprcnt,ivbon;
  record ORVc ORr;// Edit ************************** Wednesday, 15 September 2010 10:19:57
  record SHVc SHr;// Edit ************************** Wednesday, 15 September 2010 10:20:21
  row SHVc SHrw;// Edit ************************** Wednesday, 15 September 2010 10:20:30
  boolean TrHs,trhs2;// Edit ************************** Wednesday, 15 September 2010 10:50:19
  integer mtrw,g;// Edit ************************** Wednesday, 15 September 2010 10:54:37
  val MyCost,salesprice,salessum;
  Record CUVc CUr;
  date paydatenew;// Edit ************************** Thursday, 16 September 2010 13:09:58
  val TransNo;
  integer Qty;// Edit ************************** Wednesday, 22 September 2010 15:08:43
    record RLinkVc RLr;// Edit ************************** Wednesday, 20 October 2010 12:43:19
  Integer notenr,notenr1,notenr2,z,mtws;// Edit ************************** Wednesday, 20 October 2010 12:43:19
  record SVOVc SVOr;// Edit ************************** Wednesday, 20 October 2010 12:43:18
  record WOVc WOr;// Edit ************************** Wednesday, 20 October 2010 12:43:17
  record WSVc WSr;// Edit ************************** Wednesday, 20 October 2010 12:43:17
  row WSVc WSrw;// Edit ************************** Wednesday, 20 October 2010 12:43:16
  
  oldSerNr = -1;
  firstf = true;
  IPrsr.TransDate = RepSpec.d1;
  found = true;
  //paydatenew = "";
  while (LoopKey("TransDate",IPrsr,1,found)) begin
  paydatenew = "";
  paydate = "";
    testf = false;
    if (found) then begin
      if ((nonblankdate(RepSpec.d2)) and (IPrsr.TransDate>RepSpec.d2)) then begin found = false; end;
    end;  
    if (found) then begin
      testf = true;
      if (IPrsr.TransType==2) then begin testf = false; end;
      if (IPrsr.TransType==4) then begin testf = false; end;
      if (IPrsr.TransType==5) then begin testf = false; end;

      if (IPrsr.TransType==0) then begin 
        IVr.SerNr = IPrsr.IVNr;
        testf = ReadFirstMain(IVr,1,true);
        if (salesman!=IVr.SalesMan) then begin testf = false; end;
        if (nonblank(RepSpec.ObjStr)) then begin
          if (SetInSet(RepSpec.ObjStr,IVr.Objects)==false) then begin testf = false; end;
        end;

        if (testf) then begin
          ARr.InvoiceNr = IVr.SerNr;
          if (ReadFirstMain(ARr,1,true)) then begin end;
          if (true) then begin 
            if (ARr.BookRVal==IVr.BaseSum4) then begin 
              testf = false; 
            end else begin
              if (IVr.InvType!=2) then begin
                testf = false; 
              end;
              rwcnt = MatRowCnt(IVr);
              for (i=0;i<rwcnt;i=i+1) begin
                MatRowGet(IVr,i,IVrw);
                if (IVrw.stp==6) then begin
                  if (IVrw.CUPNr!=-1) then begin
                    testf = true; 
                    i = rwcnt; 
                  end;
                end;
              end;
            end;
          end;
        end;      
      end;
      if (IPrsr.TransType==1) or (IPrsr.TransType==3) then begin
        IVr.SerNr = IPrsr.IVNr;
        testf = ReadFirstMain(IVr,1,true);
        if (testf) then begin
          if (IVr.OKFlag==0) then begin testf = false; end;
          if (IVr.Invalid!=0) then begin testf = false; end;
          if (salesman!=IVr.SalesMan) then begin testf = false; end;
          if (nonblank(RepSpec.ObjStr)) then begin
            if (SetInSet(RepSpec.ObjStr,IVr.Objects)==false) then begin testf = false; end;
          end;
          if (nonblank(RepSpec.Stext)) then begin
            if (RepSpec.Stext!=IVr.BranchID) then begin testf = false; end;
          end;
        end;
      end;     
    end;
    if (testf) then begin
      paid = blankval;
      if (IVr.InvType==2) then begin
        paid = IVr.Sum4;
      end;
      rwcnt = MatRowCnt(IVr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(IVr,i,IVrw);
        if (IVrw.stp==6) then begin
          if (IVrw.CUPNr!=-1) then begin
            paid = paid + IVrw.Sum;
          end;
        end;
      end;
      
      
      
      if (IPrsr.TransType==1) then begin
        PSFindPaydAmount2(IPrsr,false,t,tb1,paydate);
        paid = paid + t;
      end;
      if (IPrsr.TransType==3) then begin
        PSFindPaydAmountCLIn(IPrsr,t,paydate);      
        paid = paid + t;
      end;
      
      GetPaymentEndDate(IVr,paydatenew,TransNo,IPrsr);
      
        
        if(TransNo!=-1 and IPrsr.TransNr!=TransNo) then begin testf = false; end;
      if ((nonblankdate(RepSpec.d2)) and (paydatenew>RepSpec.d2)) then begin testf = false; end;// Edit ************************** Friday, 17 September 2010 10:34:56
      if ((nonblankdate(RepSpec.d1)) and (paydatenew<RepSpec.d1)) then begin testf = false; end;// Edit ************************** Friday, 17 September 2010 10:34:57
      
      if (paid==IVr.Sum4) then begin
        payprc = 1;
      end else begin
        if (paid>=0) then begin
//          payprc = (IVr.Sum4 - paid)/IVr.Sum4;  //mathematics ... ES
          payprc = paid/IVr.Sum4;
        end else begin
          if (-paid==IVr.Sum4) then begin
            payprc = -1;
          end else begin
//            payprc = (IVr.Sum4 + paid)/IVr.Sum4; //mathematics ... ES
            payprc = paid/IVr.Sum4;
          end;
        end;
      end; 
      if (IVr.InvType==3) then begin
        paid = -paid;
      end;      
      preayv = blankval;
      if (IPrsr.TransType==1) then begin
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(IVr,i,IVrw);
          if (IVrw.stp==6) then begin
            preayv = preayv + IVrw.Sum;
          end;
        end;
      end;
      if (paid==0) then begin
        testf = false;
      end;
      if (RepSpec.flags[10]==0) then begin
        if (IVr.InvType==6) then begin
          testf = false;
        end;
      end;
      if (nonblank(RepSpec.Stext)) then begin
        if (RepSpec.Stext!=IVr.BranchID) then begin testf = false; end;
      end;
      if (testf) then begin
        ivbb = blankval;
        ivsales = blankval;
        ivbprcnt = blankval;
        ivbon = blankval;
        rwcnt = MatRowCnt(IVr);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(IVr,i,IVrw);
          testf = true;
          
          FindCredArtCode(IVr,IVrw.ArtCode,IVrw.OrdRow,Qty);// Edit ************************** Wednesday, 22 September 2010 15:08:31
          IVrw.Quant = IVrw.Quant-Qty;
          If(IVrw.Quant==0) then begin
	          testf = false;
          end; 
          if (nonblank(RepSpec.f6)) then begin
            if (ReadFirstItem(IVrw.ArtCode,INr,true,true)) then begin
              if (SetInSet(RepSpec.f6,INr.DispGroups)) then begin
                testf = false;
              end;
            end;
          end;
          if (((IVrw.stp==1) or (IVrw.stp==5)) and (testf)) then begin
            if (IVrw.Sum!=0) then begin
              if (firstf) then begin
                if (headerfp) then begin
                  BonusRptDetailedHeader(1330); // Invoices 
                  headerfp = false;
                end;
                if (RepSpec.flags[0]==0) then begin
                  if(RepSpec.Media==20 or RepSpec.Media==2) then begin// Edit ************************** Wednesday, 15 September 2010 11:25:11
                  end else begin// Edit ************************** Wednesday, 15 September 2010 11:25:12
                    StartFormat(15);
                    if (nonblank(salesman)) then begin
                      OutString(0,0,salesman,false);
                      OutString(55,0,salesmanname,false);
                    end else begin
                      OutString(0,0,USetStr(4914),false);
                    end;
                    EndFormat;
                    Gray_Divider(0,480);
                  end;// Edit ************************** Wednesday, 15 September 2010 11:25:15
                end;
              end;
              firstf = false;
              v = IVrw.Sum - (IVrw.Sum*preayv)/IVr.Sum4;
              sales = MulRateToBase1(IVr.CurncyCode,v,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
              if (RepSpec.flags[1]==0) then begin
                v = IVrw.Sum - (IVrw.Sum*preayv)/IVr.Sum4;
                rs = MulRateToBase1(IVr.CurncyCode,v,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
              end else begin
  //              rs = MulRateToBase1(IVr.CurncyCode,IVrw.rowbonusbase,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
                rs = IVrw.rowGP - (IVrw.rowGP*preayv)/IVr.Sum4;
              end;
              rs = rs*payprc;
              if (RepSpec.flags[1]==0) then begin
              end else begin
                FindSalesExVat(IVrw.VATCode,rs,IVr.InclVAT,IVr.NoTAXonVAT,rs);
              end;
              CalcBonus(IVrw.ArtCode,IVr.SalesMan,IVr.CustCode,rs,bprcnt,bon,RepSpec.flags[7],RepSpec.vals0);
              if (IVr.InvType==3) then begin
                bon = -bon;
                IVrw.Sum = -IVrw.Sum;
                sales = -sales;
                rs = -rs;
              end;
  //StopAlert("IVrw.Sum " & IVrw.Sum & " IVrw.rowbonusbase " & IVrw.rowbonusbase & " bon " & bon & " IVr.SerNr " & IVr.SerNr & " i " & i);        
              rowbonusbase = rowbonusbase + rs;
              rowsales = rowsales + sales;
              rowbon = rowbon + bon;
              if (RepSpec.flags[0]==0) then begin
                if (oldSerNr!=IVr.SerNr) then begin
                  if(RepSpec.Media==20 or RepSpec.Media==2) then begin// Edit ************************** Wednesday, 15 September 2010 11:27:16
                  end else begin// Edit ************************** Wednesday, 15 September 2010 11:27:17
                    StartFormat(15);
                    argnr = CreateInvoiceNumber(IVr.SerNr);
                    OutString(0,"DblCustPS2",argnr,false);
                    if (RepSpec.flags[4]!=0) then begin
                      OutString(100,0,IVr.CustCode,false)
                      OutString(150,0,IVr.Addr0,false);
                    end;       
                    EndFormat;
                  end;// Edit ************************** Wednesday, 15 September 2010 11:27:18
                end;
                if (BonusRowPrint(IVrw.Sum,bon,RepSpec.UsedOnly,RepSpec.flags[6])) then begin
                  //StartFormat(15);
                  if((RepSpec.Media==20 or RepSpec.Media==2)) then begin// Edit ************************** Wednesday, 15 September 2010 10:13:07
                    if (nonblank(IVrw.ArtCode)) Then begin
                    // Edit Start ---------------------------------------------- Edit Start
                      //Wednesday, 15 September 2010 10:15:41
                      StartFormat(15);
                      MyCost = 0;// Edit ************************** Wednesday, 8 December 2010 13:26:26
                        OutString(0,0,IVr.CustCode,false);
                        OutString(1,0,IVr.Addr0,false);
                        OutString(2,0,IVr.InvDate,false);
                        OutString(3,0,IVr.PayDate,false);
                        //OutString(3,0,IPrsr.TransNr,false);
                        //OutString(3,0,paid,false);
                        if (blankdate(paydatenew)) then begin
                          OutDate(4,0,IVr.PayDate,false);
                        end else begin
                          OutDate(4,0,paydatenew,false);
                        end;
                        OutString(5,0,IVr.SerNr,false);
                        //OutString(5,0,TransNo,false);
                        //OutString(5,0,paydatenew,false);
                        //OutString(5,0,"",false);
                        OutString(6,0,IVrw.ArtCode,false);
                        OutString(10,0,IVrw.Spec,false);
                        OutString(20,0,IVrw.Quant,false);
                        salesprice = MulRateToBase1(IVr.CurncyCode,IVrw.Price,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
                        OutVal(20,0,salesprice,M4Val,false);
                        if(nonblank(IVrw.FIFO) and (IVrw.FIFO!=0)) then begin
                          //OutVal(20,0,IVrw.FIFO,M4Val,false);
                          MyCost = IVrw.FIFO;
                        end else begin
                          if(IVr.OrderNr>0) then begin
                            SHr.OrderNr = IVr.OrderNr;
                            TrHs = true;
                            While(loopkey("OrderKey",SHr,1,TrHs)) begin
                              If(SHr.OrderNr==IVr.OrderNr) then begin
                             // MessageBox(0,SHr.OrderNr);
                                mtrw = matrowcnt(SHr);
                                For(g=0;g<mtrw;g=g+1) begin
                                  MatRowGet(Shr,g,SHrw);
                                  if(SHrw.OrdRow==IVrw.OrdRow) then begin
                                    MyCost = SHrw.FIFORowVal/SHrw.Ship;
                                    if(MyCost==0) then begin
                                     //goto COSTZERO;
                                    end;
                                  end;
                                end; 
                              end else begin
                                TrHs = false;
                              end;
                            end;
                            Resetloop(SHr);
                          end else begin
                        // Edit Start ---------------------------------------------- Edit Start
	//Wednesday, 20 October 2010 12:41:48
                            trhs2=true;
                            notenr = 1;
                            while (ReadRecordLink(IVr,notenr,SVOr,RLr) and trhs2) begin
                              notenr1=1;
                              while (ReadRecordLink(SVOr,notenr1,WOr,RLr) and trhs2) begin
                                notenr2=1;
                                  while (ReadRecordLink(WOr,notenr2,WSr,RLr) and trhs2) begin
                                    mtws = matrowcnt(WSr);
                                    for(z=0;z<mtws;z=z+1) begin
                                      MatRowGet(WSr,z,WSrw);
                                      if(WSrw.ArtCode==IVrw.ArtCode)then begin
                                        MyCost = WSrw.FIFO;
                                        trhs2 = false;
                                      end;
                                    end;
                                    notenr2=notenr2+1;
                                  end;
                                notenr1=notenr1+1;
                              end;
                              notenr = notenr + 1;
                            end;
COSTZERO:;
                            if(MyCost==0) then begin
                              //MyCost = IVrw.BasePrice;
                            end;
                          end;
                        end;
	// Edit End ---------------------------------------------- Edit End
	
                        OutVal(30,0,MyCost,M4Val,false);
                        salessum = MulRateToBase1(IVr.CurncyCode,IVrw.Sum,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
                        OutVal(40,0,salessum,M4Val,false);
                        OutVal(50,0,MyCost*IVrw.Quant,M4Val,false);
                        OutVal(60,0,salessum-(MyCost*IVrw.Quant),M4Val,false);
                        CUr.Code = IVr.CustCode;
                        If(readFirstmain(CUr,1,true)) then begin
                          OutString(70,0,CUr.SalesMan,false);
                        end; 
                        OutString(80,0,IVr.SalesMan,false);
                        if(IVr.OrderNr<0) then begin//------------------------------- S E R V I C E!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                          trhs2=true;
                          notenr = 1;
                          while (ReadRecordLink(IVr,notenr,SVOr,RLr) and trhs2) begin
                            notenr1=1;
                            while (ReadRecordLink(SVOr,notenr1,WOr,RLr) and trhs2) begin
                              notenr2=1;
                                while (ReadRecordLink(WOr,notenr2,WSr,RLr) and trhs2) begin
                                  mtws = matrowcnt(WSr);
                                  for(z=0;z<mtws;z=z+1) begin
                                    MatRowGet(WSr,z,WSrw);
                                    if(WSrw.ArtCode==IVrw.ArtCode and trhs2)then begin
                                      OutString(80,0,WSr.EMCode,false);
                                      trhs2 = false;
                                    end;
                                  end;
                                  notenr2=notenr2+1;
                                end;
                              notenr1=notenr1+1;
                            end;
                            notenr = notenr + 1;
                          end;
                        end;
                      endformat;
                      // Edit End ---------------------------------------------- Edit End
                    end;  // Edit ************************** Wednesday, 15 September 2010 11:55:23
                  end else begin// Edit ************************** Wednesday, 15 September 2010 11:55:22
                  StartFormat(15);// Edit ************************** Wednesday, 15 September 2010 10:13:04
                    OutDate(0,0,IVr.InvDate,false);
                    if (blankdate(paydate)) then begin
                      OutDate(55,0,IVr.PayDate,false);
                    end else begin
                      OutDate(55,0,paydate,false);
                    end; 
                    if (RepSpec.flags[3]!=0) then begin
                      
                      OutString(110,0,left(IVrw.Spec,15),false);
                    end;  
                    if (RepSpec.flags[4]!=0) then begin
                      OutString(215,0,IVr.Addr0,false);
                    end;  
                    OutVal(400,0,rs,M4Val,true);
                    OutVal(430,0,bprcnt,M4Val,true);
                    OutVal(480,0,bon,M4Val,true);
                    EndFormat;
                  end;// Edit ************************** Wednesday, 15 September 2010 10:12:59
                  ivbb = ivbb + rs;
                  ivsales = ivsales + sales;
                  ivbprcnt = ivbprcnt + bprcnt;
                  ivbon = ivbon + bon;
                end;
              end else begin
                ivbb = ivbb + rs;
                ivsales = ivsales + sales;
                ivbon = ivbon + bon;
              end;
              oldSerNr = IVr.SerNr;
            end;
          end;
        end;
        if (RepSpec.flags[0]!=0) then begin
          if (RepSpec.flags[8]!=0) then begin
            if (ivbb!=0) or (ivbon!=0) then begin
              StartFormat(15);
              OutString(0,"DblIVVc",IVr.SerNr,false);
              OutVal(400,0,ivbb,M4Val,true);
              OutVal(480,0,ivbon,M4Val,true);
              EndFormat;
            end;
          end;
        end else begin
          if (ivbb!=0) or (ivbprcnt!=0) or (ivbon!=0) then begin
            if(RepSpec.Media==20 or RepSpec.Media==2) then begin// Edit ************************** Wednesday, 15 September 2010 11:17:39
            
            end else begin// Edit ************************** Wednesday, 15 September 2010 11:17:41
            Gray_Divider(320,1);
            StartFormat(15);
            OutVal(400,0,ivbb,M4Val,true);
            OutVal(430,0,ivbprcnt,M4Val,true);
            OutVal(480,0,ivbon,M4Val,true);
            EndFormat;
            end;// Edit ************************** Wednesday, 15 September 2010 11:17:42
          end;
        end;
      end;
    end;
  end;
  if (firstf==false) then begin
    AddRptResults(totbonusbase,totbon,totcost,totsales,rowbonusbase,rowsales,rowbon,totcred,rowcred,rowcost);
    BonusRptResults(RepSpec,salesman,salesmanname,rowbonusbase,rowsales,rowbon,rowcred,rowcost);
  end;
  RETURN;
END;

procedure BonusRptPaid(record RcVc RepSpec,var val totbonusbase,var val totbon,var val totcred,var val totcost,var val totsales,var Boolean headerfp)
BEGIN
  record UserVc UserR;
  Boolean found;
  
  UserR.Code = RepSpec.f1;
  found = true;
  while (LoopMain(UserR,1,found)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (UserR.Code!=RepSpec.f1) then begin
        goto LBonusRptPaid;
      end;
    end;    
    if (nonblank(UserR.Code)) then begin
      BonusRptPaidPrint(RepSpec,UserR.Code,UserR.Name,totbonusbase,totbon,totcred,totcost,totsales,headerfp);
    end;  
  end;
  if (blank(RepSpec.f1)) then begin
    UserR.Code = "";
    UserR.Name = "";
    BonusRptPaidPrint(RepSpec,UserR.Code,UserR.Name,totbonusbase,totbon,totcred,totcost,totsales,headerfp);
  end;
LBonusRptPaid:;
  RETURN;
END;

function
Boolean CreditToCashInv(record IVVc IVp)
BEGIN
  Boolean res;
  record IVVc IV2r;
  
  IV2r.SerNr = IVp.CredInv;
  if (ReadFirstMain(IV2r,1,true)) then begin
    if (IV2r.InvType==2) then begin
      res = true;
    end;  
  end;
  CreditToCashInv = res;
  RETURN;
END;

global
procedure BonusRn(var record RcVc RepSpec)
BEGIN
  record UserVc UserR;
  record IVVc IVr;
  record CUVc CUr;
  row IVVc IVrw;
  Boolean found;
  val bon,totbon,bprcnt,totbonusbase,totcost,totsales;
  val rowbon,rowbonusbase,rowsales;
  val totcred,rowcred,rs,rowcost,sales;
  Integer rwcnt,i;
  Boolean testf,skipf;
  LongInt oldSerNr;
  Boolean cashnotes,printf;
  string 255 lastsalesman,salesmanname;
  string 255 tstr;
  Integer rw;
  string 20 frus,tous;
  record INVc INr;
  val ivbb,ivbprcnt,ivbon,ivcost,ivsales;
  val upinvsales,upinvbon;
  
  frus = FirstInRange(RepSpec.f1,20);
  tous = LastInRange(RepSpec.f1,20);
  StartReportJob(USetStr(4901));
  rw = 1;
  if ((blankdate(RepSpec.d1)) and (blankdate(RepSpec.d2))) then begin
    RepSpec.d1 = RepSpec.sStartDate;
    RepSpec.d2 = RepSpec.sEndDate;
  end;
  HT2Per(RepSpec.d1,RepSpec.d2,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if(RepSpec.flags[0]==1) then begin
    tstr = USetStr(1159);
  end else begin
    tstr = USetStr(1160);
  end;  
  Header(rw,tstr,0);
  HTSaleMan(RepSpec.f1,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (RepSpec.ArtMode==0) then begin
    tstr = USetStr(4912);
  end else begin
    tstr = USetStr(4913);
  end;  
  Header(rw,tstr,0);
  if (RepSpec.flags[1]==0) then begin
    tstr = USetStr(4916);
  end else begin
    tstr = USetStr(4917);
  end;  
  Header(rw,tstr,1);
  rw = rw + 1;
  EndHeader;
  IF(RepSpec.Media==20 or RepSpec.Media==2) then begin
  StartFormat(15);
    OutString(0,0,"Customer",false);
    OutString(1,0,"Cust. Name",false);
    OutString(2,0,"Inv. Date",false);
    OutString(3,0,"Paym. term.",false);
    OutString(4,0,"Paym. date",false);
    OutString(5,0,"Inv. #",false);
    OutString(6,0,"ArtCode",false);
    OutString(10,0,"Name",false);
    OutString(20,0,"Q-ty",false);
    OutString(30,0,"Price",false);
    OutString(40,0,"Cost",false);
    OutString(50,0,"Sum",false);
    OutString(60,0,"SumCost",false);
    OutString(70,0,"GP",false);
    OutString(80,0,"SalesMan",false);
    OutString(90,0,"Inv. SalesMan",false);
    OutString(100,0,"ServiceMan",false);
  EndFormat;
  end else begin// Edit ************************** Wednesday, 15 September 2010 10:05:56
    StartFormat(15);
    OutString(0,0,USetStr(4908),false); 
    EndFormat;
    if (RepSpec.flags[0]==0) then begin
     StartFormat(15);
      OutString(0,0,USetStr(4902),false);
    EndFormat;
    StartFormat(15)
     OutString(0,0,USetStr(4907),false); 
     if (RepSpec.ArtMode!=0) then begin
       OutString(55,0,USetStr(2438),false); 
     end else begin
       OutString(55,0,USetStr(2422),false); 
     end;  
     if (RepSpec.flags[3]!=0) then begin
       OutString(110,0,USetStr(4909),false);
     end;  
     if (RepSpec.flags[4]!=0) then begin
       OutString(235,0,USetStr(2354),false);
     end;  
      if (RepSpec.flags[9]!=0) then begin
        OutString(265,0,USetStr(4899),true); 
        OutString(315,0,USetStr(4929),true); 
        if (RepSpec.flags[1]==0) then begin
          OutString(365,0,USetStr(4900),true); 
        end else begin
          OutString(365,0,USetStr(17570),true); 
        end;
        OutString(400,0,USetStr(17571),true); 
      end else begin
        if (RepSpec.flags[1]==0) then begin
          OutString(400,0,USetStr(4900),true); 
        end else begin
          OutString(400,0,USetStr(17570),true); 
        end;
      end;
      OutString(430,0,USetStr(4904),true);
    end else begin
      OutString(265,0,USetStr(4899),true); 
      OutString(315,0,USetStr(17572),true);
      OutString(365,0,USetStr(17570),true); 
      OutString(400,0,USetStr(17571),true); 
    end;
    OutString(480,0,USetStr(4905),true);   
    EndFormat;
    Gray_Divider(0,1);
  end;// Edit ************************** Wednesday, 15 September 2010 10:05:58
  salesmanname = "";
  if (RepSpec.ArtMode==1) then begin
      goto L88;
    if (RepSpec.flags[2]==0) then begin
      goto L88;
    end;
  end;        
  IVr.InvDate = RepSpec.d1;
  IVr.SalesMan = frus;
  found = true;
  printf = true;
  rowbon = blankval;
  rowbonusbase = blankval;
  rowsales = blankval;
  rowcred = blankval;
  rowcost = blankval;
  lastsalesman = "XXXXXXX";
  while (LoopKey("SalesMan",IVr,2,found)) begin
    testf = true;
    if (nonblank(RepSpec.f1)) then begin
      if (IVr.SalesMan>tous) then begin
        found = false;
        testf = false;
      end;
    end;    
   if ((nonblankdate(RepSpec.d1)) and (IVr.InvDate<RepSpec.d1)) then begin
      testf = false;
   end;   
   if ((nonblankdate(RepSpec.d2)) and (IVr.InvDate>RepSpec.d2)) then begin
       testf = false;
   end;      
   if (IVr.OKFlag==0) then begin testf = false; end;
   if (IVr.InvType==5) then begin testf = false; end;
   if (IVr.Invalid!=0) then begin testf = false; end;
   if ((RepSpec.ArtMode==1) and (testf==true)) then begin
        if ((IVr.InvType<2) or (IVr.InvType>3)) then begin testf = false; end;
   end;  
   if (RepSpec.ArtMode==1) then begin
     if (IVr.InvType==3) then begin
       if (CreditToCashInv(IVr)==false) then begin
         testf = false;
       end;
     end;
   end;      
   if (nonblank(RepSpec.Stext)) then begin
     if (RepSpec.Stext!=IVr.BranchID) then begin testf = false; end;
   end;
   if (nonblank(RepSpec.ObjStr)) then begin
     if (SetInSet(RepSpec.ObjStr,IVr.Objects)==false) then begin testf = false; end;
   end;
   if (RepSpec.flags[10]==0) then begin
     if (IVr.InvType==6) then begin
       testf = false;
     end;
   end;
   if (testf) then begin
           if ((IVr.SalesMan!=lastsalesman) and (lastsalesman <> "XXXXXXX")) then begin
              printf = true;
              AddRptResults(totbonusbase,totbon,totcost,totsales,rowbonusbase,rowsales,rowbon,totcred,rowcred,rowcost);
              BonusRptResults(RepSpec,lastsalesman,salesmanname,rowbonusbase,rowsales,rowbon,rowcred,rowcost);
              rowbon = blankval;
              rowbonusbase = blankval;
              rowsales = blankval;
              rowcred = blankval;
              rowcost = blankval;
              lastsalesman = IVr.SalesMan;
              salesmanname = "";
            end else begin   
              lastsalesman = IVr.SalesMan;
            end;
            /*
            if (RepSpec.ArtMode==1) then begin
              if (cashnotes==false) then begin
                BonusRptDetailedHeader(4919); 
                cashnotes = true;
              end;
            end;
            */
            if (printf) then begin
              if (nonblank(IVr.SalesMan)) then begin  
                UserR.Code = IVr.SalesMan;
                if (ReadFirstMain(UserR,1,true)) then begin
                  lastsalesman = UserR.Code;
                  salesmanname = UserR.Name;
                end;
              end;
              if (RepSpec.flags[0]==0) then begin
                StartFormat(15);
                if (nonblank(IVr.SalesMan)) then begin
                  OutString(0,0,lastsalesman,false);
                  OutString(55,0,salesmanname,false);
                end else begin
                  OutString(0,0,USetStr(4914),false);
                end;
                EndFormat;
                Gray_Divider(0,480);
              end;
              printf = false;
            end;
            ivcost = blankval;
            ivbb = blankval;
            ivsales = blankval;
            ivbprcnt = blankval;
            ivbon = blankval;
            rwcnt = MatRowCnt(IVr);
            for (i=0;i<rwcnt;i=i+1) begin
              MatRowGet(IVr,i,IVrw);
              testf = true;
              if (nonblank(RepSpec.f6)) then begin
                if (ReadFirstItem(IVrw.ArtCode,INr,true,true)) then begin
                  if (SetInSet(RepSpec.f6,INr.DispGroups)) then begin
                    testf = false;
                  end;
                end;
              end;
              if ((IVrw.stp!=1) and (IVrw.stp!=5)) then begin testf = false; end;               
              if (testf) then begin
                if (IVrw.Sum!=0) or (IVrw.BasePrice!=0) then begin
                  sales = MulRateToBase1(IVr.CurncyCode,IVrw.Sum,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
                  FindSalesExVat(IVrw.VATCode,sales,IVr.InclVAT,IVr.NoTAXonVAT,sales);
                  if (RepSpec.flags[1]==0) then begin
                    rs = MulRateToBase1(IVr.CurncyCode,IVrw.Sum,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
                    FindSalesExVat(IVrw.VATCode,rs,IVr.InclVAT,IVr.NoTAXonVAT,rs);
                  end else begin
//                    rs = MulRateToBase1(IVr.CurncyCode,IVrw.rowbonusbase,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
                      rs = IVrw.rowGP;//already in base 1
                  end;            
                  CalcBonus(IVrw.ArtCode,IVr.SalesMan,IVr.CustCode,rs,bprcnt,bon,RepSpec.flags[7],RepSpec.vals0);
                  if (IVr.InvType==3) then begin
                    bon = -bon;
                    rowcred = rowcred + rs;                    
                    rs = -rs;
                    sales = -sales;
                  end;
                  if (BonusRowPrint(IVrw.Sum,bon,RepSpec.UsedOnly,RepSpec.flags[6])) then begin
                    rowbon = rowbon + bon;
                    rowbonusbase = rowbonusbase + rs;
                    rowsales = rowsales + sales;
                    rowcost = rowcost + IVrw.BasePrice*IVrw.Quant;
                    upinvsales = upinvsales + rs;
                    upinvbon = upinvbon + bon;
                    if (RepSpec.flags[0]==0) then begin
                      if(RepSpec.Media==20 or RepSpec.Media==2) then begin// Edit ************************** Wednesday, 15 September 2010 11:51:12
                      end else begin// Edit ************************** Wednesday, 15 September 2010 11:51:12
                        PrintIVHeader(RepSpec,IVr,oldSerNr);
                        StartFormat(15);
                        OutDate(0,0,IVr.InvDate,false);
                        OutDate(55,0,IVr.PayDate,false);
                        if (RepSpec.flags[3]!=0) then begin
                          if (RepSpec.flags[9]!=0) then begin
                            OutString(110,0,left(IVrw.Spec,12),false);
                          end else begin
                            OutString(110,0,left(IVrw.Spec,30),false);
                          end;
                        end;  
  /*
  do we need it for each invoice line? it is done above
                        if (RepSpec.flags[4]!=0) then begin
                          OutString(235,0,IVr.Addr0,false);
                          if (RepSpec.flags[5]!=0) then begin                          
                            CUr.Code = IVr.CustCode;
                            if (ReadFirstMain(CUr,1,true)) then begin
                              if (nonblank(CUr.Department)) then begin
                                OutString(215,0,CUr.Department,false);
                              end;  
                            end;
                          end;  
                        end;  
  */                      
                        if (RepSpec.flags[9]!=0) then begin
                          OutVal(265,0,sales,M4Val,true);
                          OutVal(315,0,IVrw.BasePrice*IVrw.Quant,M4Val,true);
                          OutVal(365,0,rs,M4Val,true);
                          OutVal(400,0,(rs*100)/sales,M4Val,true);
                        end else begin
                          OutVal(400,0,rs,M4Val,true);
                        end;
                        OutVal(430,0,bprcnt,M4Val,true);
                        OutVal(480,0,bon,M4Val,true);
                        EndFormat;
                        ivcost = ivcost + IVrw.BasePrice*IVrw.Quant;
                        ivbb = ivbb + rs;
                        ivsales = ivsales + sales;
                        ivbon = ivbon + bon;
                      end;// Edit ************************** Wednesday, 15 September 2010 11:51:37
                    end;
                  end;
                end;
              end;
            end;
            if (RepSpec.flags[0]==1) then begin
              if (RepSpec.flags[8]!=0) then begin
                if (upinvsales!=0) or (upinvbon!=0) then begin
                  StartFormat(15);
                  OutString(0,"DblIVVc",IVr.SerNr,false);
                  OutVal(400,0,upinvsales,M4Val,true);
                  OutVal(480,0,upinvbon,M4Val,true);
                  EndFormat;
                end;
                upinvsales = 0;
                upinvbon = 0;
              end;
            end;
            if (ivbb!=0) or (ivbprcnt!=0) or (ivbon!=0) then begin
              if (RepSpec.flags[9]!=0) then begin
                Gray_Divider(200,1);
              end else begin
                Gray_Divider(350,1);
              end;
              StartFormat(15);
              if (RepSpec.flags[9]!=0) then begin
                OutVal(265,0,ivsales,M4Val,true);
                OutVal(315,0,ivcost,M4Val,true);
                OutVal(365,0,ivbb,M4Val,true);
                OutVal(400,0,(ivbb*100)/ivsales,M4Val,true);
              end else begin
                OutVal(400,0,ivbb,M4Val,true);
              end;
              OutVal(430,0,(ivbon/ivbb)*100,M4Val,true);
              OutVal(480,0,ivbon,M4Val,true);
              EndFormat;
            end;
     end;   
  end;      
  
    if (RepSpec.ArtMode==0) then begin
      AddRptResults(totbonusbase,totbon,totcost,totsales,rowbonusbase,rowsales,rowbon,totcred,rowcred,rowcost);
      BonusRptResults(RepSpec,lastsalesman,salesmanname,rowbonusbase,rowsales,rowbon,rowcred,rowcost);
    end else begin
      AddRptResults(totbonusbase,totbon,totcost,totsales,rowbonusbase,rowsales,rowbon,totcred,rowcred,rowcost);
    //          BonusRptResults(RepSpec,lastsalesman,salesmanname,rowbonusbase,rowsales,rowbon,rowcred);	
    end; 
  L88:;
    if (RepSpec.ArtMode==1) then begin
      BonusRptPaid(RepSpec,totbonusbase,totbon,totcred,totcost,totsales,cashnotes);    
    end;  
    if(RepSpec.Media==20 or RepSpec.Media==2) then begin// Edit ************************** Wednesday, 15 September 2010 11:58:41
    end else begin// Edit ************************** Wednesday, 15 September 2010 11:58:43
      if (RepSpec.flags[0]==1) then begin
        Black_Divider(200,480);
        StartFormat(15);
        OutVal(215,0,totcred,M4Val,false);
        rs = totbonusbase + totcred;
        OutVal(400,0,rs,M4Val,true);
        OutVal(480,0,totbon,M4Val,true);
        EndFormat;
        StartFormat(15);
        EndFormat;
      end;
      
      Black_Divider(200,480);
      StartFormat(15);
      if (RepSpec.flags[9]!=0) then begin
        OutString(130,0,USetStr(4906),false);
        OutVal(265,0,totsales,M4Val,true);
        OutVal(315,0,totcost,M4Val,true);
        OutVal(365,0,totbonusbase,M4Val,true);
        OutVal(400,0,(totbonusbase*100)/totsales,M4Val,true);
      end else begin
        OutString(200,0,USetStr(4906),false);
        OutVal(400,0,totbonusbase,M4Val,true);
      end;
      OutVal(480,0,totbon,M4Val,true);
      EndFormat;
    end;// Edit ************************** Wednesday, 15 September 2010 11:48:41
  EndJob;
  RETURN;
END;
