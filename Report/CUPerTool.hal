external procedure CUPer_PrintReceipt(record RcVc,record IPVc,record CUVc,record BaseCurBlock,
                             record IPrsVc,Array LongInt,var Integer,
                             var val,var val,var val,var val,var val,Integer,Integer);
external procedure GetARAcc(string,var string);
external procedure CustListTransCLIn(record RcVc,record IPrsVc,record CUVc,var val,var val,Integer,Integer);
external procedure CustListTransCLOut(record RcVc,record IPrsVc,record CUVc,var val,var val,Integer,Integer);
external procedure CustListTransCredMan(record RcVc,record IPrsVc,record CUVc,var val,var val,Integer,Integer);
external procedure TRExtYc(record TRVc,var string);
external function Integer TypeOfCurncy(var string,var Integer);
external function Integer GetIntYc(Date);
external procedure CurValToOtherCur(Date,string,val,string,var val,Integer);
external function val MulWithRateToBase1(var string,Date,val,Integer);
external procedure BeginCurncyTotals(var Integer);
external function string 255 CreateInvoiceNumber(LongInt);
external function val MulRateToBase1(var string,val,val,val,val,val,val,Integer);

// moved CustListTransCLOut to CUPerTool2.hal

global
procedure GetIPPrepaymentAmount(record IVVc IVp,string basecur1,val cuscurvalp,var val lossvp,val curvalp,Integer incur,string cucurcode,var string cuperlastprepcur)
BEGIN
  record ARPayHistVc ARPayHistr;
  row IVVc IVrw;
  Integer i,rwcnt;
  val t,curv;
  LongInt lastcupno;
  Boolean foundf,onecurf;
  val cvp;
  val thesum;
  val bases,realbases;  
//  transaction string 10 cuperlastprepcur;//global variable crashes when export

  cvp = curvalp;
  lastcupno = -1;
  lossvp = blankval;
  rwcnt = MatRowCnt(IVp);
  for (i=0; i<rwcnt; i=i+1) begin
    MatRowGet(IVp,i,IVrw);
    if ((IVrw.stp==6) and (IVrw.CUPNr<>lastcupno)) then begin
      thesum = IVrw.Sum;
      curv = BlankVal;
      realbases = BlankVal;
      bases = BlankVal;
      ARPayHistr.CUPNr = IVrw.CUPNr;
      ARPayHistr.FileName = "IPVc";
      onecurf = true;
      foundf = true;
      ResetLoop(ARPayHistr);
      while (LoopMain(ARPayHistr,2,foundf)) begin
        if ((ARPayHistr.CUPNr<>IVrw.CUPNr) or (ARPayHistr.FileName<>"IPVc")) then begin foundf = false; end;
        if (foundf) then begin
          if (nonblank(cuperlastprepcur)) then begin
            if (ARPayHistr.CurncyCode!=cuperlastprepcur) then begin   
              onecurf = false;
            end;
          end;
          if ((cvp>ARPayHistr.Val) and (thesum>ARPayHistr.Val)) then begin
            cvp = cvp - ARPayHistr.Val;
            thesum = thesum - ARPayHistr.Val;
            curv = curv + ARPayHistr.Val;
            bases = bases + MulRateToBase1(IVp.CurncyCode,ARPayHistr.Val,IVp.FrRate,IVp.ToRateB1,IVp.ToRateB2,IVp.BaseRate1,IVp.BaseRate2,DefaultCurRoundOff);
            realbases = realbases + (ARPayHistr.BookVal*thesum)/ARPayHistr.Val;
// should thesum be converted to ARPayHistr curency ? 
          end else begin
            cvp = cvp - IVrw.Sum;
            curv = curv + ARPayHistr.Val;
            bases = bases + MulRateToBase1(IVp.CurncyCode,thesum,IVp.FrRate,IVp.ToRateB1,IVp.ToRateB2,IVp.BaseRate1,IVp.BaseRate2,DefaultCurRoundOff);
            realbases = realbases + (ARPayHistr.BookVal*thesum)/ARPayHistr.Val;
//StopAlert("realbases " & realbases & " ARPayHistr.BookVal " & ARPayHistr.BookVal & " thesum " & thesum & " ARPayHistr.Val " & ARPayHistr.Val);
            foundf = false;
          end;
          cuperlastprepcur = ARPayHistr.CurncyCode;
        end;
      end;
      ResetLoop(ARPayHistr);
      ARPayHistr.CUPNr = IVrw.CUPNr;
      ARPayHistr.FileName = "CLInVc";
      foundf = true;
      ResetLoop(ARPayHistr);
      while (LoopMain(ARPayHistr,2,foundf)) begin
        if ((ARPayHistr.CUPNr<>IVrw.CUPNr) or (ARPayHistr.FileName<>"CLInVc")) then begin foundf = false; end;
        if (foundf) then begin
          if (nonblank(cuperlastprepcur)) then begin
            if (ARPayHistr.CurncyCode!=cuperlastprepcur) then begin   
              onecurf = false;
            end;
          end;
          if ((cvp>ARPayHistr.Val) and (thesum>ARPayHistr.Val)) then begin
            cvp = cvp - ARPayHistr.Val;
            thesum = thesum - ARPayHistr.Val;
            curv = curv + ARPayHistr.Val;
            bases = bases + MulRateToBase1(IVp.CurncyCode,ARPayHistr.Val,IVp.FrRate,IVp.ToRateB1,IVp.ToRateB2,IVp.BaseRate1,IVp.BaseRate2,DefaultCurRoundOff);
            realbases = realbases + (ARPayHistr.BookVal*thesum)/ARPayHistr.Val;
// should thesum be converted to ARPayHistr curency ? 
          end else begin
            cvp = cvp - IVrw.Sum;
            curv = curv + ARPayHistr.Val;
            bases = bases + MulRateToBase1(IVp.CurncyCode,thesum,IVp.FrRate,IVp.ToRateB1,IVp.ToRateB2,IVp.BaseRate1,IVp.BaseRate2,DefaultCurRoundOff);
            realbases = realbases + (ARPayHistr.BookVal*thesum)/ARPayHistr.Val;
            foundf = false;
          end;
          cuperlastprepcur = ARPayHistr.CurncyCode;
        end;
      end;

      if (onecurf) then begin
        thesum = IVrw.Sum;
      end else begin
        thesum = (IVrw.Sum*realbases)/curv;
      end;
      lossvp = lossvp - Round(bases-realbases,DefaultCurRoundOff); // bases-thesum, makes no sense....
      if (incur!=0) then begin
        if (cucurcode==IVp.CurncyCode) then begin
          lossvp = 0;
        end;
      end;
      if (lossvp==0) then begin
        lossvp = blankval;
      end;
      lastcupno = IVrw.CUPNr;
    end;
  end;  
  RETURN;
END;

global
procedure IVVc_GetPrePaidAmount(record IVVc IVp,var val prepvp)
BEGIN
  row IVVc IVrw;
  Integer i,rwcnt;
  
  prepvp = blankval;
  rwcnt = MatRowCnt(IVp);
  for (i=0; i<rwcnt; i=i+1) begin
    MatRowGet(IVp,i,IVrw);
    if (IVrw.stp==6) then begin
      prepvp = prepvp + IVrw.Sum;
    end;
  end;
  RETURN;
END;

global
procedure MyCUPer_PrintInvoice(record RcVc RepSpec,LongInt IVSerNr,record CUVc CUp,record BaseCurBlock bascur,
                             var val balp,var val SumDebet,var val SumCredit,var val totloss,var val totgain,
                             Integer pos1,Integer pos2,var string cuperlastprepcur)
BEGIN
  val v,cashv,cuscurval,lossv,prepv;
  row IVVc IVrw,IV1rw;
  Integer i,rwcnt,mtrw,j;
  string 255 tstr;
  record IVVc IVr;
  record IVVc IV2r;
  Boolean cash;
  val frrate,torate1,torate2,baserate1,baserate2;

  IVr.SerNr = IVSerNr;
  if (ReadFirstMain(IVr,1,true)==false) then begin goto LCUPer_PrintInvoice; end;
  if (nonblank(RepSpec.ObjStr)) then begin
    if (SetInSet(RepSpec.ObjStr,IVr.Objects)==false) then begin goto LCUPer_PrintInvoice; end;
  end;  
  if (IVr.Invalid!=0) then begin goto LCUPer_PrintInvoice; end;        
  if (IVr.InvType==5) then begin goto LCUPer_PrintInvoice; end;        
  if (nonblank(RepSpec.FirstAcc)) then begin
    if (IVr.ARAcc!=RepSpec.FirstAcc) then begin
      goto LCUPer_PrintInvoice;
    end;
  end;
  if ((IVr.InvType==1) or (IVr.InvType==4) or (IVr.InvType==6)) then begin
    v = IVr.Sum4;
    cashv = 0;
    if (IVr.RetnValue>0) then begin
      v = v + IVr.RetnValue;
    end;
    rwcnt = MatRowCnt(IVr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(IVr,i,IVrw);
      switch (IVrw.stp) begin
        case 14: cashv = cashv + IVrw.Sum;
        case 15: cashv = cashv + MulRateToBase1(IVrw.CurncyCode,IVrw.Sum,IVrw.FrRate,IVrw.ToRateB1,IVrw.ToRateB2,IVrw.BaseRate1,IVrw.BaseRate2,DefaultCurRoundOff);
        case 16: cashv = cashv + IVrw.Sum;
      end;
    end;
    cuscurval = MulRateToBase1(IVr.CurncyCode,v,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
    if (RepSpec.flags[2]==0) then begin
      v = cuscurval;
    end else begin
      if (IVr.CurncyCode==CUp.CurncyCode) then begin
        cuscurval = v;              
      end;
    end;
    GetIPPrepaymentAmount(IVr,bascur.BaseCur1,cuscurval,lossv,IVr.Sum4,RepSpec.flags[2],CUp.CurncyCode,cuperlastprepcur);
    if (RepSpec.flags[2]==0) then begin
//            cuscurval = cuscurval + lossv;
    end else begin
      if (IVr.CurncyCode<>CUp.CurncyCode) then begin
//              cuscurval = cuscurval + lossv;
      end;  
    end;
    if (cashv==0) then begin
      cashv = blankval;
    end;
    balp = balp + cuscurval;
    balp = balp - cashv;
    SumDebet = SumDebet + cuscurval;
    SumCredit = SumCredit + cashv;
    if (RepSpec.ArtMode==1) then begin
      if (lossv!=0) then begin//            if ((RepSpec.flags[2]==0) and (lossv!=0)) then begin
        if (lossv<0) then begin
          totloss = totloss + lossv;
          SumCredit = SumCredit - lossv;
        end else begin
          totgain = totgain + lossv;
          SumDebet = SumDebet + lossv;
        end;
        balp = balp + lossv;              
      end;
      StartFormat(15);
      OutString(0,0,IVr.CustCode,false);
      OutDate(50,0,IVr.InvDate,false);
            
     // if (IVr.CurncyCode == "USD") then begin// Edit ************************** Thursday, 3 March 2011 17:14:48
        OutVal(100,0,balp,M4Val,true);
     //   end else begin// Edit ************************** Thursday, 3 March 2011 17:14:49
     //   OutVal(100,0,balp/IVr.FrRate,M4Val,true);// Edit ************************** Thursday, 3 March 2011 17:14:50
     // end;
            
      //OutVal(100,0,balp,M4Val,true);
      OutString(150,"DblIVVc",IVr.SerNr,false);
      //OutString(pos1,0,USetStr(2485),false);//tip
      OutDate(200,0,IVr.PayDate,false);
     // OutVal(250,0,IVr.Sum4,M4Val,false);
      tstr = CreateInvoiceNumber(IVr.SerNr);
     
      OutVal(210,0,v,M4Val,true);
      if (RepSpec.flags[2]==1) then begin 
        //OutString(7,0,IVr.CurncyCode,false); 
        OutVal(220,0,cashv,M4Val,true);
      end else begin
        OutVal(220,0,cashv,M4Val,true);
        if (lossv==0) then begin lossv = blankval; end;
        OutVal(220,0,lossv,M4Val,true);
      end;     
      mtrw = matrowcnt(IVr);
      EndFormat;
      
      for(j=0;j<mtrw;j=j+1) begin
      StartFormat(15);
        matrowget(IVr,j,IV1rw);
        //outstring(11,0,"",false);
        outstring(12,0,"",false);
        outstring(13,0,"",false);
        outstring(14,0,"",false);
        outstring(15,0,"",false);
        outstring(16,0,"",false);
        outstring(17,0,"",false);
        outstring(230,0,IV1rw.ArtCode,false);
        outstring(240,0,IV1rw.Spec,false);
        outval(250,0,IV1rw.Quant,M4Val,false);
        
        if (IVr.CurncyCode == "USD") then begin
          outval(260,0,IV1rw.Price,M4Val,false);
          outval(270,0,IV1rw.Sum,M4Val,false);
        end else begin
          outval(260,0,IV1rw.Price/IVr.FrRate,M4Val,false);
          outval(270,0,IV1rw.Sum/IVr.FrRate,M4Val,false);
        
        end;
        EndFormat;
        
      end;
      
      
     /* if (RepSpec.Media==mtFile) or (RepSpec.Media==mtExcel) or (RepSpec.Media==mtClipboard) then begin
        OutString(8,0,"",true);
      end;*/
      
      
      //OutVal(1,0,balp,M4Val,true);
      
// I don't think we should be printing them here plus the loss is beeing calculated when the Receipt takes place
//   which might look a bit wierd if the period starts after the Receipt
    end;
  end;
  if (IVr.InvType==2) then begin
    v = IVr.Sum4;
    cuscurval = MulRateToBase1(IVr.CurncyCode,v,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
    if (RepSpec.flags[2]==0) then begin
      v = cuscurval;
    end else begin
      if (IVr.CurncyCode==CUp.CurncyCode) then begin
        cuscurval = v;
      end;  
    end;
    SumDebet = SumDebet + cuscurval;
    SumCredit = SumCredit + cuscurval;
    if (RepSpec.ArtMode==1) then begin
      StartFormat(15);
      OutDate(0,0,IVr.InvDate,false);
      OutString(pos1,0,USetStr(2488),false);
      if (RepSpec.flags[15]!=0) then begin
        OutString(pos1,0,IVr.OfficialSerNr,false);
      end;
      tstr = CreateInvoiceNumber(IVr.SerNr);
      OutString(pos2,"DblCustPS2",tstr,false);            
      OutVal(3,0,v,M4Val,true);
      if (RepSpec.Media==mtFile) or (RepSpec.Media==mtExcel) or (RepSpec.Media==mtClipboard) then begin
        OutString(4,0,"",true);
      end;
      if (RepSpec.flags[2]==1) then begin
        OutString(7,0,IVr.CurncyCode,false);
      end;  
      IVVc_GetPrePaidAmount(IVr,prepv);
      v = v - prepv;
      SumCredit = SumCredit - prepv;
      balp = balp + prepv;
      OutVal(4,0,v,M4Val,true);
      if (RepSpec.flags[2]==1) then begin
        OutString(8,0,IVr.CurncyCode,false);
      end;  
      OutVal(1,0,balp,M4Val,true);
      EndFormat;
    end;
  end;
  if (IVr.InvType==3) then begin
    IV2r.SerNr = IVr.CredInv;
    cash = false;
    if (ReadFirstMain(IV2r,1,true)) then begin
      if (IV2r.InvType==2) then begin cash = true; end;
    end;
    frrate = IVr.FrRate;
    torate1 = IVr.ToRateB1;
    torate2 = IVr.ToRateB2;
    baserate1 = IVr.BaseRate1;
    baserate2 = IVr.BaseRate2;
    if (IVr.CredInv<>-1) then begin
       IV2r.SerNr = IVr.CredInv;
       if (ReadFirstMain(IV2r,1,true)) then begin
         frrate = IV2r.FrRate;
         torate1 = IV2r.ToRateB1;
         torate2 = IV2r.ToRateB2;
         baserate1 = IV2r.BaseRate1;
         baserate2 = IV2r.BaseRate2;
       end;
    end;        
    v = IVr.Sum4;
    if (IVr.RetnValue>0) then begin
//            v = v + IVr.RetnValue;
    end;
    rwcnt = MatRowCnt(IVr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(IVr,i,IVrw);
      switch (IVrw.stp) begin
        case 14: v = v - IVrw.Sum;
        case 15: v = v - MulRateToBase1(IVrw.CurncyCode,IVrw.Sum,IVrw.FrRate,IVrw.ToRateB1,IVrw.ToRateB2,IVrw.BaseRate1,IVrw.BaseRate2,DefaultCurRoundOff);
        case 16: v = v - IVrw.Sum;
      end;
    end;
    cuscurval = MulRateToBase1(IVr.CurncyCode,v,frrate,torate1,torate2,baserate1,baserate2,DefaultCurRoundOff);
    if (RepSpec.flags[2]==0) then begin
      v = cuscurval;
    end else begin
      if (IVr.CurncyCode==CUp.CurncyCode) then begin
        cuscurval = v;
      end;  
    end;
    if (RepSpec.flags[7]!=0) then begin
      if (cash==false) then begin
        balp = balp - cuscurval;
        SumDebet = SumDebet - cuscurval;
      end else begin
        SumCredit = SumCredit + cuscurval;
        SumDebet = SumDebet + cuscurval;
      end;
    end else begin
      if (cash==false) then begin
        balp = balp - cuscurval;
        SumCredit = SumCredit + cuscurval;
      end else begin
        SumCredit = SumCredit + cuscurval;
        SumDebet = SumDebet + cuscurval;
      end;
    end;
    if (RepSpec.ArtMode==1) then begin
      StartFormat(15);
      
      //----------------------------------// Kp
      OutString(0,0,IVr.CustCode,false);
      OutDate(50,0,IVr.InvDate,false);
      
      
       if (IVr.CurncyCode == "USD") then begin
        OutVal(100,0,balp,M4Val,true);
        end else begin
        OutVal(100,0,balp/IVr.FrRate,M4Val,true);
      end;
      
      OutString(150,"DblIVVc",IVr.SerNr,false);
      OutDate(150,0,IVr.PayDate,false);
      
      if (IVr.CurncyCode == "USD") then begin
        OutVal(100,0,-IVr.Sum4,M4Val,true);
      end else begin
        OutVal(100,0,-IVr.Sum4/IVr.FrRate,M4Val,true);
      end;
      
      
      
      
      
      mtrw = matrowcnt(IVr);
      EndFormat;
      
      for(j=0;j<mtrw;j=j+1) begin
      StartFormat(15);
        matrowget(IVr,j,IV1rw);
        //outstring(11,0,"",false);
        outstring(12,0,"",false);
        outstring(13,0,"",false);
        outstring(14,0,"",false);
        outstring(15,0,"",false);
        outstring(16,0,"",false);
        outstring(17,0,"",false);
        outstring(230,0,IV1rw.ArtCode,false);
        outstring(240,0,IV1rw.Spec,false);
        outval(250,0,IV1rw.Quant,M4Val,false);
        
        if (IVr.CurncyCode == "USD") then begin
          outval(260,0,-IV1rw.Price,M4Val,false);
          outval(270,0,-IV1rw.Sum,M4Val,false);
        end else begin
          outval(260,0,-IV1rw.Price/IVr.FrRate,M4Val,false);
          outval(270,0,-IV1rw.Sum/IVr.FrRate,M4Val,false);
        
        end;
        EndFormat;
        
      end;
      
    end;
  end;  
LCUPer_PrintInvoice:;    
  RETURN;
END;

global
procedure CUPer_PrintTransaction(record RcVc RepSpec,record CUVc CUp,record IPrsVc IPrsr,
                             var val balp,var val SumDebet,var val SumCredit,var val totloss,var val totgain,
                             Integer pos1,Integer pos2)
BEGIN
  val v,v2,cuscurval,tmp;
  record TRVc TRr;
  row TRVc TRrw;
  Integer tcnt,trwcnt;
  Integer typeofcur,oldstyle;
  string 255 tstr,t2;
  record IVVc IVr;

  v = blankval;
  v2 = blankval;

  TRr.Number = IPrsr.TransNr;
  TRr.IntYc = GetIntYc(IPrsr.TransDate);
  if (ReadFirstMain(TRr,2,true)) then begin
    trwcnt = MatRowCnt(TRr);
    for (tcnt=0;tcnt<trwcnt;tcnt=tcnt+1) begin
      MatRowGet(TRr,tcnt,TRrw);
      if (nonblank(RepSpec.ObjStr)) then begin
        if (SetInSet(RepSpec.ObjStr,TRrw.Objects)==false) then begin goto L11; end;
      end;
      if (TRrw.CompCode!=CUp.Code) then begin
        goto L11;
      end;  
      if ((TRrw.Typ==1) and (TRrw.SerNr==-1) and (IPrsr.IVNr==-1)) then begin
        if (TRrw.DebVal!=0) then begin
          v = TRrw.DebVal;
          cuscurval = TRrw.DebVal;
          if (nonblank(TRrw.CurDebVal)) then begin
            v = TRrw.CurDebVal;
            cuscurval = MulRateToBase1(TRrw.Curncy,v,TRrw.FrRate,TRrw.ToRateB1,TRrw.ToRateB2,TRrw.BaseRate1,TRrw.BaseRate2,DefaultCurRoundOff);
            if (RepSpec.flags[2]==0) then begin
              v = cuscurval;
            end else begin
              if (TRrw.Curncy==CUp.CurncyCode) then begin
                cuscurval = v;
              end;  
            end;
          end else begin
            typeofcur = TypeOfCurncy(TRrw.Curncy,oldstyle);   
            if (RepSpec.flags[2]==1) then begin
              if (typeofcur==2) then begin
                v = TRrw.DebVal2;
                if (TRrw.Curncy==CUp.CurncyCode) then begin
                  cuscurval = TRrw.DebVal2;
                end;  
              end;
            end;
          end;
          balp = balp + cuscurval;
          SumDebet = SumDebet + cuscurval;
          if (RepSpec.ArtMode==1) then begin
            StartFormat(15);
            OutDate(0,0,TRr.TransDate,false);
            OutString(pos1,0,USetStr(2530),false);
            TRExtYc(TRr,tstr);
            OutString(pos2,"DBLTrans",tstr,false);
            OutVal(3,0,v,M4Val,true);
            if (RepSpec.Media==mtFile) or (RepSpec.Media==mtExcel) or (RepSpec.Media==mtClipboard) then begin
              OutString(4,0,"",true);
            end;
            if (RepSpec.flags[2]==1) then begin
              OutString(7,0,TRrw.Curncy,false);
            end;  
            OutVal(1,0,balp,M4Val,true);
            EndFormat;
          end;
        end;                    
        if (TRrw.CredVal!=0) then begin
          v = TRrw.CredVal;
          cuscurval = TRrw.CredVal;
          if (nonblank(TRrw.CurCredVal)) then begin
            v = TRrw.CurCredVal;
            cuscurval = MulRateToBase1(TRrw.Curncy,v,TRrw.FrRate,TRrw.ToRateB1,TRrw.ToRateB2,TRrw.BaseRate1,TRrw.BaseRate2,DefaultCurRoundOff);
            if (RepSpec.flags[2]==0) then begin
              v = cuscurval;
            end else begin
              if (TRrw.Curncy==CUp.CurncyCode) then begin
                cuscurval = v;
              end;  
            end;
          end else begin
            typeofcur = TypeOfCurncy(TRrw.Curncy,oldstyle);   
            if (RepSpec.flags[2]==1) then begin
              if (typeofcur==2) then begin
                v = TRrw.CredVal2;
                if (TRrw.Curncy==CUp.CurncyCode) then begin
                  cuscurval = TRrw.CredVal2;
                end;  
              end;
            end;
          end;
          balp = balp - cuscurval;
          SumCredit = SumCredit + cuscurval;
          if (RepSpec.ArtMode==1) then begin
            StartFormat(15);
            OutDate(0,0,TRr.TransDate,false);
            OutString(pos1,0,USetStr(2530),false);
            TRExtYc(TRr,tstr);
            OutString(pos2,"DblTrans",tstr,false);
            OutString(3,0,"",true);
            OutVal(4,0,v,M4Val,true);
            if (RepSpec.flags[2]==1) then begin
              OutString(8,0,TRrw.Curncy,false);
            end;  
            OutVal(1,0,balp,M4Val,true);
            EndFormat;
          end;
        end;         
      end;
      if ((TRrw.Typ==1) and (TRrw.SerNr!=-1)) then begin
        v = blankval;
        if (TRrw.DebVal!=0)then begin
          v = blankval;
          if (RepSpec.flags[3]==0) then begin
            if (TRrw.SerNr==IPrsr.IVNr) then begin
              if (TRr.TransDate==IPrsr.TransDate) then begin
                if (TRrw.CompCode==CUp.Code) then begin
                  tmp = TRrw.DebVal;
                  cuscurval = TRrw.DebVal;
                  if (nonblank(TRrw.CurDebVal)) then begin
                    tmp = TRrw.CurDebVal;
                    cuscurval = MulRateToBase1(TRrw.Curncy,tmp,TRrw.FrRate,TRrw.ToRateB1,TRrw.ToRateB2,TRrw.BaseRate1,TRrw.BaseRate2,DefaultCurRoundOff);
                    if (RepSpec.flags[2]==0) then begin
                      tmp = cuscurval;
                      if (tmp==0) then begin
                        tmp = TRrw.DebVal;
                      end;
                    end else begin
                      if (TRrw.Curncy==CUp.CurncyCode) then begin
                        cuscurval = tmp;
                      end;  
                    end;
                    if (cuscurval==0) then begin
                      cuscurval = TRrw.DebVal;
                    end;
                  end else begin
                    typeofcur = TypeOfCurncy(TRrw.Curncy,oldstyle);   
                    if (RepSpec.flags[2]==1) then begin
                      if (typeofcur==2) then begin
                        tmp = TRrw.DebVal2;
                        if (TRrw.Curncy==CUp.CurncyCode) then begin
                          cuscurval = TRrw.DebVal2;
                        end;  
                      end;
                    end else begin
                      if (typeofcur==2) then begin
                        IVr.SerNr = TRrw.SerNr;
                        if (ReadFirstMain(IVr,1,true)) then begin
                          tmp = MulRateToBase1(TRrw.Curncy,TRrw.DebVal2,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
                          cuscurval = tmp;
                        end;
                      end;
                    end;
                  end;
                  balp = balp + cuscurval;
                  SumDebet = SumDebet + cuscurval;
                  v = v + tmp;
                end;
              end;
            end;
          end;
          if (RepSpec.flags[3]==1) then begin
            if (TRrw.SerNr==IPrsr.IVNr) then begin
              if (TRr.TransDate!=IPrsr.TransDate) then begin
                if (TRrw.CompCode==CUp.Code) then begin
                  tmp = TRrw.DebVal;
                  cuscurval = TRrw.DebVal;
                  if (TRrw.CurDebVal!=0) then begin
                    tmp = TRrw.CurDebVal;
                    cuscurval = MulRateToBase1(TRrw.Curncy,tmp,TRrw.FrRate,TRrw.ToRateB1,TRrw.ToRateB2,TRrw.BaseRate1,TRrw.BaseRate2,DefaultCurRoundOff);
                    if (RepSpec.flags[2]==0) then begin
                      tmp = cuscurval;
                    end else begin
                      if (TRrw.Curncy==CUp.CurncyCode) then begin
                        cuscurval = tmp;
                      end;  
                    end;
                  end else begin
                    typeofcur = TypeOfCurncy(TRrw.Curncy,oldstyle);   
                    if (RepSpec.flags[2]==1) then begin
                      if (typeofcur==2) then begin
                        tmp = TRrw.DebVal2;
                        if (TRrw.Curncy==CUp.CurncyCode) then begin
                          cuscurval = TRrw.DebVal2;
                        end;  
                      end;
                    end else begin
                      if (typeofcur==2) then begin
                        IVr.SerNr = TRrw.SerNr;
                        if (ReadFirstMain(IVr,1,true)) then begin
                          tmp = MulRateToBase1(TRrw.Curncy,TRrw.DebVal2,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
                          cuscurval = tmp;
                        end;
                      end;
                    end;
                  end;
                  balp = balp + cuscurval;
                  SumDebet = SumDebet + cuscurval;
                  v = v + tmp;
                end;
              end;
            end;
          end;
        end;              
        if (nonblank(v)) then begin
          if (RepSpec.ArtMode==1) then begin             
            tstr = USetStr(2530);               
            TRExtYc(TRr,t2);
            if (IPrsr.IVNr!=-1) then begin
              t2 = t2 & " (";
              t2 = t2 & IPrsr.IVNr;
              t2 = t2 & " )";
            end;
            StartFormat(15);
            OutDate(0,0,IPrsr.TransDate,false);
            OutString(pos1,0,tstr,false);
            TRExtYc(TRr,tstr);
            OutString(pos2,"DblTrans",tstr,false);
            OutVal(3,0,v,M4Val,true);
            if (RepSpec.Media==mtFile) or (RepSpec.Media==mtExcel) or (RepSpec.Media==mtClipboard) then begin
              OutString(4,0,"",true);
            end;
            if (RepSpec.flags[2]==1) then begin
              OutString(7,0,TRrw.Curncy,false);
            end;  
            OutVal(1,0,balp,M4Val,true);
            EndFormat;
          end;
        end;               
        v = blankval;
        if (TRrw.CredVal!=0)then begin              
          if (RepSpec.flags[3]==0) then begin
            if (TRrw.SerNr==IPrsr.IVNr) then begin
              if (TRr.TransDate==IPrsr.TransDate) then begin
                if (TRrw.CompCode==CUp.Code) then begin
                  tmp = TRrw.CredVal;
                  cuscurval = TRrw.CredVal;
                  if (nonblank(TRrw.CurCredVal)) then begin
                    tmp = TRrw.CurCredVal;

//*                          IVr.SerNr = TRrw.SerNr;
//*                          if (ReadFirstMain(IVr,1,true)) then begin
//*                            cuscurval = MulRateToBase1(IVr.CurncyCode,tmp,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
//*                          end else begin 

                      cuscurval = MulRateToBase1(TRrw.Curncy,tmp,TRrw.FrRate,TRrw.ToRateB1,TRrw.ToRateB2,TRrw.BaseRate1,TRrw.BaseRate2,DefaultCurRoundOff);
                      if (cuscurval==tmp) then begin cuscurval = TRrw.CredVal; end;
//cuscurval is always Base 1 unless CUstomer in curency and that is dealt few line below, sometimes there is no rates in line but there is curnecy and base 1 value in transction rows
//                          end;
                    if (RepSpec.flags[2]==0) then begin
                       tmp = cuscurval;
                    end else begin
                      if (TRrw.Curncy==CUp.CurncyCode) then begin 
                        cuscurval = tmp;
                      end;  
                    end;
                  end else begin
                    typeofcur = TypeOfCurncy(TRrw.Curncy,oldstyle);   
                    if (RepSpec.flags[2]==1) then begin
                      if (typeofcur==2) then begin
                        tmp = TRrw.CredVal2;
                        if (TRrw.Curncy==CUp.CurncyCode) then begin
                          cuscurval = TRrw.CredVal2;

//*                              end else begin
//*                                IVr.SerNr = TRrw.SerNr;
//*                                if (ReadFirstMain(IVr,1,true)) then begin
//*                                  cuscurval = MulRateToBase1(IVr.CurncyCode,TRrw.CredVal2,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
//*                                end;

                        end;
                      end;

//*                          end else begin
//*                            if (typeofcur==2) then begin
//*                              IVr.SerNr = TRrw.SerNr;
//*                              if (ReadFirstMain(IVr,1,true)) then begin
//*                                tmp = MulRateToBase1(IVr.CurncyCode,TRrw.CredVal2,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
//*                                cuscurval = tmp;
//*                              end;
//*                            end;

                    end;
                  end;
                  balp = balp - cuscurval;
                  SumCredit = SumCredit + cuscurval;
                  v = v + tmp;
                end;
              end;
            end;
          end;
          if (RepSpec.flags[3]==1) then begin
            if (TRrw.SerNr==IPrsr.IVNr) then begin
              if (TRr.TransDate==IPrsr.TransDate) then begin
                if (TRrw.CompCode==CUp.Code) then begin
                  tmp = TRrw.CredVal;
                  cuscurval = TRrw.CredVal;
                  if (nonblank(TRrw.CurCredVal)) then begin
                    tmp = TRrw.CurCredVal;

//*                          IVr.SerNr = TRrw.SerNr;
//*                          if (ReadFirstMain(IVr,1,true)) then begin
//*                            cuscurval = MulRateToBase1(IVr.CurncyCode,tmp,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
//*                          end else begin 

                      cuscurval = MulRateToBase1(TRrw.Curncy,tmp,TRrw.FrRate,TRrw.ToRateB1,TRrw.ToRateB2,TRrw.BaseRate1,TRrw.BaseRate2,DefaultCurRoundOff);
//                          end;
                    if (RepSpec.flags[2]==0) then begin
                      tmp = cuscurval;
                    end else begin
                      if (TRrw.Curncy==CUp.CurncyCode) then begin
                        cuscurval = tmp;
                      end;  
                    end;
                  end else begin
                    typeofcur = TypeOfCurncy(TRrw.Curncy,oldstyle);   
                    if (RepSpec.flags[2]==1) then begin
                      if (typeofcur==2) then begin
                        tmp = TRrw.CredVal2;
                        if (TRrw.Curncy==CUp.CurncyCode) then begin
                          cuscurval = TRrw.CredVal2;
                        end;  
                      end;

//*                          end else begin
//*                            if (typeofcur==2) then begin
//*                              IVr.SerNr = TRrw.SerNr;
//*                              if (ReadFirstMain(IVr,1,true)) then begin
//*                                tmp = MulRateToBase1(TRrw.Curncy,TRrw.CredVal2,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
//*                                cuscurval = tmp;
//*                              end;
//*                      end;
  
                    end;
                  end;
                  balp = balp - cuscurval;
                  SumCredit = SumCredit + cuscurval;
                  v = v + tmp;
                end;
              end;
            end;
          end;
          if (nonblank(v)) then begin
            if (RepSpec.ArtMode==1) then begin
              tstr = USetStr(2530);               
              TRExtYc(TRr,t2);
              StartFormat(15);
              OutDate(0,0,IPrsr.TransDate,false);
              OutString(pos1,0,tstr,false);
              TRExtYc(TRr,tstr);
              tstr = tstr & " (";
              tstr = tstr & IPrsr.IVNr;
              tstr = tstr & " )";
              OutString(pos2,"DblTrans",tstr,false);
              OutVal(4,0,v,M4Val,true);
              if (RepSpec.flags[2]==1) then begin
                OutString(8,0,TRrw.Curncy,false);
              end;  
              OutVal(1,0,balp,M4Val,true);
              EndFormat;
            end;
          end;
        end;
      end;
L11:;               
    end;   
  end;
  RETURN;
END;

global
procedure CUPer_PrintDataForInvoice(record RcVc RepSpec,LongInt IVSerNr,record CUVc CUp,record BaseCurBlock bascur,
                             var val balp,var val SumDebet,var val SumCredit,var val totloss,var val totgain,
                             Integer pos1,Integer pos2)
BEGIN
  record IPrsVc IPrsr;
  Boolean found,testf;
  string 60 ckey;
  record IPVc IPr;
  Array LongInt aipnr;
  Integer acnt;
  record IVVc IVr;
  Integer cnt;
  string 255 cuperlastprepcur;

  IVr.SerNr = IVSerNr;
  if (ReadFirstMain(IVr,1,true)==false) then begin goto LCUPer_PrintDataForInvoice; end;
  if (nonblank(RepSpec.ObjStr)) then begin
    if (SetInSet(RepSpec.ObjStr,IVr.Objects)==false) then begin goto LCUPer_PrintDataForInvoice; end;
  end;  
  if (IVr.Invalid!=0) then begin goto LCUPer_PrintDataForInvoice; end;        
  if (IVr.InvType==5) then begin goto LCUPer_PrintDataForInvoice; end;        

  IPrsr.IVNr = IVSerNr;
  if (RepSpec.flags[5]==1) then begin
    IPrsr.CustDate = RepSpec.sStartDate;
    ckey = "IVKeyCustDate";
  end else begin
    IPrsr.TransDate = RepSpec.sStartDate;
    ckey = "IVKeyTransDate";
  end;  
  IPrsr.CustCode = CUp.Code;
  IPrsr.TransType = 0;
  found = true;
  while (LoopKey(ckey,IPrsr,3,found)) begin
    if (IPrsr.IVNr!=IVSerNr) then begin found = false; end;  
    if (IPrsr.CustCode!=CUp.Code) then begin found = false; end;  
    if (found) then begin
     if (RepSpec.flags[5]==1) then begin
        if (IPrsr.CustDate>RepSpec.sEndDate) then begin found = false; end;
      end else begin
        if (IPrsr.TransDate>RepSpec.sEndDate) then begin found = false; end;
      end;
    end;  
    if (found) then begin
      testf = true;
      if (IPrsr.IVNr==IPrsr.TransNr) then begin
        if (IPrsr.TransType<1) then begin testf = false; end;  
      end;
      if (testf) then begin
        cnt = cnt + 1;        
        switch (IPrsr.TransType) begin
          case 0:
            MyCUPer_PrintInvoice(RepSpec,IPrsr.TransNr,CUp,bascur,balp,SumDebet,SumCredit,totloss,totgain,pos1,pos2,cuperlastprepcur);
          case 1:
            if (nonblank(RepSpec.ObjStr)) then begin goto L555; end;
            IPr.SerNr = IPrsr.TransNr;
            if (ReadFirstMain(IPr,1,true)) then begin
              if (IPr.RejectedFlag!=0) then begin goto L555; end;
              if (RepSpec.flags[4]==1) then begin
                if (IPr.ReceivedFlag==0) then begin
                   if (IPr.OKFlag==0) then begin
                     goto L555;
                   end;
                 end;    
              end else begin
                if (IPr.OKFlag==0) then begin
                  goto L555;
                end;  
              end;
              CUPer_PrintReceipt(RepSpec,IPr,CUp,bascur,IPrsr,aipnr,acnt,balp,SumDebet,SumCredit,totloss,totgain,pos1,pos2);
    //  PrintCurncyTotals(ipacur,ipav1,ipav2,ipav3,ipcurcnt,4,480,-1,300,false,RepSpec.PocketPC);
            end;
          case 2:
            CUPer_PrintTransaction(RepSpec,CUp,IPrsr,balp,SumDebet,SumCredit,totloss,totgain,pos1,pos2);
          case 3:
            CustListTransCLIn(RepSpec,IPrsr,CUp,balp,SumCredit,pos1,pos2);
          case 4:
            CustListTransCLOut(RepSpec,IPrsr,CUp,balp,SumDebet,pos1,pos2);
          case 5:
            CustListTransCLOut(RepSpec,IPrsr,CUp,balp,SumDebet,pos1,pos2);
          case 6:
            CustListTransCredMan(RepSpec,IPrsr,CUp,balp,SumDebet,pos1,pos2);
        end;
      end;
L555:;      
    end;
  end;
LCUPer_PrintDataForInvoice:;  
  if (cnt>0) then begin
    Gray_Divider(0,1);
  end;
  RETURN;
END;
