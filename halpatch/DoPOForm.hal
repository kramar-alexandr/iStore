external procedure GetUserName(string,var string);
external procedure PrintPersonsCustomerDetails(string);
external procedure OutAddress(string,string,string,string,string,string,string);
external function string 255 GetVarietyComment(string,string);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external function Boolean FindFormcode(Integer,Integer);
external function Boolean GetFirstPurchaseItem2(string,string,var record PIVc);  //LOBO
external function val MulRateToBase2(var string,val,val,val,val,val,val,Integer);
external function val MulRateToBase1(var string,val,val,val,val,val,val,Integer);
external procedure CommonDocumentFields(record RcVc);
external procedure NumberofDocumentPages(string,Integer);
external procedure InvVat(Integer,Integer,Integer,Integer,string,val,var val,var val,var val,var val,var val);
external function Boolean GetPurchaseItem(string,var record PIVc);
external procedure SelectUnitText(string,string,var string);
external procedure GetObjectText(string,var string);
external procedure BCEAN(string,var string);
external procedure BC39(string,var string);
external procedure ItemBC39(string,var string);
external procedure ItemBCEAN(string,var string);
external procedure ItemBCEAN13(string,var string);
external procedure GetShipDealText(string,string,var string);
external procedure GetShipModeText(string,string,var string);
external procedure GetPayDealText(string,string,var string);
external procedure ValToText(val,Integer,string,string,var string);
external function Boolean GetPD(var record PDVc);
external procedure PrintNote(record NotepadVc);
external procedure GetCurncyComment(string,var string);
external procedure GetFieldArgument(record DocVc,Integer,var string);
external procedure Val2ToText(string,val,Integer,string,string,var string);
external procedure GetLangNr(string,var record LangNrVc);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external procedure GetItemGroup(string,var string);
external procedure GetFullCurncyRate(var string,Date,var val,var val,var val,var val,var val);


function val conv(string curcode,string curcodefrom,date curdate)
begin
  val frrate,to1,to2,br1,br2;
  val fromfrrate,fromto1,fromto2,frombr1,frombr2;
  record BaseCurBlock BCb;

  blockload(BCb);
  GetFullCurncyRate(curcode,curdate,frrate,to1,to2,br1,br2);
  if(BCb.BaseCur1==curcodefrom)then begin
    fromfrrate = 1;
    fromto1 = 1;
  end else begin
    GetFullCurncyRate(curcodefrom,curdate,fromfrrate,fromto1,fromto2,frombr1,frombr2);
  end;
  conv=(frrate/to1)/(fromfrrate/fromto1);

return;
end; 

procedure POPrintNote(record POVc POr,string argumentstr)
BEGIN
  record NotepadVc Noter;
  record RLinkVc RLr;
  Integer notenr;

  notenr = 1;
  while (ReadRecordLink(POr,notenr,Noter,RLr)) begin
    if ((argumentstr==RLr.Comment) or (blank(argumentstr))) then begin
      PrintNote(Noter);
      goto LPOPrintNote;
    end;
    notenr = notenr + 1;
  end;
LPOPrintNote:;  
  RETURN;
END;

procedure PrintPO(record RcVc RepSpec,record POVc POr,string formcode)
BEGIN
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;
  record IIBlock IIRec;
  record DocVc Docr;
  record CUVc VEr;
  record CUVc invtoVEr;
  record INVc INr;
  record PDVc PDr;
  record PIVc PIr;
  Integer i,rwcnt,rownr;
  string 255 tstr;
  row POVc POrw;
  val t,totweight,totvolume;
  val vatprc,vatval,vatexclprc,vatinclprc,rowtax;
  record RoundBlock RoundRec; 
  string 200 r;
  
  val sumrownotpdv,sumnotpdv,pdv,sumall;// Edit ************************** Thursday, 19 January 2012 16:25:16
  
  val sumnopdv,roundprice,pdv1;// Edit ************************** Thursday, 19 January 2012 16:25:17

  CommonDocumentFields(RepSpec);    
  NumberofDocumentPages(formcode,MatRowCnt(POr));
  BlockLoad(RoundRec);
  BlockLoad(IIRec);  
  BlockLoad(SysFormatRec);  
  GetLangNr("",LangNrr);
  Docr.Code = formcode;
  if (ReadFirstMain(Docr,1,true)) then begin
  end;
  invtoVEr.Code = POr.InvoiceToCode;
  if (ReadFirstMain(invtoVEr,1,true)) then begin
  end;
  OUTFORMFIELD("F_FAKTURATILL",invtoVEr.Name);
  OUTFORMFIELD("F_FAKTURATILL",invtoVEr.InvAddr0);
  OUTFORMFIELD("F_FAKTURATILL",invtoVEr.InvAddr1);
  OUTFORMFIELD("F_FAKTURATILL",invtoVEr.InvAddr2);
  OUTFORMFIELD("F_FAKTURATILL",invtoVEr.InvAddr3);
  OUTFORMFIELD("F_FAKTURATILL",invtoVEr.InvAddr4);
  VEr.Code = POr.VECode;
  if (ReadFirstMain(VEr,1,true)) then begin
  end;
  if (FIELDINFORM("F_NOTE")) then begin
    GetFieldArgument(Docr,F_NOTE,tstr);
    POPrintNote(POr,tstr);
  end;
  PrintValue("F_RANTASATS",IIRec.IntRate,M4Val,LangNrr,SysFormatRec,false);
  OUTFORMFIELD("F_SUPPLIEREMAIL",VEr.eMail);     
  OUTFORMFIELD("F_LEVPHONE",VEr.Phone);
  OUTFORMFIELD("F_LEVFAX",VEr.Fax);
  OUTFORMFIELD("F_LEVVATNR",VEr.VATNr);
  OUTFORMFIELD("F_EGETKUNDNR",VEr.VECustID);
  if (FIELDINFORM("F_PAYTERMTEXT")) then begin
    PDr.Code = POr.PayDeal;
    if (GetPD(PDr)) then begin
    end;
    OUTFORMFIELD("F_PAYTERMTEXT",PDr.pdComment);
  end;
  OUTFORMFIELD("F_ADRESSNAMN",POr.Addr0);
  OUTFORMFIELD("F_PROJEKTNUMMER",POr.PRCode);
  OUTFORMFIELD("F_ORDNUMMER",POr.OrdNr);
  OUTFORMFIELD("F_ORDERNUMMER",POr.OrdNr);
  OUTFORMFIELD("F_ORDERDATE",POr.TransDate);
  OUTFORMFIELD("F_SERNR",POr.SerNr);
  if (FIELDINFORM("F_SUMMA")) then begin
    GetFieldArgument(Docr,F_SUMMA,tstr);
    if (nonblank(tstr)) then begin
      tstr = ValToString(Round(POr.Sum1,StringToInt(tstr)),M45Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
    end else begin
      tstr = ValToString(POr.Sum1,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
    end;
    OUTFORMFIELD("F_SUMMA",tstr);
  end;
  if (FIELDINFORM("F_MOMS")) then begin
    GetFieldArgument(Docr,F_MOMS,tstr);
    if (nonblank(tstr)) then begin
      tstr = ValToString(Round(POr.Sum3,StringToInt(tstr)),M45Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
    end else begin
      tstr = ValToString(POr.Sum3,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
    end;
    OUTFORMFIELD("F_MOMS",tstr);
  end;
  if (FIELDINFORM("F_ATTBETALA")) then begin
    GetFieldArgument(Docr,F_ATTBETALA,tstr);
    if (nonblank(tstr)) then begin
      tstr = ValToString(Round(POr.Sum4,StringToInt(tstr)),M45Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
    end else begin
      tstr = ValToString(POr.Sum4,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
    end;
    OUTFORMFIELD("F_ATTBETALA",tstr);
  end;
  if (FIELDINFORM("F_ATTBETALATEXT")) then begin
    ValToText(POr.Sum4,M4Val,POr.CurncyCode,POr.LangCode,tstr);
    OUTFORMFIELD("F_ATTBETALATEXT",tstr);  
  end;
  OUTFORMFIELD("F_COMMENT",POr.Comment);
  OUTFORMFIELD("F_LEVNR",POr.VECode);
  OUTFORMFIELD("F_REFERENSNUMMER",POr.Reference);
  OutAddress("F_ADRESS",POr.Addr0,POr.Addr1,POr.Addr2,POr.Addr3,POr.InvAddr3,POr.InvAddr4);
  OutAddress("F_LEVADRESS",POr.ShipAddr0,POr.ShipAddr1,POr.ShipAddr2,POr.ShipAddr3,POr.DelAddr3,POr.DelAddr4);
  OUTFORMFIELD("F_CONTRACTNR",POr.POCOSerNr);
  OUTFORMFIELD("F_LOCATION",POr.Location);
  OUTFORMFIELD("F_SALESMAN",POr.SalesMan);
  GetUserName(POr.SalesMan,tstr);
  OUTFORMFIELD("F_SALJARNAMN",tstr);
  PrintPersonsCustomerDetails(POr.SalesMan);
  if (FIELDINFORM("F_VILLKOR")) then begin
    GetPayDealText(POr.PayDeal,POr.LangCode,tstr);
    OUTFORMFIELD("F_VILLKOR",tstr);
  end;
  OUTFORMFIELD("F_VARREFERENS",POr.OurContact);
  OUTFORMFIELD("F_CONTACTEMAIL",VEr.eMail);
  OUTFORMFIELD("F_CUSTOMEREMAIL",VEr.eMail);     
  OUTFORMFIELD("F_ERREFERENS",POr.VEContact);
  OUTFORMFIELD("F_PLANLEVDATUM",POr.PlanShip);
  OUTFORMFIELD("F_LEVSATT",POr.ShipMode);
  if (FIELDINFORM("F_LEVSATTTEXT")) then begin
    GetShipModeText(POr.ShipMode,POr.LangCode,tstr);
    OUTFORMFIELD("F_LEVSATTTEXT",tstr);
  end;
  OUTFORMFIELD("F_VALUTA",POr.CurncyCode);
  OUTFORMFIELD("F_SHIPTERM",POr.ShipDeal);
  if (FIELDINFORM("F_SHIPTERMTEXT")) then begin
    GetShipDealText(POr.ShipDeal,POr.LangCode,tstr);
    OUTFORMFIELD("F_SHIPTERMTEXT",tstr);
  end;
  OUTFORMFIELD("F_OBJECT",POr.Objects);
  if (FIELDINFORM("F_OBJECTTEXT")) then begin
    GetObjectText(POr.Objects,tstr);
    OUTFORMFIELD("F_OBJECTTEXT",tstr);
  end;
  
  rwcnt = MatRowCnt(POr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(POr,i,POrw);
    if (ReadFirstItem(POrw.ArtCode,INr,true,false)) then begin
    end;
    OUTFORMFIELD("F_COMMODITYCODE",INr.EUCodex);
    
         // Edit Start ---------------------------------------------- Edit Start
	//Tuesday, 20 September 2011 11:01:41
        if (FIELDINFORM("F_EKNCODE")) then begin
          OUTFORMFIELD("F_EKNCODE",INr.EKNCode);
        end;
	// Edit End ---------------------------------------------- Edit End
    
    OUTFORMFIELD("F_ALTERNATIVECODE",INr.AlternativeCode);
    PrintValue("F_ROWWEIGHT",INr.Weight*POrw.Quant,M4Qty,LangNrr,SysFormatRec,false);
    if (FIELDINFORM("F_ARTNRBC39")) then begin
      ItemBC39(POrw.ArtCode,tstr);
      OUTFORMFIELD("F_ARTNRBC39",tstr);
    end;  
    if (FIELDINFORM("F_ARTNRBCEAN")) then begin
      ItemBCEAN(POrw.ArtCode,tstr);
      OUTFORMFIELD("F_ARTNRBCEAN",tstr);
    end;  
    if (FIELDINFORM("F_ARTNRBCEAN13")) then begin
      ItemBCEAN13(POrw.ArtCode,tstr);      
      OUTFORMFIELD("F_ARTNRBCEAN13",tstr);
    end;  
    if (FIELDINFORM("F_LEVARTNRBC39")) then begin
      BC39(POrw.VEArtCode,tstr);      
      OUTFORMFIELD("F_LEVARTNRBC39",tstr);
    end;  
    if (FIELDINFORM("F_LEVARTNRBCEAN")) then begin
      BCEAN(POrw.VEArtCode,tstr);      
      OUTFORMFIELD("F_LEVARTNRBCEAN",tstr);
    end;  
    OUTFORMFIELD("F_SPECIFIKATION",POrw.Spec);
    OUTFORMFIELD("F_BESKRIVNING",POrw.Comment);
    PrintValue("F_VARTANTAL",POrw.Quant,M4UVal,LangNrr,SysFormatRec,false);    
    PrintValue("F_BELOPP",POrw.Sum,M4Val,LangNrr,SysFormatRec,false);
    PrintValue("F_ANTAL",POrw.VEQuant,M4UVal,LangNrr,SysFormatRec,false);
    
    GetFieldArgument(Docr,F_APRIS,tstr);
    if (blank(tstr)) then begin
      PrintValue("F_APRIS",POrw.Price,M45Val,LangNrr,SysFormatRec,false);
    end else begin
      PrintValue("F_APRIS",Round(POrw.Price,StringToInt(tstr)),M45Val,LangNrr,SysFormatRec,false);
    end;
    
    //
    sumrownotpdv = Round(POrw.Price*1.01*conv("UAH_A",POr.CurncyCode,POr.TransDate)*10/12,2);
    if (FIELDINFORM("F_SUMROWUAHANAL1")) then begin//-------------------------------------------
        t = blankval;
        If(nonblank(POrw.Sum)) then begin
        t=sumrownotpdv*POrw.Quant;// Edit ************************** Friday, 9 September 2011 09:48:53// Edit ************************** Friday, 9 September 2011 09:48:53
        PrintValue("F_SUMROWUAHANAL1",t,M45Val,LangNrr,SysFormatRec,false);
        end;
    end;
    
    if (FIELDINFORM("F_APRISUAHANAL1")) then begin//-------------------------------------------
        r = StringToInt(tstr);
        t = blankval;
        If(nonblank(POrw.Price)) then begin
        t=sumrownotpdv;
        // Edit ************************** Friday, 9 September 2011 09:48:49// Edit ************************** Friday, 9 September 2011 09:48:51
        PrintValue("F_APRISUAHANAL1",t,M45Val,LangNrr,SysFormatRec,false);
        end;
    end;
    sumnotpdv = sumnotpdv+sumrownotpdv*POrw.Quant;
    //
    
    
    OUTFORMFIELD("F_ARTNR",POrw.ArtCode);
    OUTFORMFIELD("F_ARTNR2",POrw.ArtCode);
    OUTFORMFIELD("F_ARTCODEVARIETIES",GetVarietyComment(POrw.ArtCode,INr.Code));
    OUTFORMFIELD("F_ARTCODENOVARIETIES",INr.Code);
    OUTFORMFIELD("F_LEVARTNR",POrw.VEArtCode);
    PrintValue("F_RABATT",POrw.vRebate,M4Val,LangNrr,SysFormatRec,false);
    OUTFORMFIELD("F_MOMSKOD",POrw.VATCode);
    PrintValue("F_PRICEFACTOR",POrw.PriceFactor,M4UVal,LangNrr,SysFormatRec,false);
    if (FIELDINFORM("F_ROWOBJEKTTEXT")) then begin
      GetObjectText(POrw.Objects,tstr);
      OUTFORMFIELD("F_ROWOBJEKTTEXT",tstr);
    end;
    if (POrw.PriceFactor!=0) then begin
      t = POrw.Price/POrw.PriceFactor;
    end else begin
      t = POrw.Price;
    end;
    GetFieldArgument(Docr,F_UNITPRICE,tstr);
    if (blank(tstr)) then begin
      PrintValue("F_UNITPRICE",t,M45Val,LangNrr,SysFormatRec,false);
    end else begin
      PrintValue("F_UNITPRICE",Round(t,StringToInt(tstr)),M45Val,LangNrr,SysFormatRec,false);
    end;
    SelectUnitText(POr.LangCode,INr.Unittext,tstr);    
    OUTFORMFIELD("F_ENHET",tstr);
    if (FIELDINFORM("F_ENHETLEV")) then begin        
      tstr = "";
      PIr.VEItemCode = POrw.VEArtCode;
      PIr.ItemCode = POrw.ArtCode;
      PIr.VECode = POr.VECode;
      if (ReadFirstMain(PIr,3,true)) then begin
        SelectUnitText(VEr.LangCode,PIr.VEUnit,tstr);
      end else begin
        if (GetFirstPurchaseItem2(POrw.ArtCode,VEr.Code,PIr)) then begin
          SelectUnitText(VEr.LangCode,PIr.VEUnit,tstr);
        end;
      end;
      OUTFORMFIELD("F_ENHETLEV",tstr);
    end;  
    PrintValue("F_VOLUME",INr.Volume,M4Qty,LangNrr,SysFormatRec,false);
    PrintValue("F_WIDTH",INr.Width,M4Qty,LangNrr,SysFormatRec,false);
    PrintValue("F_HEIGHT",INr.Height,M4Qty,LangNrr,SysFormatRec,false);
    PrintValue("F_DEPTH",INr.Depth,M4Qty,LangNrr,SysFormatRec,false);
    PrintValue("F_WEIGHT",INr.Weight,M4Qty,LangNrr,SysFormatRec,false);
    totweight = totweight + (INr.Weight*POrw.Quant);
    totvolume = totvolume + (INr.Volume*POrw.Quant);
    InvVat(1,POr.InclVAT,0,POr.ExportFlag,POrw.VATCode,POrw.Sum,vatprc,vatval,vatexclprc,vatinclprc,rowtax);
    t = MulRateToBase1(POr.CurncyCode,vatval,POr.FrRate,POr.ToRateB1,POr.ToRateB2,POr.BaseRate1,POr.BaseRate2,DefaultCurRoundOff);
    PrintValue("F_BASE1ROWVATVAL",Round(t,RoundRec.RndVat),M4Val,LangNrr,SysFormatRec,false);
    t = MulRateToBase2(POr.CurncyCode,vatval,POr.FrRate,POr.ToRateB1,POr.ToRateB2,POr.BaseRate1,POr.BaseRate2,DefaultCurRoundOff);
    PrintValue("F_BASE2ROWVATVAL",Round(t,RoundRec.RndVat),M4Val,LangNrr,SysFormatRec,false);
    PrintValue("F_ROWVATVAL",vatval,M4Val,LangNrr,SysFormatRec,false);
    if (FIELDINFORM("F_ARTGRUPP")) then begin
      GetItemGroup(POrw.ArtCode,tstr);
      OUTFORMFIELD("F_ARTGRUPP",tstr);
    end;
    OUTFORMFIELD("F_ROWOBJECT",POrw.Objects);
    if (FIELDINFORM("F_OBJEKTTEXT")) then begin
      GetObjectText(POrw.Objects,tstr);
      OUTFORMFIELD("F_OBJEKTTEXT",tstr);
    end;
    OUTFORMFIELD("F_PLANSHIPROW",POrw.PlanShipRow);
    if (nonblank(POrw.ArtCode)) then begin
      rownr = rownr + 1;
      OUTFORMFIELD("F_ROWNR",rownr);
    end;    
    EndFormRow;
  end;
// Edit Start ---------------------------------------------- Edit Start
	//Thursday, 19 January 2012 16:27:31
	  
      if (FIELDINFORM("F_SUMNOTPDVUAHANAL1")) then begin//-------------------------------------------
          t = blankval;
          If(nonblank(POr.Sum1)) then begin
          t = Round(POr.Sum1*1.01*conv("UAH_A",POr.CurncyCode,POr.TransDate)*10/12,2);
          t=sumnotpdv;
          PrintValue("F_SUMNOTPDVUAHANAL1",t,M45Val,LangNrr,SysFormatRec,false);
          end;
      end;
      
        pdv = round(sumnotpdv/5,2);
      if (FIELDINFORM("F_PDVUAHANAL1")) then begin//-------------------------------------------
          t = blankval;
          If(nonblank(POr.Sum4)) then begin
            t=round(sumnotpdv/5,2);
            PrintValue("F_PDVUAHANAL1",t,M45Val,LangNrr,SysFormatRec,false);
          end;
      end;
        
      sumall = sumnotpdv+pdv;
      if (FIELDINFORM("F_SUMMUAHANAL1")) then begin//-------------------------------------------
          t = blankval;
          If(nonblank(POr.Sum4)) then begin          
            t=sumnotpdv+pdv;
            PrintValue("F_SUMMUAHANAL1",t,M45Val,LangNrr,SysFormatRec,false);
          end;
      end;
  
	    if (FIELDINFORM("F_AMOUNTUAHA1")) then begin
         t = Round(POr.Sum4*1.01*conv("UAH_A",POr.CurncyCode,POr.TransDate),2); 
         t = sumall;
         ValToText(t,M4Val,"UAH_A","UKR",tstr);
     OUTFORMFIELD("F_AMOUNTUAHA1",tstr);  
  end; 
	
	// Edit End ---------------------------------------------- Edit End
	
  PrintValue("F_TOTWEIGHT",totweight,M4Qty,LangNrr,SysFormatRec,false);
  PrintValue("F_TOTVOLUME",totvolume,M4Qty,LangNrr,SysFormatRec,false);
  RETURN;
END;

global
procedure DoPOForm(record RcVc RepSpec,record POVc POr)
BEGIN
  record PODefBlock PODefRec;
  row PODefBlock PODefrw;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  Integer i,rwcnt;
    
  BlockLoad(PODefRec);
  rwcnt = MatRowCnt(PODefRec);
  langcode = POr.LangCode;
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(PODefRec,i,PODefrw);
    if (PODefrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(PODefRec,i,PODefrw);
      if (FindFormcode(POr.OKFlag,PODefrw.Typ)) then begin 
        if (Getformcode(i,PODefrw.intdocnr,PODefrw.FPCode,PODefrw.UserGroup,PODefrw.LangCode,PODefrw.SerNr,POr.SerNr,PODefrw.PrintGroupCode,
                        langcode,intdocnr,"POVc",formcode)) then
        begin
          goto LBREAKPO;
        end;
      end;
    end;
LBREAKPO:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        PrintPO(RepSpec,POr,formcode);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
  RETURN;
END;

global
procedure DoPOConfForm(record RcVc RepSpec,record POVc POr)
BEGIN
  record POConfDefBlock PODefRec;
  row POConfDefBlock PODefrw;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  Integer i,rwcnt;
    
  BlockLoad(PODefRec);
  rwcnt = MatRowCnt(PODefRec);
  langcode = POr.LangCode;
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(PODefRec,i,PODefrw);
    if (PODefrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(PODefRec,i,PODefrw);
      if (FindFormcode(POr.OKFlag,PODefrw.Typ)) then begin 
        if (Getformcode(i,PODefrw.intdocnr,PODefrw.FPCode,PODefrw.UserGroup,PODefrw.LangCode,PODefrw.SerNr,POr.SerNr,PODefrw.PrintGroupCode,
                        langcode,intdocnr,"POVc",formcode)) then
        begin
          goto LBREAKPOConf;
        end;
      end;
    end;
LBREAKPOConf:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        PrintPO(RepSpec,POr,formcode);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
  RETURN;
END;

global
procedure DoPORemForm(record RcVc RepSpec,record POVc POr)
BEGIN
  record PORemDefBlock PODefRec;
  row PORemDefBlock PODefrw;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  Integer i,rwcnt;
    
  BlockLoad(PODefRec);
  rwcnt = MatRowCnt(PODefRec);
  langcode = POr.LangCode;
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(PODefRec,i,PODefrw);
    if (PODefrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(PODefRec,i,PODefrw);
      if (FindFormcode(POr.OKFlag,PODefrw.Typ)) then begin 
        if (Getformcode(i,PODefrw.intdocnr,PODefrw.FPCode,PODefrw.UserGroup,PODefrw.LangCode,PODefrw.SerNr,POr.SerNr,PODefrw.PrintGroupCode,
                        langcode,intdocnr,"POVc",formcode)) then
        begin
          goto LBREAKPORem;
        end;
      end;
    end;
LBREAKPORem:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        PrintPO(RepSpec,POr,formcode);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
  RETURN;
END;
