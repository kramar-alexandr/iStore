external procedure GetVATText(string,var string);
external function Boolean GetVAT2(string,var val,var Integer,Integer);
external function Boolean GetVATincl(string,var val,var Integer);
external function Integer GetVATLaw();
external procedure GetVATproc(string,Integer,var val);
external function Integer ITType(string);
external procedure GetFieldArgument(record DocVc,Integer,var string);
external function val MulRateToBase1(var string,val,val,val,val,val,val,Integer);
external function val MulRateToBase2(var string,val,val,val,val,val,val,Integer);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure PrintValueInclZero(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure CashDiscVAT(val,val,record RoundBlock,var val);
external procedure MulVATIV(string,val,var val,var val,Integer,Integer);
external procedure AddVATBase(var record SMVc,string,val,val,Integer,Integer,Integer);
external procedure SetupVATBase(var record SMVc,var Integer);
external procedure PrintInvoice(record RcVc,record IVVc,string,string);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external function Boolean FindFormcode(Integer,Integer);

global
procedure CalcIVTotals(record IVVc IVr,record DocVc Docr,record RoundBlock RoundRec,record LangNrVc LangNrr,record SysFormatBlock SysFormatRec)
BEGIN
  row IVVc IVrw;
  Integer i,rwcnt,vatcnt;
  record SMVc VATr;
  row SMVc VATrw;
  record SMVc VATWDr;
  row SMVc VATWDrw;
  val vatv,t1,t,v;
  val vatval,vatbase,vattot,cdiscvat;
  val totreb,totdisc;
  val totcost,totsubtotwdisc,totvatval,totvatbase,totrowtot;
  string 255 tstr;
  string 255 str;
  Integer valtyp;
  val totgoods,tottrans,totpack,totdiscnopack;
  Integer rn;
  val vatexclprc,vatinclprc;
  val totgcr,totcc,totcash;
  record AccBlock ARAccRec;
  Boolean negamountf;
  
  BlockLoad(ARAccRec);
  negamountf = (ARAccRec.PrintNegAmountsCredNote!=0 and IVr.InvType==3);
  RecordNew(VATr);
  RecordNew(VATWDr);
  SetupVATBase(VATr,vatcnt);          
  SetupVATBase(VATWDr,vatcnt);          
  rwcnt = MatRowCnt(IVr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IVr,i,IVrw);
    if ((IVrw.stp==1) or (IVrw.stp==4)) then begin      
      switch (ITType(IVrw.ArtCode)) begin
        case 0: 
          totgoods = totgoods + IVrw.Sum;
          totdiscnopack = totdiscnopack + (IVrw.Quant*IVrw.Price - IVrw.Sum);
        case 1: 
          tottrans = tottrans + IVrw.Sum;
          totdiscnopack = totdiscnopack + (IVrw.Quant*IVrw.Price - IVrw.Sum);
        case 2: totpack = totpack + IVrw.Sum;
      end;
      totsubtotwdisc = totsubtotwdisc + IVrw.Quant*IVrw.Price;
      totcost = totcost + IVrw.Quant*IVrw.BasePrice;
      totreb = totreb + (IVrw.Quant*IVrw.Price - IVrw.Sum);
      AddVATBase(VATr,IVrw.VATCode,IVrw.Sum,blankval,vatcnt,IVr.InclVAT,IVr.NoTAXonVAT);      
      AddVATBase(VATWDr,IVrw.VATCode,IVrw.Sum,blankval,vatcnt,IVr.InclVAT,IVr.NoTAXonVAT);
      if (IVrw.vRebate!=0) then begin
        totdisc = totdisc + (IVrw.Quant*IVrw.Price - IVrw.Sum);        
      end;
    end;      
    if (IVrw.stp==11) then begin
      totsubtotwdisc = totsubtotwdisc - IVrw.Quant*IVrw.Price;
      totcost = totcost - IVrw.Quant*IVrw.BasePrice;
      AddVATBase(VATr,IVrw.VATCode,-IVrw.Sum,blankval,vatcnt,IVr.InclVAT,IVr.NoTAXonVAT);
      AddVATBase(VATWDr,IVrw.VATCode,-IVrw.Sum,blankval,vatcnt,IVr.InclVAT,IVr.NoTAXonVAT);
    end;
    if (IVrw.stp==5) then begin
      AddVATBase(VATr,IVrw.VATCode,IVrw.Sum,blankval,vatcnt,IVr.InclVAT,IVr.NoTAXonVAT);
    end;
    if (IVrw.stp==14) then begin
      totgcr = totgcr + IVrw.Sum;
    end;
    if (IVrw.stp==15) then begin
      totcash = totcash + MulRateToBase1(IVrw.CurncyCode,IVrw.Sum,IVrw.FrRate,IVrw.ToRateB1,IVrw.ToRateB2,IVrw.BaseRate1,IVrw.BaseRate2,DefaultCurRoundOff);
    end;
    if (IVrw.stp==16) then begin
      totcc = totcc + IVrw.Sum;
    end;
  end;    
  for (i=0;i<vatcnt;i=i+1) begin
    MatRowGet(VATr,i,VATrw);    
    MatRowGet(VATWDr,i,VATWDrw);    
    MulVATIV(VATrw.VATCode,VATrw.DebVal,vatv,t1,IVr.InclVAT,IVr.NoTAXonVAT);
    if (vatv!=0) or (nonblank(VATrw.DebVal)) then begin
    vatval = Round(vatv,DefaultCurRoundOff);
    totvatval = totvatval + vatval;
    totvatbase = totvatbase + VATrw.DebVal;
    totrowtot = totrowtot + VATrw.DebVal;    
    if (IVr.InclVAT>0) then begin
      totvatbase = totvatbase - vatval;
      vatbase = VATrw.DebVal - vatval;
      vattot = VATrw.DebVal;
    end else begin
      totrowtot = totrowtot + vatval;
      vatbase = VATrw.DebVal;
      vattot = VATrw.DebVal + vatval;
    end;
    CashDiscVAT(vatval,IVr.pdvrebt,RoundRec,cdiscvat);
    OUTFORMFIELD("F_MOMSKODTOTAL",VATrw.VATCode);    
    if (FIELDINFORM("F_VATBASE")) then begin
      valtyp = M4Val;
      GetFieldArgument(Docr,F_VATBASE,tstr);
      if (tstr=="-") then begin
        valtyp = M4NegVal;
      end;
      PrintValueInclZero("F_VATBASE",vatbase,valtyp,LangNrr,SysFormatRec,negamountf);
    end;    
    if (FIELDINFORM("F_VATBASEWITHOUTDOWNPAY")) then begin
      valtyp = M4Val;
      GetFieldArgument(Docr,F_VATBASEWITHOUTDOWNPAY,tstr);
      if (tstr=="-") then begin
        valtyp = M4NegVal;
      end;
      PrintValueInclZero("F_VATBASEWITHOUTDOWNPAY",VATWDrw.DebVal,valtyp,LangNrr,SysFormatRec,negamountf);
    end;    
    PrintValueInclZero("F_SUMMAMEDMOMS",VATrw.DebVal,valtyp,LangNrr,SysFormatRec,negamountf);
    if (FIELDINFORM("F_VATVAL")) then begin
      valtyp = M4Val;
      GetFieldArgument(Docr,F_VATVAL,tstr);
      if (tstr=="-") then begin
        valtyp = M4NegVal;
      end;
//      PrintValue("F_VATVAL",vatval,valtyp,LangNrr,SysFormatRec,negamountf);
      PrintValueInclZero("F_VATVAL",vatval,valtyp,LangNrr,SysFormatRec,negamountf);
    end;
    if (FIELDINFORM("F_VATVALWITHOUTDOWNPAY")) then begin
      MulVATIV(VATrw.VATCode,VATWDrw.DebVal,vatv,t1,IVr.InclVAT,IVr.NoTAXonVAT);
      valtyp = M4Val;
      GetFieldArgument(Docr,F_VATVALWITHOUTDOWNPAY,tstr);
      if (tstr=="-") then begin
        valtyp = M4NegVal;
      end;
      PrintValueInclZero("F_VATVALWITHOUTDOWNPAY",vatv,valtyp,LangNrr,SysFormatRec,negamountf);
    end;
    if (FIELDINFORM("F_VATTOT")) then begin
      valtyp = M4Val;
      GetFieldArgument(Docr,F_VATTOT,tstr);
      if (tstr=="-") then begin
        valtyp = M4NegVal;
      end;
      PrintValueInclZero("F_VATTOT",vattot,valtyp,LangNrr,SysFormatRec,negamountf);
    end;
    if (FIELDINFORM("F_SECCOMMISSION")) then begin
      valtyp = M4Val;
      GetFieldArgument(Docr,F_SECCOMMISSION,tstr);
      if (tstr=="-") then begin
        valtyp = M4NegVal;
      end;
      PrintValue("F_SECCOMMISSION",cdiscvat,valtyp,LangNrr,SysFormatRec,negamountf);
    end;
    if (nonblank(vatval)) then begin
    if (FIELDINFORM("F_BASE1VATVAL")) then begin
      t = MulRateToBase1(IVr.CurncyCode,vatval,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,RoundRec.RndVat);
      valtyp = M4Val;
      GetFieldArgument(Docr,F_BASE1VATVAL,tstr);
      if (tstr=="-") then begin
        valtyp = M4NegVal;
      end;
      PrintValueInclZero("F_BASE1VATVAL",Round(t,RoundRec.RndVat),valtyp,LangNrr,SysFormatRec,negamountf);
    end;
    if (FIELDINFORM("F_BASE2VATVAL")) then begin
      t = MulRateToBase2(IVr.CurncyCode,vatval,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,RoundRec.RndVat);
      valtyp = M4Val;
      GetFieldArgument(Docr,F_BASE2VATVAL,tstr);
      if (tstr=="-") then begin
        valtyp = M4NegVal;
      end;
      PrintValueInclZero("F_BASE2VATVAL",Round(t,RoundRec.RndVat),valtyp,LangNrr,SysFormatRec,negamountf);
    end;
    end;
    if (nonblank(vatbase)) then begin
    if (FIELDINFORM("F_BASE1VATBASE")) then begin
      t = MulRateToBase1(IVr.CurncyCode,vatbase,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,RoundRec.RndVat);
      valtyp = M4Val;
      GetFieldArgument(Docr,F_BASE1VATBASE,tstr);
      if (tstr=="-") then begin
        valtyp = M4NegVal;
      end;
      PrintValueInclZero("F_BASE1VATBASE",Round(t,RoundRec.RndVat),valtyp,LangNrr,SysFormatRec,negamountf);
    end;
    if (FIELDINFORM("F_BASE2VATBASE")) then begin
      t = MulRateToBase2(IVr.CurncyCode,vatbase,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,RoundRec.RndVat);
      valtyp = M4Val;
      GetFieldArgument(Docr,F_BASE2VATBASE,tstr);
      if (tstr=="-") then begin
        valtyp = M4NegVal;
      end;
      PrintValueInclZero("F_BASE2VATBASE",Round(t,RoundRec.RndVat),valtyp,LangNrr,SysFormatRec,negamountf);
    end;
    end;
    if (nonblank(vattot)) then begin
    if (FIELDINFORM("F_BASE1VATTOT")) then begin
      t = MulRateToBase1(IVr.CurncyCode,vattot,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,RoundRec.RndVat);
      valtyp = M4Val;
      GetFieldArgument(Docr,F_BASE1VATTOT,tstr);
      if (tstr=="-") then begin
        valtyp = M4NegVal;
      end;
      PrintValueInclZero("F_BASE1VATTOT",Round(t,RoundRec.RndVat),valtyp,LangNrr,SysFormatRec,negamountf);
    end;
    if (FIELDINFORM("F_BASE2VATTOT")) then begin
      t = MulRateToBase2(IVr.CurncyCode,vattot,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,RoundRec.RndVat);
      valtyp = M4Val;
      GetFieldArgument(Docr,F_BASE2VATTOT,tstr);
      if (tstr=="-") then begin
        valtyp = M4NegVal;
      end;
      PrintValueInclZero("F_BASE2VATTOT",Round(t,RoundRec.RndVat),valtyp,LangNrr,SysFormatRec,negamountf);
    end;    
    end;
    GetVATproc(VATrw.VATCode,0,t);
    PrintValue("F_VATEXCLPRC",t,M4Val,LangNrr,SysFormatRec,negamountf);    
    if (GetVATLaw==25) then begin//vatPolish
      tstr = "";
      if (GetVAT2(VATrw.VATCode,vatexclprc,rn,0)) then begin
      end;
      if (GetVATincl(VATrw.VATCode,vatinclprc,rn)) then begin
      end;
      if (nonblank(vatbase)) then begin
        if (nonblank(vatinclprc)) then begin
          if ((vatinclprc==0) and (nonblank(vatexclprc))) then begin
            tstr = USetStr(8111);
          end;
        end;
        if ((vatinclprc==0) and (nonblank(vatinclprc))) then begin
          if (blank(vatexclprc)) then begin
            tstr = USetStr(8110);
          end;
        end;
      end;
      if (blank(tstr)) then begin
        tstr = ValToString(vatexclprc,M4UVal,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
      end;
      if (blank(tstr)) then begin
        tstr = USetStr(1244);
      end;
      OUTFORMFIELD("F_VATPRC",tstr);    
    end else begin
      tstr = ValToString(t,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
      if (blank(tstr)) then begin
        tstr = USetStr(1244);
      end;
      OUTFORMFIELD("F_VATPRC",tstr);
    end;
    GetVATText(VATrw.VATCode,str);
    OUTFORMFIELD("F_VATCOMMENT",str);
    end;
  end;

  if (FIELDINFORM("F_TOTALGOODS")) then begin
    PrintValue("F_TOTALGOODS",totgoods,M4Val,LangNrr,SysFormatRec,negamountf);
  end;        
  if (FIELDINFORM("F_TOTTRANSPORT")) then begin
    PrintValue("F_TOTTRANSPORT",tottrans,M4Val,LangNrr,SysFormatRec,negamountf);
  end;        
  if (FIELDINFORM("F_TOTPACKAGES")) then begin
    PrintValue("F_TOTPACKAGES",totpack,M4Val,LangNrr,SysFormatRec,negamountf);
  end;        
  if (FIELDINFORM("F_SUBTOTALWITHOUTPACKAGES")) then begin
    PrintValue("F_SUBTOTALWITHOUTPACKAGES",totgoods + tottrans,M4Val,LangNrr,SysFormatRec,negamountf);
  end;        
  if (FIELDINFORM("F_TOTALDISCOUNTNOPACK")) then begin
    PrintValue("F_TOTALDISCOUNTNOPACK",totdiscnopack,M4Val,LangNrr,SysFormatRec,negamountf);
  end;        
  if ((FIELDINFORM("F_SUBTOTALWITHOUTDISCOUNT")) or (FIELDINFORM("F_TOTALCOST"))) then begin
    PrintValueInclZero("F_SUBTOTALWITHOUTDISCOUNT",totsubtotwdisc,M4Val,LangNrr,SysFormatRec,negamountf);
    PrintValueInclZero("F_TOTALCOST",totcost,M4Val,LangNrr,SysFormatRec,negamountf);
  end;        
  totvatval = Round(totvatval,RoundRec.RndVat);
  totvatbase = Round(totvatbase,RoundRec.RndTotal);
  totrowtot = Round(totrowtot,RoundRec.RndTotal);

  if (FIELDINFORM("F_TOTVATVAL")) then begin
    valtyp = M4Val;
    GetFieldArgument(Docr,F_TOTVATVAL,tstr);
    if (tstr=="-") then begin
      valtyp = M4NegVal;
    end;
    PrintValueInclZero("F_TOTVATVAL",totvatval,valtyp,LangNrr,SysFormatRec,negamountf);
  end;
  if (FIELDINFORM("F_TOTVATBASE")) then begin
    valtyp = M4Val;
    GetFieldArgument(Docr,F_TOTVATBASE,tstr);
    if (tstr=="-") then begin
      valtyp = M4NegVal;
    end;
    PrintValueInclZero("F_TOTVATBASE",totvatbase,valtyp,LangNrr,SysFormatRec,negamountf);
  end;
  if (FIELDINFORM("F_TOTROWTOT")) then begin
    valtyp = M4Val;
    GetFieldArgument(Docr,F_TOTROWTOT,tstr);
    if (tstr=="-") then begin
      valtyp = M4NegVal;
    end;
    PrintValueInclZero("F_TOTROWTOT",totrowtot,valtyp,LangNrr,SysFormatRec,negamountf);
  end;

  if (FIELDINFORM("F_REBTEXT")) then begin
    if (totreb!=0) then begin
      GetFieldArgument(Docr,F_REBTEXT,tstr);
      OutFormField("F_REBTEXT",tstr);
    end;
  end;
  PrintValue("F_TOTALDISCOUNT",totdisc,M4Val,LangNrr,SysFormatRec,negamountf);
  t = MulRateToBase2(IVr.CurncyCode,totdisc,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
  PrintValue("F_TOTALDISCOUNTINBASE2",t,M4Val,LangNrr,SysFormatRec,negamountf);
  PrintValue("F_GCRTOTAL",totgcr,M4Val,LangNrr,SysFormatRec,negamountf);
  PrintValue("F_CCTOTAL",totcc,M4Val,LangNrr,SysFormatRec,negamountf);
  PrintValue("F_CASHVALUE",totcash,M4Val,LangNrr,SysFormatRec,negamountf);
  if (FIELDINFORM("F_CASHBACK")) then begin
    GetFieldArgument(Docr,F_CASHBACK,tstr);
    if (tstr=="-") then begin
      PrintValue("F_CASHBACK",-IVr.RetnValue,M4Val,LangNrr,SysFormatRec,negamountf);
    end else begin
      PrintValue("F_CASHBACK",IVr.RetnValue,M4Val,LangNrr,SysFormatRec,negamountf);
    end;
  end;
  RETURN;        
END;

function Boolean PrintInvoiceWatermarks(record IVVc IVr,Boolean testprintoutf)
BEGIN
  record ModuleBlock MBr;
  Boolean res;

  res = true;
  BlockLoad(MBr);
  if (MBr.NoTestprintEnabler==0) then begin
    if ((IVr.OKFlag==0) and (testprintoutf)) then begin
      FormWaterMark(1117);
      res = false;
    end;
    if ((IVr.OKFlag!=0) and (IVr.Invalid==0)) then begin
      if (IVr.Prntdf!=0) then begin
        FormWaterMark(1118);
        res = false;
      end;
    end;
  end;
  if (IVr.Invalid!=0) then begin
    FormWaterMark(1282);
    res = false;
  end;
  PrintInvoiceWatermarks = res;
  RETURN;
END;
        
function Integer InvoiceRowFields(Integer fieldSetNr)
BEGIN
  Integer res,fldno;

  res = 0;
  switch (fieldSetNr) begin
    case F_ARTNR: res = 1;
  end;
  InvoiceRowFields = res;
  RETURN;
END;

function Integer OldFormMatField(string formtype,Integer fieldSetNr)
BEGIN
  Integer res;
  
  switch (formtype) begin
    case "InvForm": res = InvoiceRowFields(fieldSetNr);
  end;
  OldFormMatField = res;
  RETURN;
END;

procedure SetFormRowFields(string formcode,string formtype)
BEGIN
  record DocVc Docr;
  row DocVc Docrw;
  Integer i,rwcnt;

  Docr.Code = formcode;
  if (ReadFirstMain(Docr,1,true)) then begin
    rwcnt = MatRowCnt(Docr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(Docr,i,Docrw);
      if (Docrw.formatNr==0) then begin
        Docrw.formatNr = OldFormMatField(formtype,Docrw.fieldSetNr);
//        StopAlert("format= " & Docrw.formatNr & " set " & Docrw.fieldSetNr);
        MatRowPut(Docr,i,Docrw);
      end;
    end;
  end;
  RETURN;
END;

global
procedure DoInvForm(record RcVc RepSpec,record IVVc IVr)
BEGIN
  record InvDefBlock InvDefRec;
  row InvDefBlock InvDefrw;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode,langcod2;
  Integer i,rwcnt;
  record IVVc realIVr;
		
  realIVr.SerNr = IVr.SerNr;
  if (ReadFirstMain(realIVr,1,true)) then begin end;//for some reason we change OKFlag status in ivdclassprint
  langcode = IVr.LangCode;
  langcod2 = IVr.ShipMode;
  BlockLoad(InvDefRec);
  
  rwcnt = MatRowCnt(InvDefRec);
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(InvDefRec,i,InvDefrw);
    if (InvDefrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;  
  intdocnr = 1;
  printf = true;
  if (IVr.Prntdf!=0) then begin
    if (UserCanAction("DisallowPrintCopy",false)) then begin
      MessageBox(1274,StringFromStringSet(3,"DisallowPrintCopy"));
      printf = false;
    end;
  end;
  while ((intdocnr<=RepSpec.flags[0] or RepSpec.flags[0]==0) and printf) begin  // Edit ************************** Friday, 30 November 2012 10:59:51
LFINDFORMCOCEInv:;
    formcode = "";
    if(intdocnr==RepSpec.flags[0] or RepSpec.flags[0]==0) then begin// Edit ************************** Friday, 21 October 2011 13:19:52
			for (i=rwcnt-1;i>=0;i=i-1) begin
				MatRowGet(InvDefRec,i,InvDefrw);
				if (FindFormcode(realIVr.OKFlag,InvDefrw.Typ)) then begin
					if (Getformcode(i,InvDefrw.intdocnr,InvDefrw.FPCode,InvDefrw.UserGroup,InvDefrw.LangCode,InvDefrw.SerNr,IVr.SerNr,InvDefrw.PrintGroupCode,
													langcode,intdocnr,"IVVc",formcode)) then
					begin
						goto LInvBREAK;
					end;
				end;
			end;
			if (nonblank(langcod2)) then begin
				langcode = langcod2;
				langcod2 = "";
				goto LFINDFORMCOCEInv;
			end;  
	LInvBREAK:;
			if (nonblank(formcode)) then begin
				if (OpenForm(formcode)) then begin
					printf = PrintInvoiceWatermarks(IVr,true);
					PrintInvoice(RepSpec,IVr,formcode,langcode);
					CloseForm;
				end else begin
					printf = false;
					MessageBox(1546,formcode);
				end;
			end else begin
				printf = false;
				if (intdocnr==1) then begin
					MessageBox(1624, " " & USetStr(1623));
				end;
			end;
		end;// Edit ************************** Friday, 30 November 2012 11:00:11
		intdocnr = intdocnr + 1;
  end;
  RETURN;
END;


global
procedure DoInvForm1(record RcVc RepSpec)
BEGIN
  record IVVc IVr
  
  IVr.SerNr = RepSpec.long1;
  if(readfirstmain(IVr,1,true))then begin
    //messagebox(0, RepSpec.long1 & " " & RepSpec.flags[0]);
    DoInvForm(RepSpec,IVr);
  end;

return;
end;

global
procedure DoInv1Form(record RcVc RepSpec,record IVVc IVr)
BEGIN
  record Inv1DefBlock InvDefRec;
  row Inv1DefBlock InvDefrw;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode,langcod2;
  Integer i,rwcnt;
  record IVVc realIVr;
    
  realIVr.SerNr = IVr.SerNr;
  if (ReadFirstMain(realIVr,1,true)) then begin end;//for some reason we change OKFlag status in ivdclassprint
  langcode = IVr.LangCode;
  langcod2 = IVr.ShipMode;
  BlockLoad(InvDefRec);
  rwcnt = MatRowCnt(InvDefRec);
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(InvDefRec,i,InvDefrw);
    if (InvDefrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
LFINDFORMCOCEInv1:;
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(InvDefRec,i,InvDefrw);
      if (FindFormcode(realIVr.OKFlag,InvDefrw.Typ)) then begin
        if (Getformcode(i,InvDefrw.intdocnr,InvDefrw.FPCode,InvDefrw.UserGroup,InvDefrw.LangCode,InvDefrw.SerNr,IVr.SerNr,InvDefrw.PrintGroupCode,
                        langcode,intdocnr,"IVVc",formcode)) then
        begin
          goto LInv1BREAK;
        end;
      end;
    end;
    if (nonblank(langcod2)) then begin
      langcode = langcod2;
      langcod2 = "";
      goto LFINDFORMCOCEInv1;
    end;  
LInv1BREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        printf = PrintInvoiceWatermarks(IVr,false);
        PrintInvoice(RepSpec,IVr,formcode,langcode);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
  RETURN;
END;

global
procedure DoProjInvForm(record RcVc RepSpec,record IVVc IVr)
BEGIN
  record PRInvDefBlock InvDefRec;
  row PRInvDefBlock InvDefrw;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode,langcod2;
  Integer i,rwcnt;
  record IVVc realIVr;
    
  realIVr.SerNr = IVr.SerNr;
  if (ReadFirstMain(realIVr,1,true)) then begin end;//for some reason we change OKFlag status in ivdclassprint
  langcode = IVr.LangCode;
  langcod2 = IVr.ShipMode;
  BlockLoad(InvDefRec);
  rwcnt = MatRowCnt(InvDefRec);
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(InvDefRec,i,InvDefrw);
    if (InvDefrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
LFINDFORMCOCEProjInv:;
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(InvDefRec,i,InvDefrw);
      if (FindFormcode(realIVr.OKFlag,InvDefrw.Typ)) then begin
        if (Getformcode(i,InvDefrw.intdocnr,InvDefrw.FPCode,InvDefrw.UserGroup,InvDefrw.LangCode,InvDefrw.SerNr,IVr.SerNr,InvDefrw.PrintGroupCode,
                        langcode,intdocnr,"IVVc",formcode)) then
        begin
          goto LProjInvBREAK;
        end;
      end;
    end;
    if (nonblank(langcod2)) then begin
      langcode = langcod2;
      langcod2 = "";
      goto LFINDFORMCOCEProjInv;
    end;  
LProjInvBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        printf = PrintInvoiceWatermarks(IVr,true);
        PrintInvoice(RepSpec,IVr,formcode,langcode);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
  RETURN;
END;

global
procedure DoCashInvForm(record RcVc RepSpec,record IVVc IVr)
BEGIN
  record CashDefBlock InvDefRec;
  row CashDefBlock InvDefrw;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode,langcod2;
  Integer i,rwcnt;
  record IVVc realIVr;
    
  realIVr.SerNr = IVr.SerNr;
  if (ReadFirstMain(realIVr,1,true)) then begin end;//for some reason we change OKFlag status in ivdclassprint    
  langcode = IVr.LangCode;
  langcod2 = IVr.ShipMode;
  BlockLoad(InvDefRec);
  rwcnt = MatRowCnt(InvDefRec);
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(InvDefRec,i,InvDefrw);
    if (InvDefrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
LFINDFORMCOCECashInv:;
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(InvDefRec,i,InvDefrw);
      if (FindFormcode(realIVr.OKFlag,InvDefrw.Typ)) then begin
        if (Getformcode(i,InvDefrw.intdocnr,InvDefrw.FPCode,InvDefrw.UserGroup,InvDefrw.LangCode,InvDefrw.SerNr,IVr.SerNr,InvDefrw.PrintGroupCode,
                        langcode,intdocnr,"IVVc",formcode)) then
        begin
          goto LCashInvBREAK;
        end;
      end;
    end;
    if (nonblank(langcod2)) then begin
      langcode = langcod2;
      langcod2 = "";
      goto LFINDFORMCOCECashInv;
    end;  
LCashInvBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        printf = PrintInvoiceWatermarks(IVr,true);
        PrintInvoice(RepSpec,IVr,formcode,langcode);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
  RETURN;
END;

global
procedure DoCredInvForm(record RcVc RepSpec,record IVVc IVr)
BEGIN
  record CredDefBlock InvDefRec;
  row CredDefBlock InvDefrw;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode,langcod2;
  Integer i,rwcnt;
  record IVVc realIVr;
    
  realIVr.SerNr = IVr.SerNr;
  if (ReadFirstMain(realIVr,1,true)) then begin end;//for some reason we change OKFlag status in ivdclassprint        
  langcode = IVr.LangCode;
  langcod2 = IVr.ShipMode;
  BlockLoad(InvDefRec);
  rwcnt = MatRowCnt(InvDefRec);
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(InvDefRec,i,InvDefrw);
    if (InvDefrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
LFINDFORMCOCECredInv:;
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(InvDefRec,i,InvDefrw);
      if (FindFormcode(realIVr.OKFlag,InvDefrw.Typ)) then begin
        if (Getformcode(i,InvDefrw.intdocnr,InvDefrw.FPCode,InvDefrw.UserGroup,InvDefrw.LangCode,InvDefrw.SerNr,IVr.SerNr,InvDefrw.PrintGroupCode,
                        langcode,intdocnr,"IVVc",formcode)) then
        begin
          goto LCredInvBREAK;
        end;
      end;
    end;
    if (nonblank(langcod2)) then begin
      langcode = langcod2;
      langcod2 = "";
      goto LFINDFORMCOCECredInv;
    end;  
LCredInvBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        printf = PrintInvoiceWatermarks(IVr,true);
        PrintInvoice(RepSpec,IVr,formcode,langcode);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
  RETURN;
END;

global
procedure DoIIInvForm(record RcVc RepSpec,record IVVc IVr)
BEGIN
  record IIDefBlock InvDefRec;
  row IIDefBlock InvDefrw;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode,langcod2;
  Integer i,rwcnt;
  record IVVc realIVr;
    
  realIVr.SerNr = IVr.SerNr;
  if (ReadFirstMain(realIVr,1,true)) then begin end;//for some reason we change OKFlag status in ivdclassprint        
  langcode = IVr.LangCode;
  langcod2 = IVr.ShipMode;
  BlockLoad(InvDefRec);
  rwcnt = MatRowCnt(InvDefRec);
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(InvDefRec,i,InvDefrw);
    if (InvDefrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
LFINDFORMCOCEIIInv:;
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(InvDefRec,i,InvDefrw);
      if (FindFormcode(realIVr.OKFlag,InvDefrw.Typ)) then begin
        if (Getformcode(i,InvDefrw.intdocnr,InvDefrw.FPCode,InvDefrw.UserGroup,InvDefrw.LangCode,InvDefrw.SerNr,IVr.SerNr,InvDefrw.PrintGroupCode,
                        langcode,intdocnr,"IVVc",formcode)) then
        begin
          goto LIIInvBREAK;
        end;
      end;
    end;
    if (nonblank(langcod2)) then begin
      langcode = langcod2;
      langcod2 = "";
      goto LFINDFORMCOCEIIInv;
    end;  
LIIInvBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        printf = PrintInvoiceWatermarks(IVr,true);
        PrintInvoice(RepSpec,IVr,formcode,langcode);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
  RETURN;
END;
