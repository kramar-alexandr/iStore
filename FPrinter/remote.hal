global updating procedure SavingCash(var record CashVc Cashr)
begin

  Cashr.SerNr = NextSerNr("CashVc",Cashr.TransDate,-1,true,"");
  recordInsert(Cashr,true);
  
return;
end;


global function MyServLog(string log)
begin

logtext(0,log);

return;
end;


//----------------------------------------------------------------------------------------------------

global
procedure ReadCurRates(var integer i,var array string CurCod,var array Date Dat,var array val ToRat1,var array val ToRat2,var array val FrRate,date SyncDate)
begin
  boolean TrHs;
  Record ERVc ERr;
  
  i=0;
  TrHs=true;
  logtext(0,"Synchronize Currency BEGIN");
  ERr.Date = SyncDate;
  while (LoopKey("DCKey",ERr,1,TrHs)) begin
    if (TrHs) then begin
      CurCod[i]=ERr.CurncyCode;
      Dat[i]=ERr.Date;
      ToRat1[i]=ERr.ToRate1;
      ToRat2[i]=ERr.ToRate2;
      FrRate[i]=ERr.FrRate;
      i=i+1;
    end;
  end;
  resetloop(ERr);
logtext(0,"Synchronize Currency END");
  RETURN;
END;

//----------------------------------------------------------------------------------------------------

global
updating procedure DellSUPP()
begin
  boolean TrHs;
  Record IOSUPALLVc INSUPr;
  Record IOSUPALL1Vc INSUP1r;
  
  TrHs = true;
  while (LoopMain(INSUPr,0,TrHs)) begin
    if (TrHs) then begin
      RecordDelete(INSUPr);
      StepBack(INSUPr);
    end;
  end;
  
  while (LoopMain(INSUP1r,0,true)) begin
		RecordDelete(INSUP1r);
		StepBack(INSUP1r);
  end;
  
RETURN;
END;

//----------------------------------------------------------------------------------------------------


global
updating procedure DellINMn()
begin
  boolean TrHs;
  Record INVc INSUPr;
  
  TrHs = true;
  while (LoopMain(INSUPr,0,TrHs)) begin
    if (TrHs) then begin
      RecordDelete(INSUPr);
      StepBack(INSUPr);
    end;
  end;
  RETURN;
END;

//----------------------------------------------------------------------------------------------------

global
updating procedure CrSUPP()
begin
  boolean TrHs;
  Record IOSUPALLVc INSUPr;
  REcord INVc INr,OldINr;
  Integer i,j,nrw;
  record VATCodeBlock vatr;
  row VATCodeBlock vatrw
  
  i=1;
  
  INr.Code=0;
  TrHs = true;
  blockload(vatr);
  nrw=matrowcnt(vatr);
    
  while (LoopMain(INr,0,TrHs)) begin
    if (TrHs) then begin
      INSUPr.VATCOD=1;
      j=0;
      for (j=0;j<nrw;j=j+1) begin
        matrowget(vatr,j,vatrw)
        if (vatrw.VATCode==INr.VATCode) then begin
          if (vatrw.ExVatpr==0) then begin
            INSUPr.VATCOD=0; 
          end;
        end;
      end;
      INSUPr.Art=i;
      INSUPr.ItemNo=INr.Code;
      INSUPr.ItemName=INr.Name;
      RecordStore(INSUPr,false);
      i=i+1;
    end;
  end;
  RETURN;
END;

global procedure PasteSernr(string ArtCode,record SHVc SHr,record ORVc ORr,var string SerialNr)
begin
	record StockMovVc SMr;
	row StockMovVc SMrw;
	boolean testf,testf1;
	integer cnt,cnt1,i,k,SMcnt,SHcnt;
	record SHVc newSHr;
	row SHVc SHrw;
	record RLinkVc RLr;

	//SHcnt = MatRowCnt(SHr);
	SerialNr = "";
	cnt = 1;
	testf1 = true;
	
	while(ReadRecordLink(ORr,cnt,SMr,RLr)) begin
		cnt = cnt+1;
		if (testf1) then begin
      SMcnt = MatRowCnt(SMr);
      for(i=0;i<SMcnt;i=i+1)begin
        if(testf1) then begin
          MatRowGet(SMr,i,SMrw);
          if(ArtCode == SMrw.ArtCode) then begin
            
            SHcnt = MatRowCnt(SHr);
            testf = true;
            for(k=0;k<SHcnt;k=k+1) begin
              MatRowGet(SHr,k,SHrw);
              if(SHrw.SerialNr == SMrw.SerialNr) then begin
               testf = false;
              end;
            end;
            
            if(testf) then begin
              cnt1 = 1;
              while(ReadRecordLink(ORr,cnt1,newSHr,RLr)) begin
                cnt1 = cnt1+1;
                SHcnt = MatRowCnt(newSHr);
                for(k=0;k<SHcnt;k=k+1) begin
                  MatRowGet(newSHr,k,SHrw);
                  if(SHrw.SerialNr == SMrw.SerialNr) then begin
                   testf = false;
                  end;
                end;
              end;
            end;
            
            if(testf) then begin
              SerialNr = SMrw.SerialNr;
              //messageBox(0,SerialNr);
              testf1 = false;
            end;
          end;
        end;
      end;
		end;
	end;
//messageBox(0,SerialNr);
return;
end;