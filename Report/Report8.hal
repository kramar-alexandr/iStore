external procedure IPRn(record RcVc);
external procedure GetFullCurncyRate(var string,Date,var val,var val,var val,var val,var val);// Edit ************************** пятница, 25 июня 2010 г. 14:03:51
external function LongInt DateDiff(Date,Date);

SetLangMode(LangUkrainian,"UKR",0);


// Edit ********************************************************************* 27.06.2014
global updating procedure NewMyRetailSalesRn(record RcVc RepSpec)
begin
  Record IVCashVc IVCr;
  record PUVc PUr;
  row IVCashVc IVCrw;
  Record IVVc IVr;
  Record SMVc SMr;
  boolean TrHs,testf,testf1,foundf;
  val of,ivsum,smof,tot1,tot2,tot3,tot4;
  val ofu,ivsumu,smofu;
  Array val c,cu,sm,smu;
  date dat1,dat2;
  record CUVc CUr;
  string 100 data,custcode;
  string 5 s1,s2,s3,s4;
  integer mtrw,i,invtype,arrlen,j;
  val frrate,to1,to2,br1,br2;
  record POSCurncyBlock PCb;// Edit ************************** Wednesday, 13 April 2011 12:27:35
  record LocalMachineAccBlock LMAb;// Edit ************************** Wednesday, 19 October 2011 10:59:48
  row LocalMachineAccBlock LMArw;// Edit ************************** Wednesday, 19 October 2011 10:59:49
  record LocalMachineBlock LMb;// Edit ************************** Wednesday, 19 October 2011 10:59:49
  integer locmtrw,loci;// Edit ************************** Wednesday, 19 October 2011 10:59:50
  val rate;
  
  s1 = "01/";
  s2 = getmonth(addday(RepSpec.d2,-1));
  s3 = "/";
  s4 = getyear(addday(RepSpec.d2,-1));
  data = s1 & s2 & s3 & s4;
  dat1 = data;
  dat2 = RepSpec.d2;
  blockload(LMAb);
  arrlen = MatRowCnt(LMAb);

  StartReportJob("RetailSales");
  EndHeader;
  
  StartFormat(15);
  OutString(0,0,"Store",false);
  OutString(80,0,"Sum/Date(UAH)",false);
  OutString(180,0,"Sum/Date(USD)",false);
  OutString(270,0,"Sum/month(UAH)",false);
  OutString(1,0,"Sum/Month(USD)",true);
  EndFormat;

  for (j=0;j<arrlen;j=j+1) begin
    sm[j] = 0;
    smu[j] = 0;
  end;
  smof = 0;
  smofu = 0;
      
  TrHs = true;
  While(TrHs) begin
    if(dat1>=dat2)then begin TrHs =false; end;
    if(TrHs) then begin
    
      for (j=0;j<arrlen;j=j+1) begin
        c[j] = 0;
        cu[j] = 0;
      end;
      of = 0;
      ofu = 0;
      tot1 = 0;
      tot2 = 0;
      tot3 = 0;
      tot4 = 0;

      IVCr.InvDate=dat1;
      testf = true;
      while(loopkey("InvDate",IVCr,1,testf)) begin
      testf1=true;
        if(IVCr.InvDate!=dat1) then begin testf = false; testf1=false; end;
        if(IVCr.OKFlag==0) then begin testf1=false; end;
        if(IVCr.Invalid!=0) then begin testf1=false; end;
        
        if (testf1) then begin
          mtrw = matrowcnt(IVCr);
          for(i=0;i<mtrw;i=i+1)begin
            matrowget(IVCr,i,IVCrw);
            if(setinset("UAH_PURCHASE",IVCrw.Objects))then begin
              IVCr.CurncyCode = "UAH_P";
            end else begin
              if(setinset("UAH_APPLE",IVCrw.Objects))then begin
                IVCr.CurncyCode = "UAH_A";
              end else begin
                blockLoad(PCb);// Edit ************************** Wednesday, 13 April 2011 12:25:34
                IVCr.CurncyCode = PCb.CurncyCode;// Edit ************************** Wednesday, 13 April 2011 12:29:19
              end;
            end;
            GetFullCurncyRate(IVCr.CurncyCode,IVCr.InvDate,frrate,to1,to2,br1,br2);

            for (j=0;j<arrlen;j=j+1) begin
              matrowget(LMAb,j,LMArw);
              if (IVCr.LocalMachineCode==LMArw.LocalMachine) then begin
                c[j]=c[j]+IVCrw.Sum;
                cu[j]=cu[j]+round(IVCrw.Sum/frrate,defaultcurroundoff);
              end;
            end;
          end;
        end;
      end;
      resetLoop(IVCr);
      
      IVr.TransDate = dat1;
      testf=true;
      
      while(loopkey("TransDate",IVr,1,testf)) begin
        testf1=true;
        if(IVr.TransDate!=dat1) then begin testf = false; testf1=false; end;
        if(IVr.OKFlag==0) then begin testf1=false; end;
        if(IVr.Invalid!=0) then begin testf1=false; end;
        
        rate = IVr.FrRate/IVr.ToRateB1;
        if(rate==0)then begin rate = 1; end;
        switch(IVr.InvType) begin
          case 1: invtype = 1;
          case 3: invtype = -1;
          otherwise begin
            testf1 = false;
          end;
        end;
        if (testf1) then begin
          ivsum = IVr.Sum4*invtype;// Edit ************************** Wednesday, 26 October 2011 09:54:20
          if(IVr.CurncyCode=="USD")then begin
            ivsum = round(ivsum*rate,defaultcurroundoff);
          end;
          if(IVr.CurncyCode!="USD")then begin
            ivsumu = round(IVr.Sum4/rate*invtype,defaultcurroundoff);
          end else begin
            ivsumu = IVr.Sum4*invtype;
          end;
          custcode = "";
          locmtrw = matrowcnt(LMAb);
          for(loci=0;loci<locmtrw;loci=loci+1)begin
            matrowGet(LMAb,loci,LMArw);
            if(setinset(LMArw.Objects,IVr.Objects))then begin
              IVr.CustCode = LMArw.CustCode;
              custcode = LMArw.CustCode;
            end;
          end;

          foundf = false;
          for (j=0;j<arrlen;j=j+1) begin
            matrowget(LMAb,j,LMArw);
            if (custcode==LMArw.CustCode) then begin
              c[j] = c[j] + ivsum;
              cu[j] = cu[j] + ivsumu;
              foundf = true;
            end;
          end;
          if (foundf==false)then begin
            of = of + ivsum;
            ofu = ofu + ivsumu;
          end;
      
        end;
      end;

      for (j=0;j<arrlen;j=j+1) begin
        sm[j] = sm[j] +c[j];
        smu[j] = smu[j] +cu[j];
      end;
      smof = smof + of;
      smofu = smofu + ofu;
      
      resetloop(IVr);
      Gray_Divider(0,1);
      StartFormat(15);
      OutString(11,0,dat1,false);
      EndFormat;

      for (j=0;j<arrlen;j=j+1) begin
        matrowget(LMAb,j,LMArw);
        CUr.Code = LMArw.CustCode;
        if (ReadfirstMain(CUr,1,true)) then begin
          StartFormat(15);
          OutString(0,0,CUr.Code,false);
          OutString(80,0,c[j],false);
          OutString(180,0,cu[j],false);
          OutString(270,0,sm[j],false);
          OutString(1,0,smu[j],true);
          EndFormat;
        end;
      end;

      StartFormat(15);
      OutString(0,0,"Office",false);
      OutString(80,0,of,false);
      OutString(180,0,ofu,false);
      OutString(270,0,smof,false);
      OutString(1,0,smofu,true);
      endformat;
      Gray_Divider(0,1);
      StartFormat(15);
      OutString(0,0,"",false);
      EndFormat;

      for (j=0;j<arrlen;j=j+1) begin
        of = of + c[j];
        ofu = ofu + cu[j];
        smof = smof + sm[j];
        smofu = smofu + smu[j];
      end;
      StartFormat(15);
      OutString(0,0,"SubTotal",false);
      OutString(80,0,of,false);
      OutString(180,0,ofu,false);
      OutString(270,0,smof,false);
      OutString(1,0,smofu,true);
      EndFormat;
      tot3 = smof;
      tot4 = smofu;

      StartFormat(15);
      OutString(0,0,"",false);
      EndFormat;
    
    end;
    dat1 = addday(dat1,1);
  end; 
  Black_divider(0,1);
  StartFormat(15);
  OutString(0,0,"Total",false);
  OutString(80,0,"",false);
  OutString(180,0,"",false);
  OutString(270,0,tot3,false);
  OutString(1,0,tot4,true);
  EndFormat;
  EndJob;

  return;
end;

