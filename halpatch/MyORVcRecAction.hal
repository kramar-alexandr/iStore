external procedure CalcPrice(val,val,val,var val,Integer);
external function Boolean AllowedToTakeFromThisLoc(record LocationVc);
external function Boolean IsVATCodeDefined(string);
external function Boolean VATAccIsClosed(string,var string,Integer);
external updating procedure SMSWhenOR(record ORVc,Integer);
external function val GetORRowReserv(LongInt,string,string,var val,var string,var string,Boolean);
external updating procedure UpdateStockResFromOR(record ORVc);
external function string 255 FindINObjects(string,string);
external procedure ORDchsum(var record ORVc,Integer);
external function Integer CheckRates(string,val,val,val,val,val,var string);
external updating procedure UpdateVARItemsOR(record ORVc);
external function Boolean CheckPDExists(string);
external function Boolean IsRecipeClosed(string);
external procedure FindStockValue(string,string,var record ItemStatusVc);
external procedure RecalculateWeightORVc(var record ORVc,Boolean);
external function val MulRateToBase1(var string,val,val,val,val,val,val,Integer);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external procedure FindSalesExVat(string,val,Integer,Integer,var val);
external procedure CalcSum(val,val,val,val,var val,Integer);
external function Boolean GetItemPriceDiscount3(string,val,var record INVc,string,val,val,val,val,val,string,string,string,string,
                                                var val,var string,var val,var string,var val,var string,Integer,var Boolean,Date,
                                                string,Boolean,var Boolean,string,var string,var val,string);
external function Boolean GetFirstItem(var string,var record INVc);
external updating procedure CreateActFromOR(record ORVc);
external procedure ORSumup(var record ORVc);
external updating procedure MakeActFromSubSys_ORVc(var record ORVc,Boolean,Boolean);
external function Boolean IsSerialNrCorrect(string);
external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);
external procedure GetCurUser(var record UserVc);
external procedure ExtractObj(string,var Integer,var string);
external procedure SetORFlags(record ORVc);
external updating procedure UpdateORPlanned(record ORVc,string,Boolean);
external updating procedure UpdateInstock(string,string,string,string,date,val,val,val,val,val,val,val,val,val);
external function Boolean ExpandStructItem(string,string,val,var record SHVc);
external function Boolean CorrectM4ValProc(val);
external function Boolean AllowThisItem(string,string,string,Integer);
external function Integer CheckSerialStatus(string,string,var string);
external function Boolean CheckAllowedSize(record INVc,val,val,val);
external procedure ConvertSalesAcc(var string,Integer);
external function Integer CheckVATNrMask(string,string,Integer,var string);
external function Boolean GetPD(var record PDVc);
external function Integer CheckObjs(string,string,var string);
external function Boolean Date2Test(string,Date,string,Integer);
external function Boolean SerNrTestORVc(LongInt,Date,var Boolean);
external function LongInt GetCurUserLastNr(string);
external function Boolean GetCustAndBal(var record CUVc,var val,var val,Integer,Integer,Integer,Integer,Integer,Integer);

function boolean Checkprice(string artcode,string pricelist, val price)
begin
  record PLVc PLr;
  boolean res;
  res = true;
  
  PLr.PLCode = pricelist;
  PLr.ArtCode = artcode;
  if(readfirstmain(PLr,2,true))then begin
    if(PLr.PLCode==pricelist and PLr.ArtCode==artcode)then begin
      if(price!=PLr.ExVatPrice)then begin
        res = false;
      end;
    end;
  end;
  
  Checkprice = res;
return;
end;

function Boolean CheckOrderQtys(row ORVc ORrwp,Integer rownr,record ORVc oldORp)
BEGIN
  Boolean res;
  row ORVc oldORrw;
    
  res = true;
  if (MatRowCnt(oldORp)<=rownr) then begin
    MatRowGet(oldORp,rownr,oldORrw);
    if (oldORrw.Shipd1>0) then begin
      if (oldORrw.Quant<oldORrw.Shipd1) then begin
        res = false;
      end;
    end;      
  end;  
  CheckOrderQtys = res;
  RETURN;
END;

global
function Integer PayTermType(string paydeal)
BEGIN
  Integer res;
  record PDVc PDr;
  Integer i,mrwcnt;
  record PMBlock PMRec;
  row PMBlock pmrw;
  
  res = 1;
  PDr.Code = paydeal;
  if (blank(paydeal)) then begin
    if (GetPD(PDr)) then begin end;
    res = PDr.PDType;
    goto LPayTermType;
  end;
  if (GetPD(PDr)) then begin
    res = PDr.PDType;
    goto LPayTermType;
  end;

  BlockLoad(PMRec);
  mrwcnt = MatRowCnt(PMRec);
  for (i=0;i<mrwcnt;i=i+1) begin
    MatRowGet(PMRec,i,pmrw);
    if (pmrw.Code==paydeal) then begin 
      res = 2;
      goto LPayTermType;
    end;
  end;
LPayTermType:;
  PayTermType = res;
  RETURN;
END;

global
function val GetINCostPrice(string pricelist,string artcode,Boolean bbf)
begin
  val res;
  record INVc INr;
  record PLDefVc PLDr;
  record PLVc PLr;
  
  res = blankval;
  if (ReadFirstItem(artcode,INr,true,false)) then begin
    if (INr.ExplodeRec==0) then begin
      if (INr.InPrice!=0) then begin
        res = INr.InPrice;
        res = res + INr.ExtraCost;  
      end;
      if (bbf) then begin
        PLDr.Code = pricelist;
        if (ReadFIrstMain(PLDr,1,true)) then begin
          PLr.PLCode = pricelist;
          PLr.ArtCode = artcode;
          if (ReadFIrstMain(PLr,2,true)) then begin
            switch (PLDr.DepPrice) begin
              case 2:
                if (nonblank(PLr.CostPrice)) then begin
                  res = PLr.CostPrice;
                end;
            end;
          end;
        end;
      end;
    end;
  end;
  GetINCostPrice = res;
  RETURN;
END;

global
function LongInt ORVcRecordCheck(record ORVc ORr,record ORVc OR2r,LongInt stat,LongInt check)
BEGIN
  LongInt res;
  Integer insertmode,updatemode;
  record CreditLimitBlock CreditLimitRec;
  record MainStockBlock MainStockRec;
  record AccBlock ARAccRec;
  record SRBlock SRRec;
  record AccVc Accr;
  record ORVc lORr;
  record CUVc CUr;
  record INVc INr;
  record PRVc PRr;
  record ItemStatusVc ISr;
  record MainStockBlock MSb;  
  row ORVc ORrw;
  row ORVc OR2rw;
  Integer i,j,rwcnt,errcode;
  LongInt oldnr;
  LongInt newnr;
  val bal;
  val limit,rsrvd;
  string 255 tstr,errstr;
  Boolean gentrans,transf;
  record OrdSettBlock OSb;
  string 20 location;
  val orsrv,orsrved;
  record OrderClassVc OrderClassr;
  record DMVc DMr;
  record ShipDealVc ShipDealr;
  record LocationVc Locationr;
  record ModuleBlock OptRec;
  record PlanDeliveryBlock PDb;
  val ordqty;
  string 60 comment;
  val frrate;// Edit ************************** Thursday, 17 February 2011 11:46:06
  val percent,minpercent;
  record PLVc PLr;
  boolean testf;

  res = 0;
  insertmode = 1;//Rs_insert
  updatemode = 2;//Rs_update
  if (stat==updatemode) then begin
    if (ORr.SerNr<=0) then begin
      ORr.SerNr = OR2r.SerNr;
    end;
  end;  
  BlockLoad(ARAccRec);
  BlockLoad(SRRec);
  BlockLoad(MainStockRec);
  BlockLoad(OSb);
  BlockLoad(OptRec);
  BlockLoad(PDb);
  oldnr = ORr.SerNr;
  BlockLoad(CreditLimitRec);
    
// Edit Start ---------------------------------------------- Edit Start
	//Wednesday, 16 February 2011 15:57:47
	 rwcnt = MatRowCnt(ORr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(ORr,i,ORrw);
    ORrw.BasePrice = GetINCostPrice(ORr.PriceList,ORrw.ArtCode,true);
    MatRowPut(ORr,i,ORrw);
    ORDchsum(ORr,i);
  end;
  ORSumup(ORr);
  
	// Edit End ---------------------------------------------- Edit End
  
  if ((CreditLimitRec.ORSave==1) or (CreditLimitRec.ORSaveWarn==1)) then begin
    CUr.Code = ORr.CustCode;
    if (GetCustAndBal(CUr,limit,bal,CreditLimitRec.Base,CreditLimitRec.OwnCheques,CreditLimitRec.ThirdCheques,CreditLimitRec.IOUCheques,CreditLimitRec.ThirdIOUCheques,CreditLimitRec.ORSaveWarn)) then begin
      if (limit>0) then begin
        if (stat==updatemode) then begin
          switch (CreditLimitRec.Base) begin
            case 0: bal = bal - OR2r.Sum4;
            case 1: ;//nothing
            case 2: bal = bal - OR2r.Sum4;
          end;
        end;
        switch (CreditLimitRec.Base) begin
          case 0: bal = bal + ORr.Sum4;
          case 1: ;//nothing
          case 2: bal = bal + ORr.Sum4;
        end;
        if (bal>limit) then begin
          if (CreditLimitRec.ORSave==1) then begin
            RecordCheckError(1164,"",-1,"CustCode");      
            res = -1;
            goto LORVcRecordCheck;
          end;
          if (CreditLimitRec.ORSaveWarn==1) then begin
            MessageBox(1164,"");
          end;
        end;
      end;
    end;
  end;
// Edit Start ---------------------------------------------- Edit Start
	//Friday, 13 August 2010 14:59:20
	  
  rwcnt = matrowcnt(ORr);
  for(i=0;i<rwcnt;i=i+1) begin
    matrowget(ORr,i,ORrw);
    
    if(currentcompany==1)then begin
      if(not(Checkprice(ORrw.ArtCode,ORr.PriceList,ORrw.Price)) and ORrw.Sum>0)then begin
        RecordCheckError(20767,"",i,"Price");      
        res = -1; 
        goto LORVcRecordCheck;
      end;
    end;
    
    if(nonblank(ORr.FrRate))then begin
      frrate = ORr.FrRate;
    end else begin
      frrate = 1;
    end;
    testf = true;
    if(nonblank(ORr.PriceList))then begin
      PLr.PLCode = ORr.PriceList;
      PLr.ArtCode = ORrw.ArtCode;
      if(ReadFirstMain(PLr,2,true))then begin
        if(PLr.PLCode==ORr.PriceList and PLr.ArtCode==ORrw.ArtCode and PLr.ExVatPrice<=ORrw.Sum/ORrw.Quant)then begin
          testf = false;
        end;
      end;
    end;
    if(testf)then begin
      INr.Code = ORrw.ArtCode;// Edit ************************** Wednesday, 7 September 2011 11:33:18
      readfirstmain(INr,1,true);
      percent = (round(ORrw.Sum/frrate/ORrw.Quant,defaultcurroundoff)/round(INr.WeighedAvPrice,defaultcurroundoff)-1)*100;// Edit ************************** Wednesday, 7 September 2011 11:33:17
      if(ORrw.BasePrice==0) THEN BEGIN percent=10000; END;
      // Edit ************************** Wednesday, 7 September 2011 11:33:19
      minpercent = INr.Markup;
      if(ORr.CustCode=="EUROTEX")then begin  minpercent = 5;  end;
      
      if(currentdate>=stringtodate("6/8/2012") and currentdate<=stringtodate("5/11/2012"))then begin
        if(ORr.Location=="K_TC_OLIMP" or ORr.Location=="KH_KRV" or ORr.Location=="K_KARAVAN")then begin
          minpercent = -99.999;
        end;
      end;

      If(percent<minpercent) then begin // Edit ************************** Tuesday, 6 September 2011 15:24:10    //If(round(ORrw.rowGP,defaultcurroundoff)<0) then begin
        If(UserCanAction("ViewCostPrice",true))then begin
          MessageBox(20767," row " & i+1);    
        end else begin
          RecordCheckError(20767,"",i,"Sum");
          res = -1;
          goto LORVcRecordCheck;
        end;
      end;
    end; 
  end;
  
	// Edit End ---------------------------------------------- Edit End
	
  if (RecordValid(OR2r)) then begin
    if (ORr.OKFlag==1) and (OR2r.OKFlag<>1) then begin
      if (UserCanAction("OROK",true)==false) then begin
        RecordCheckError(1274,StringFromStringSet(3,"OROK"),-1,"SerNr");      
        res = -1;
        goto LORVcRecordCheck;
      end;  
    end;
    if (OR2r.OKFlag!=0) and (ORr.OKFlag!=1)  then begin
      if (UserCanAction("UnOKOR",true)==false) and (UserCanAction("UnOKAll",true)==false) then begin
        RecordCheckError(1274,StringFromStringSet(3,"UnOKOR"),-1,"SerNr");      
        res = -1;
        goto LORVcRecordCheck;
      end;
    end;  
  end;
  if (CheckPDExists(ORr.PayDeal)==false) then begin
    RecordCheckError(1256,"",-1,"PayDeal");      
    res = -1;
    goto LORVcRecordCheck;        
  end; 
  if (nonblank(ORr.PRCode)) then begin
    PRr.Code = ORr.PRCode;
    if (ReadFirstMain(PRr,1,true)) then begin
      if (ORr.CustCode!=PRr.CustCode) then begin
        RecordCheckError(1218,"",-1,"PRCode");      
        res = -1;
        goto LORVcRecordCheck;
      end;
    end else begin
      RecordCheckError(1232,"",-1,"PRCode");      
      res = -1;
      goto LORVcRecordCheck;
    end;    
    if (PRr.Terminated!=0) then begin
      RecordCheckError(1232,"",-1,"PRCode");      
      res = -1;
      goto LORVcRecordCheck;
    end;        
  end;   
  if (ORr.SerNr<=0) then begin
    newnr = GetCurUserLastNr("ORVc");
    if (newnr==-1) then begin
      newnr = SRRec.LastOrdNr;
    end;
    ORr.SerNr = NextSerNr("ORVc",ORr.OrdDate,newnr,false,"");
  end;
  if ((stat==insertmode) or (ORr.SerNr!=OR2r.SerNr)) then begin
    lORr.SerNr = ORr.SerNr;
    if (ReadFirstMain(lORr,1,true)) then begin
      RecordCheckError(1547,"",-1,"SerNr");      
      res = -1;
      goto LORVcRecordCheck;
    end;
    if (SerNrTestORVc(ORr.SerNr,ORr.OrdDate,gentrans)==false) then begin
      RecordCheckError(1557,"",-1,"SerNr");      
      res = -1;
      goto LORVcRecordCheck;
    end;
  end;
  if (Date2Test("ORVc",ORr.OrdDate,"OrdDate",-1)==false) then begin
    res = -1;
    goto LORVcRecordCheck;
  end;
  CUr.Code = ORr.CustCode;
  if (ReadFirstMain(CUr,1,true)==false) then begin
    RecordCheckError(1120,ORr.CustCode,-1,"CustCode");      
    res = -1;
    goto LORVcRecordCheck;
  end;
  if (CUr.CUType==0) then begin
    RecordCheckError(1120,ORr.CustCode,-1,"CustCode");      
    res = -1; 
    goto LORVcRecordCheck;
  end;
  if (CUr.blockedFlag!=0) then begin
    RecordCheckError(1265,ORr.CustCode,-1,"CustCode");      
    res = -1;
    goto LORVcRecordCheck;
  end;
  if (OSb.ReqORClass==1) then begin
    if (blank(ORr.OrderClass)) then begin
      RecordCheckError(20101,"",-1,"OrderClass");
      res = -1;
      goto LORVcRecordCheck;  
    end;
  end;  
  if (nonblank(ORr.OrderClass)) then begin
    OrderClassr.Code = ORr.OrderClass;
    if (ReadFirstMain(OrderClassr,1,true)==false) then begin
      RecordCheckError(1290,"",-1,"OrderClass");      
      res = -1;
      goto LORVcRecordCheck;
    end;
  end;
  if (nonblank(ORr.ShipMode)) then begin
    DMr.Code = ORr.ShipMode;
    if (ReadFirstMain(DMr,1,true)==false) then begin
      RecordCheckError(1290,"",-1,"ShipMode");      
      res = -1;
      goto LORVcRecordCheck;
    end;
  end;
// Edit Start ---------------------------------------------- Edit Start
	//Friday, 6 April 2012 09:53:03
	if(ORr.Closed==0)then begin
    if (blank(ORr.ShipMode) and (currentcompany!=3 and currentcompany!=8 and currentcompany!=1)) then begin
        RecordCheckError(1058,"",-1,"ShipMode");      
        res = -1;
        goto LORVcRecordCheck;
    end;
  end;
  
	// Edit End ---------------------------------------------- Edit End
	
  if (nonblank(ORr.ShipDeal)) then begin
    ShipDealr.Code = ORr.ShipDeal;
    if (ReadFirstMain(ShipDealr,1,true)==false) then begin
      RecordCheckError(1290,"",-1,"ShipDeal");      
      res = -1;
      goto LORVcRecordCheck;
    end;
  end;
  // Edit Start ---------------------------------------------- Edit Start
	//Wednesday, 12 May 2010 10:25:24 AM
	
  if (blank(ORr.Location)) then begin
    RecordCheckError(1290,"",-1,"Location");      
    res = -1;
    goto LORVcRecordCheck;
  end;
	// Edit End ---------------------------------------------- Edit End
	
  if (nonblank(ORr.Location)) then begin
    Locationr.Code = ORr.Location;
    if (ReadFirstMain(Locationr,1,true)==false) then begin
      RecordCheckError(1290,"",-1,"Location");      
      res = -1;
      goto LORVcRecordCheck;
    end;
    if (AllowedToTakeFromThisLoc(Locationr)==false) then begin
      RecordCheckError(1768,"",-1,"Location");      
      res = -1;
      goto LORVcRecordCheck;
    end;
  end;
  errcode = CheckObjs("",ORr.Objects,errstr);
  if (errcode!=0) then begin
    RecordCheckError(errcode,errstr,-1,"Objects");      
    res = -1;
    goto LORVcRecordCheck;
  end;
  // Edit Start ---------------------------------------------- Edit Start
	//Monday, 11 June 2012 16:41:48
	
  if(blank(ORr.Objects) and CurrentCompany==2) then begin
    RecordCheckError(1058,"",-1,"Objects");      
    res = -1;
    goto LORVcRecordCheck;
  end;
  
	// Edit End ---------------------------------------------- Edit End
	
  if (PayTermType(ORr.PayDeal)==3) then begin
    RecordCheckError(1227,ORr.PayDeal,-1,"PayDeal");      
    res = -1;
    goto LORVcRecordCheck;
  end;
  errcode = CheckVATNrMask(ORr.VATNr,CUr.CountryCode,CUr.CustType,tstr);
  if (errcode!=0) then begin
    RecordCheckError(errcode,tstr,-1,"VATNr");      
    res = -1;
    goto LORVcRecordCheck;
  end;
  if (nonblank(CUr.CurncyCode)) then begin
    if (CUr.CurncyCode!=ORr.CurncyCode) then begin
      RecordCheckError(1217,"",-1,"CurncyCode");      
      res = -1;
      goto LORVcRecordCheck;
    end;
  end;      
  errcode = CheckRates(ORr.CurncyCode,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,tstr);
  if (errcode!=0) then begin
    RecordCheckError(errcode,"",-1,tstr);      
    res = -1; 
    goto LORVcRecordCheck;
  end;    
  transf = false;
  if (ORr.OKFlag==1) then begin
    if (stat==insertmode) then begin transf = true; end;
    if (stat==updatemode) then begin
      if (OR2r.OKFlag==0) then begin transf = true; end;
    end;
  end;
  if (ORr.ExportFlag==0) then begin
    if (UserCanAction("DisallowDomSales",false)) then begin
      RecordCheckError(20056,"",-1,"CustCode");   
      res = -1; 
      goto LORVcRecordCheck;
    end; 
  end;
  if (ORr.ExportFlag!=0) then begin
    if (UserCanAction("DisallowExpSales",false)) then begin
      RecordCheckError(20049,"",-1,"CustCode");   
      res = -1; 
      goto LORVcRecordCheck;
    end; 
  end;
  if (transf) then begin
    if (UserCanAction("OROK",true)==false) then begin
      RecordCheckError(1274,StringFromStringSet(3,"OROK"),-1,"SerNr");      
      res = -1;
      goto LORVcRecordCheck;
    end;
  end;  
  rwcnt = MatRowCnt(ORr);
  if (transf) then begin
    if (rwcnt==0) then begin
      RecordCheckError(1030,"",0,"ArtCode");      
      res = -1;
      goto LORVcRecordCheck;
    end;
  end;
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(ORr,i,ORrw);
    switch (ORrw.stp) begin
      case 1:
        if (ARAccRec.VATCodeCtrl==1) then begin
          Accr.AccNumber = ORrw.SalesAcc;
          if (ReadFirstMain(Accr,1,true)) then begin
            if ((nonblank(Accr.VATCode)) and (Accr.VATCode!=ORrw.VATCode)) then begin
              RecordCheckError(1245,"",i,"VATCode");      
              res = -1;
              goto LORVcRecordCheck;
            end;
          end else begin
            tstr = ORrw.SalesAcc;
            ConvertSalesAcc(tstr,ORr.ExportFlag);
            Accr.AccNumber = tstr;
            if (ReadFirstMain(Accr,1,true)) then begin
              if ((nonblank(Accr.VATCode)) and (Accr.VATCode!=ORrw.VATCode)) then begin
                RecordCheckError(1245,"",i,"VATCode");      
                res = -1;
                goto LORVcRecordCheck;
              end;
            end;
          end;
        end;
        if (VATAccIsClosed(ORrw.VATCode,tstr,1)) then begin
          RecordCheckError(1258,tstr,i,"VATCode");      
          res = -1; 
          goto LORVcRecordCheck;
        end;          
        if ((nonblank(ORrw.VATCode)) and (IsVATCodeDefined(ORrw.VATCode)==false)) then begin
          RecordCheckError(1120,ORrw.VATCode,i,"VATCode");      
          res = -1; 
          goto LORVcRecordCheck;
        end;
        if (nonblank(ORrw.Location)) then begin
          Locationr.Code = ORrw.Location;
          if (ReadFirstMain(Locationr,1,true)==false) then begin
            RecordCheckError(1290,"",i,"Location");      
            res = -1;
            goto LORVcRecordCheck;
          end;
          if (AllowedToTakeFromThisLoc(Locationr)==false) then begin
            RecordCheckError(1768,"",i,"Location");      
            res = -1;
            goto LORVcRecordCheck;
          end;
        end;
        if (nonblank(ORrw.ArtCode)) then begin
          if (ReadFirstItem(ORrw.ArtCode,INr,true,false)==false) then begin
            RecordCheckError(1120,ORrw.ArtCode,i,"ArtCode");      
            res = -1;
            goto LORVcRecordCheck;
          end;
          if (INr.Terminated!=0) then begin
            RecordCheckError(1266,ORrw.ArtCode,i,"ArtCode");      
            res = -1;
            goto LORVcRecordCheck;
          end;
          if (check!=0) then begin
            if (IsRecipeClosed(INr.Recepy)) then begin
              RecordCheckError(2088,"",i,"ArtCode");      
              res = -1; 
              goto LORVcRecordCheck;
            end;
          end;          
          if (CheckAllowedSize(INr,ORrw.UnitXval,ORrw.UnitYval,ORrw.UnitZval)==false) then begin
            RecordCheckError(1480,ORrw.ArtCode,i,"UnitXval");      
            res = -1;
            goto LORVcRecordCheck;
          end;
          if (IsSerialNrCorrect(ORrw.SerialNr)==false) then begin
            RecordCheckError(1209,ORrw.SerialNr,i,"SerialNr");      
            res = -1; 
            goto LORVcRecordCheck;
          end;
          if (CheckSerialStatus(ORrw.ArtCode,ORrw.SerialNr,tstr)==2) then begin
            RecordCheckError(2210," " & tstr,i,"SerialNr");      
            res = -1;
//            MessageBox(0,tstr);
            goto LORVcRecordCheck;
          end;
          if (AllowThisItem("ORVc",ORr.PRCode,ORrw.ArtCode,INr.ItemType)==false) then begin
            RecordCheckError(1285,ORrw.ArtCode,i,"ArtCode");      
            res = -1;
            goto LORVcRecordCheck;
          end;
          
    // Edit Start ---------------------------------------------- Edit Start
	//Tuesday, 1 February 2011 15:02:43
	      	if(ORr.Reserved!=0 and OR2r.Reserved!=0)then begin
            if(ORr.Location!=OR2r.Location)then begin
              RecordCheckError(22067,"",-1,"Location");      
              res = -1;
              goto LORVcRecordCheck;
            end;
          end;
	// Edit End ---------------------------------------------- Edit End
	
	// Edit Start ---------------------------------------------- Edit Start
	//Monday, 10 October 2011 17:01:00
	if(currentcompany==7 or currentcompany==5)then begin	//edit by victor
    if ((ORr.Reserved!=0) and (blank(ORr.PlanShip))) then begin
      RecordCheckError(31025,"",-1,"PlanShip");      
      res = -1;
      goto LORVcRecordCheck;
    end;
	end;
	// Edit End ---------------------------------------------- Edit End
	
          
          // Edit Start ---------------------------------------------- Edit Start
	//Wednesday, 28 April 2010 4:41:11 PM
					if (((ORr.Reserved!=0) or (ORr.OKFlag!=0 and ORr.Reserved==0)) and ORr.OrderClass!="SHOPS") then begin
            if (OSb.dontAllowOverreserving!=0) then begin
            //MessageBox(0,2);
              switch (INr.ItemType) begin
                case 1:
                  location = ORrw.Location;
                  if (blank(location)) then begin
                    location = ORr.Location;
                  end;  
                  if (blank(location)) then begin
                    location = MainStockRec.MainStock;
                  end;  
                  orsrv = ORrw.Quant - ORrw.Shipd2;
                  FindStockValue(ORrw.ArtCode,location,ISr);
                  for (j=0;j<i;j=j+1) begin
                    MatRowGet(ORr,j,OR2rw);
                    if (OR2rw.ArtCode==ORrw.ArtCode) then begin
                      orsrv = orsrv + OR2rw.Quant - OR2rw.Shipd2;
                    end;
                  end;
                  orsrved = 0;
                  if (stat==updatemode) then begin
                    if (RecordValid(OR2r)) then begin
                      if (OR2r.Reserved!=0) then begin
                        for (j=0;j<MatRowCnt(OR2r);j=j+1) begin
                          MatRowGet(OR2r,j,OR2rw);
                          if (OR2rw.ArtCode==ORrw.ArtCode) then begin
                            orsrved = orsrved + OR2rw.Quant - OR2rw.Shipd2;
                          end;
                        end;
                      end;
                    end;
                  end;
                  if(ISr.RsrvQty<0) then begin// Edit ************************** Friday, 3 September 2010 11:14:10
                    ISr.RsrvQty = 0;// Edit ************************** Friday, 3 September 2010 11:14:11
                  end;// Edit ************************** Friday, 3 September 2010 11:14:11
                  if (((orsrv)>(ISr.Instock-ISr.RsrvQty+orsrved))/* and (Currentuser!="SA")*/) then begin // StockRsrvQty ?
                    RecordCheckError(20011,"",i,"Quant");      
                    res = -1;
                    goto LORVcRecordCheck;
                  end;
	// Edit End ---------------------------------------------- Edit End
	
                case 2:
//                  checkit
              end;
            end;
          end;
        end else begin
          if (nonblank(ORrw.SerialNr)) then begin
            RecordCheckError(1209,ORrw.SerialNr,i,"SerialNr");      
            res = -1; 
            goto LORVcRecordCheck;
          end;
          if (ORrw.Quant!=0) then begin
            RecordCheckError(1130,ORrw.ArtCode,i,"ArtCode");      
            res = -1; 
            goto LORVcRecordCheck;
          end;
        end;
        if (ORrw.Sum!=0) then begin
          if (blank(ORrw.ArtCode)) then begin
            RecordCheckError(1130,ORrw.ArtCode,i,"ArtCode");      
            res = -1;
            goto LORVcRecordCheck;
          end;
//          if (nonblank(ORrw.Objects)) then begin//this check must run even if this field is blank
            tstr = ORr.Objects;
            if (nonblank(tstr)) then begin
              tstr = tstr & ",";
            end;
            tstr = tstr & ORrw.Objects;
            errcode = CheckObjs(ORrw.SalesAcc,tstr,errstr);
            if (errcode!=0) then begin
              RecordCheckError(errcode,errstr,i,"Objects");      
              res = -1;
              goto LORVcRecordCheck;
            end;
//          end;
          if (blank(ORrw.VATCode)) then begin
            RecordCheckError(1134,"",i,"VATCode");      
            res = -1;
            goto LORVcRecordCheck;
          end;
        end;
        if (ORrw.Shipd1>0) then begin
          if ((MainStockRec.DelOrdQty!=0) and (OR2r.Closed==0) and (ORr.Closed==1)) then begin
            if (CheckOrderQtys(ORrw,i,OR2r)==false) then begin
              RecordCheckError(1302,"",i,"Quant");      
              res = -1;
              goto LORVcRecordCheck;
            end;
          end else begin        
            if (ORrw.Quant<ORrw.Shipd1) then begin
              RecordCheckError(1302,"",i,"Quant");      
              res = -1;
              goto LORVcRecordCheck;
            end;
          end;
        end;
        if ((OptRec.NegQtyOnIV==0) or (INr.ItemType==1) or (INr.ItemType==2)) then begin
        if (ORrw.Quant<0) then begin
          RecordCheckError(1574,"",i,"Quant");      
          res = -1;
          goto LORVcRecordCheck;          
        end;
        end;
        if (CorrectM4ValProc(ORrw.vRebate)==false) then begin
          RecordCheckError(1019,"",i,"vRebate");      
          res = -1;
          goto LORVcRecordCheck;
        end;
        if (blank(ORr.PlanShip)) then begin
          if (blank(ORrw.PlanShipRow)) then begin
            BlockLoad(MSb);
            if (PDb.ForcePlanDelDate!=0) then begin
              RecordCheckError(1058,"",i,"PlanShipRow"); 
              res = -1; 
              goto LORVcRecordCheck;
            end;
          end;
        end;
        if (i<MatRowCnt(OR2r)) then begin
          MatRowGet(OR2r,i,OR2rw);
          rsrvd = GetORRowReserv(ORr.SerNr,OR2rw.ArtCode,OR2rw.SerialNr,ordqty,comment,tstr,true);
          if (OR2rw.ArtCode!=ORrw.ArtCode) then begin
            if (rsrvd>0) then begin
              RecordCheckError(20564,"",i,"ArtCode"); 
              res = -1; 
              goto LORVcRecordCheck;
            end;
          end;
          if (rsrvd>ORrw.Quant-ORrw.Shipd1) then begin
            RecordCheckError(22067,"",i,"ArtCode"); 
            res = -1; 
            goto LORVcRecordCheck;
          end;
        end;
    end;
  end;
LORVcRecordCheck:;
  if (res!=0) then begin ORr.SerNr = oldnr; end;
  ORVcRecordCheck = res;
  RETURN;
END;

function LongInt ORRemoveTest(record ORVc ORp,LongInt errmf)
BEGIN
  record DBLockBlock DBLockRec;
  record SHVc SHr;
  record RetVc Retr;
  row ORVc ORrw;
  LongInt res;
  Boolean shipf;
  Boolean notfullyshpf;
  Integer i,rwcnt;
  record ARPayHistVc ARPayHr;
  record OPPVc OPPr;
  
  res = 1;
  SHr.OrderNr = ORp.SerNr;
  rwcnt = MatRowCnt(ORp);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(ORp,i,ORrw);
    if (ORrw.Shipd1>0) then begin
      shipf = true;
      if ((ORrw.Shipd2!=ORrw.Quant) or
          (ORrw.Invd!=ORrw.Quant)) then begin
        notfullyshpf = true;
      end;
    end;
    if (ORrw.Invd>0) then begin
      shipf = true;
      if ((ORrw.Shipd2!=ORrw.Quant) or
          (ORrw.Invd!=ORrw.Quant)) then begin
        notfullyshpf = true;
      end;
    end;
  end;
  Retr.OrdNr = ORp.SerNr;
  if (ReadFirstKey("OrdNr",Retr,1,true)) then begin
    if (errmf!=0) then begin MessageBox(1560,""); end;
    res = 0;
    goto LORRemoveTest;
  end;
  ARPayHr.OrderNr = ORp.SerNr;
  if (ReadFirstKey("OrderNr",ARPayHr,1,true)) then begin
    if (errmf!=0) then begin MessageBox(1876," " & ORp.SerNr); end;
    res = 0;
    goto LORRemoveTest;
  end;
  if (shipf==false) then begin
    goto LORRemoveTest;
  end;
  BlockLoad(DBLockRec);
  if (ORp.OrdDate>DBLockRec.DeleteBeforeDate) then begin
    if (errmf!=0) then begin MessageBox(1304,""); end;
    res = 0;
    goto LORRemoveTest;
  end;
  if (notfullyshpf) then begin
    if (errmf!=0) then begin MessageBox(1560,""); end;
    res = 0;
    goto LORRemoveTest;
  end;
  if (ORp.Closed!=0) then begin
    res = 1;
  end;
LORRemoveTest:;
  ORRemoveTest = res;
  RETURN;
END;

global
function LongInt ORVcRecordRemoveTest(var record ORVc ORr,record ORVc OR2r,LongInt long3,LongInt long4)
BEGIN
  LongInt res;
  record ORVc locORr;

  locORr.SerNr = ORr.SerNr;
  if (ReadFirstMain(locORr,1,true)) then begin
    res = ORRemoveTest(locORr,long3);
  end else begin
    res = ORRemoveTest(ORr,long3);
  end;
  ORVcRecordRemoveTest = res; 
  RETURN;
END;

global
updating procedure UpdateOrdOut(record ORVc ORp,Boolean addf)
BEGIN
  record MainStockBlock MainStockRec;
  record SHVc SHr;
  row SHVc SHrw;
  row ORVc ORrw;
  Integer i,rwcnt;
  val t,theqty;
  val t2,t3;
  Integer j,shrwcnt;
  Boolean isstruct;
  string 255 location,theloc;
  
  BlockLoad(MainStockRec);
  location = ORp.Location;
  if (blank(location)) then begin
    location = MainStockRec.MainStock;
  end;
  rwcnt = MatRowCnt(ORp);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(ORp,i,ORrw);
    if (ORrw.stp==1) then begin
      if (nonblank(ORrw.Location)) then begin
        theloc = ORrw.Location;
      end else begin
        theloc = location;
      end;
      theqty = ORrw.Quant;
      isstruct = ExpandStructItem(ORrw.ArtCode,ORrw.Recepy,theqty,SHr);
      if (isstruct==false) then begin
        t2 = theqty;
        t3 = blankval;
        if (ORp.Reserved!=0) then begin
          t3 = ORrw.Quant - ORrw.Shipd2;
        end;
        if (addf==false) then begin
          t2 = -t2;
          t3 = -t3;
        end else begin
          if (ORp.Closed!=0) then begin  // if ord is closed then nothing left to deliver
//            if (MainStockRec.UpdateAvailable==1) then begin
//              t2 = theqty;
//            end else begin
              if (ORrw.Shipd2<ORrw.Quant) then begin
                t2 = ORrw.Shipd2;
              end;
//            end;            
            if (ORp.Reserved!=0) then begin
              t3 = t2;
            end else begin
              t3 = blankval;
            end;
          end;
        end;
        if ((t2!=0) or (t3!=0)) then begin
          UpdateInstock("ORVc",ORp.SerNr,ORrw.ArtCode,theloc,ORp.OrdDate,t,t2,t3,t,t,t,t,t,t);
        end;
      end else begin
        // We save the original item as well as the components! 
        if (nonblank(ORrw.Location)) then begin
          theloc = ORrw.Location;
        end else begin
          theloc = location;
        end;
        t2 = theqty;
        if (ORp.Reserved!=0) then begin
          t3 = theqty;
        end else begin
          t3 = blankval;
        end;
        if (addf==false) then begin
          t2 = -t2;
          t3 = -t3;
        end else begin
          if (ORp.Closed!=0) then begin  //
            t2 = ORrw.Shipd2;
            if (ORp.Reserved!=0) then begin
              t3 = theqty;
              t3 = blankval;
            end else begin
              t3 = blankval;
            end;
          end;
        end;
        if ((t2!=0) or (t3!=0)) then begin
          UpdateInstock("ORVc",ORp.SerNr,ORrw.ArtCode,theloc,ORp.OrdDate,t,t2,t3,t,t,t,t,t,t);
        end;
        shrwcnt = MatRowCnt(SHr);
        for (j=0;j<shrwcnt;j=j+1) begin
          MatRowGet(SHr,j,SHrw);
          t2 = SHrw.Ship;
          if (ORp.Reserved!=0) then begin
            t3 = SHrw.Ship;
          end else begin
            t3 = blankval;
          end;
          if (addf==false) then begin
            t2 = -t2;
            t3 = -t3;
          end else begin
            if (ORp.Closed!=0) then begin  // if ord is closed then nothing left to deliver
              t2 = (SHrw.Ship/theqty)*ORrw.Shipd2;
              if (ORp.Reserved!=0) then begin
                t3 = ORrw.Shipd2;
              //former code was wrong
                t3 = SHrw.Ship;
                t3 = blankval;
              end else begin
                t3 = blankval;
              end;
            end;
          end;
          if ((t2!=0) or (t3!=0)) then begin
            UpdateInstock("ORVc",ORp.SerNr,SHrw.ArtCode,theloc,ORp.OrdDate,t,t2,t3,t,t,t,t,t,t);
          end;
        end;
      end;
    end;
  end;
  UpdateORPlanned(ORp,location,addf);
  RETURN;
END;

updating procedure PRSOINStatUp(LongInt posernr,Date td,string project,string artcode,val quantp,val sump,Boolean addf)
BEGIN
  record PRSOINVc PRSOr;
  record PRSOINVc oldPRSOr;
  Boolean found;
  Boolean delf;
  val qty,sum;
  
  if (blank(artcode)) then begin goto LPRSOINStatUp; end;
  if (blank(project)) then begin goto LPRSOINStatUp; end;
  if ((quantp!=0) or (sump!=0)) then begin
    delf = false;
    PRSOr.SOSerNr = posernr;
    PRSOr.Project = project;
    PRSOr.Item = artcode;
    found = ReadFirstMain(PRSOr,3,true);
    RecordCopy(oldPRSOr,PRSOr);
    if (found) then begin
    end else begin
      PRSOr.SOSerNr = posernr;
      PRSOr.Project = project;
      PRSOr.Item = artcode;
      PRSOr.TransDate = td;
      PRSOr.SOQty = 0;
      PRSOr.SOVal = 0;
    end;
    qty = quantp;
    sum = sump;
    if (addf==false) then begin
      qty = -quantp;
      sum = -sump;
    end;
    PRSOr.SOQty = PRSOr.SOQty + qty;
    PRSOr.SOVal = PRSOr.SOVal + sum;
    if (PRSOr.SOVal<=0) then begin delf = true; end;
    if (PRSOr.SOQty<=0) then begin delf = true; end;
    if (delf==false) then begin
      if (found) then begin
        if (RecordUpdate(oldPRSOr,PRSOr,false)==0) then begin end;
      end else begin
        if (RecordStore(PRSOr,false)) then begin end;
      end;
    end else begin
      if (found==true) then begin
        RecordDelete(oldPRSOr);
      end;
    end;
  end;
LPRSOINStatUp:;
  RETURN;
END;

global
updating procedure UpdatePRSO(record ORVc ORp,Boolean addf)
BEGIN
  row ORVc ORrw;
  Integer i,rwcnt;
  val valinbase1;

  rwcnt = MatRowCnt(ORp);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(ORp,i,ORrw);
    if (ORrw.stp==1) then begin
      if (nonblank(ORp.PRCode) or nonblank(ORp.PRCode)) then begin
        valinbase1 = MulRateToBase1(ORp.CurncyCode,ORrw.Sum,ORp.FrRate,ORp.ToRateB1,ORp.ToRateB2,ORp.BaseRate1,ORp.BaseRate2,DefaultCurRoundOff);
        PRSOINStatUp(ORp.SerNr,ORp.OrdDate,ORp.PRCode,ORrw.ArtCode,ORrw.Quant,valinbase1,addf);
      end;
    end;
  end;
  RETURN;
END;

global
updating procedure UpdateEDIOR(record ORVc ORp)
BEGIN
  record EDIORVc oldEDIORr;
  record EDIORVc EDIORr;
  
  EDIORr.ORSerNr = ORp.SerNr;
  EDIORr.VersionNr = 1;
  if (ReadFirstKey("ORSerNr",EDIORr,1,true)) then begin
    RecordCopy(oldEDIORr,EDIORr);
    EDIORr.ORSerNr = -1;
    if (RecordUpdate(oldEDIORr,EDIORr,true)) then begin end;
  end;
  RETURN;
END;

global
updating function LongInt ORVcRecordRemove(var record ORVc ORr,record ORVc OR2r,LongInt long3,LongInt long4)
BEGIN
  LongInt res;
  Integer tmp;

  if (ORr.Closed==0) then begin
    UpdateOrdOut(ORr,false);
    UpdatePRSO(ORr,false);
    UpdateEDIOR(ORr);
  end;
  tmp = ORr.Closed;
  ORr.Closed = 1;
  UpdateStockResFromOR(ORr);
  ORr.Closed = tmp;
  ORVcRecordRemove = res; 
  RETURN;
END;

global
procedure AutDelNonStockItem(record ORVc ORp)
BEGIN
  row ORVc ORrw;
  Integer i,rwcnt;
  record MainStockBlock MainStockRec;
  record INVc INr;
  Boolean updf;

  BlockLoad(MainStockRec);
  if (MainStockRec.DelivPlainItems==0) then begin goto LAutDelNonStockItem; end;
  rwcnt = MatRowCnt(ORp);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(ORp,i,ORrw);
    INr.Code = ORrw.ArtCode;
    if (ReadFirstMain(INr,1,true)) then begin
      if ((INr.ItemType==0) or (INr.ItemType==3)) then begin
        if (ORrw.Quant>ORrw.Shipd1) then begin
          ORrw.Shipd1 = ORrw.Quant;
          updf = true;
        end;
        if (ORrw.Quant>ORrw.Shipd2) then begin
          ORrw.Shipd2 = ORrw.Quant;
          updf = true;
        end;
        if (updf) then begin
          MatRowPut(ORp,i,ORrw);
        end;
      end;
    end;
  end;
  if (updf) then begin SetORFlags(ORp); end;
LAutDelNonStockItem:;
  RETURN;
END;

function Boolean ObjStatSameOR(record ORVc OR1p,record ORVc OR2p)
BEGIN
  Boolean res;
  
  if (OR1p.Objects==OR2p.Objects) then begin
    if (OR1p.OrdDate==OR2p.OrdDate) then begin
      res = true;
    end;
  end;
  ObjStatSameOR = res;
  RETURN;
END;

updating procedure ORObjectStats(record ORVc OR1p,record ORVc OR2p)
BEGIN
  record ObjStatVc OSr;
  Integer pos;
  string 255 ostr;
  
  if (RecordValid(OR2p)) then begin  /* delete the OR2 objects */
    if (ObjStatSameOR(OR1p,OR2p)==false) then begin
      pos = 0;
      ExtractObj(OR2p.Objects,pos,ostr);
      while (nonblank(ostr)) begin
        OSr.SerNr = OR2p.SerNr;
        OSr.Date = OR2p.OrdDate;
        OSr.FileName = "ORVc";
        OSr.Object = ostr;
        if (ReadFirstMain(OSr,4,true)) then begin
          RecordDelete(OSr);
        end;
        ExtractObj(OR2p.Objects,pos,ostr);
      end;
    end;
  end;
  pos = 0;
  ExtractObj(OR1p.Objects,pos,ostr);
  while (nonblank(ostr)) begin
    OSr.SerNr = OR1p.SerNr;
    OSr.Date = OR1p.OrdDate;
    OSr.FileName = "ORVc";
    OSr.Object = ostr;
    if (RecordInsert(OSr,false)) then begin end;
    ExtractObj(OR1p.Objects,pos,ostr);
  end;
  RETURN;
END;

global
updating function LongInt ORVcRecordUpdate(var record ORVc ORr,record ORVc OR2r,LongInt long3,LongInt long4)
BEGIN
  LongInt res;
  
  ORr.Prntdf = 0;
  AutDelNonStockItem(ORr);
  UpdateOrdOut(OR2r,false);
  UpdateOrdOut(ORr,true);
  UpdatePRSO(OR2r,false);
  UpdatePRSO(ORr,true);
  SetORFlags(ORr);
  RecalculateWeightORVc(ORr,false);  
  ORVcRecordUpdate = res; 
  RETURN;
END;

global
updating function LongInt ORVcRecordUpdateAfter(var record ORVc ORr,record ORVc OR2r,LongInt long3,LongInt long4)
BEGIN
  LongInt res;

//  ORObjectStats(ORr,OR2r); it is stored only and not used ever
  UpdateVARItemsOR(ORr);
  UpdateStockResFromOR(ORr);
  ORVcRecordUpdateAfter = res; 
  RETURN;
END;

global
procedure ORRowInsertValues(record ORVc ORp,row ORVc orrp,Integer UseDiscount)
BEGIN
  record INVc INr;
  Boolean calcpricef;
  val t,s,price,tax2prc,p;
  string 255 curitemname,salesacc,tax2code;
  Boolean dummyf;
  
  if (GetFirstItem(orrp.ArtCode,INr)) then begin
    orrp.ArtCode = INr.Code;
    if (GetItemPriceDiscount3(orrp.ArtCode,orrp.Quant,INr,ORp.CurncyCode,
                ORp.FrRate,ORp.ToRateB1,ORp.ToRateB2,ORp.BaseRate1,ORp.BaseRate2,
                ORp.LangCode,ORp.CustCat,ORp.PriceList,ORp.RebCode,
                price,curitemname,s,
                orrp.VATCode,t,salesacc,ORp.ExportFlag,calcpricef,ORp.OrdDate,ORp.CustCode,true,dummyf,ORp.PayDeal,tax2code,tax2prc,ORp.Region)) then begin
                
      if (blank(orrp.Price)) then begin
        orrp.Price = price;
      end;
      if (blank(orrp.vRebate)) then begin
        orrp.vRebate = s;
      end;
      if (blank(orrp.BasePrice)) then begin
        orrp.BasePrice = t;
      end;
      if (blank(orrp.Spec)) then begin
        orrp.Spec = curitemname;
      end;
      if (blank(orrp.SalesAcc)) then begin
        orrp.SalesAcc = salesacc;
      end;
      if (nonblank(ORp.CustVATCode)) then begin
        orrp.VATCode = ORp.CustVATCode;
      end;
      if ((INr.ItemType==2) and (nonblank(INr.Recepy))) then begin
        orrp.Recepy = INr.Recepy;
      end else begin
        orrp.Recepy = "";
      end;
      orrp.Objects = FindINObjects(INr.Objects,INr.Group);
      p = orrp.Price; 
      CalcPrice(orrp.BasePrice,orrp.PriceFactor,orrp.vRebate,p,UseDiscount);
      orrp.Price = p;  
      CalcSum(orrp.Quant,orrp.Price,orrp.PriceFactor,orrp.vRebate,s,UseDiscount);
      orrp.Sum = s;
      orrp.PriceFactor = INr.PriceFactor;
      t = orrp.Quant*orrp.BasePrice;   
      if (orrp.PriceFactor!=0) then begin
        t = t/orrp.PriceFactor;
      end;
      s = MulRateToBase1(ORp.CurncyCode,orrp.Sum,ORp.FrRate,ORp.ToRateB1,ORp.ToRateB2,ORp.BaseRate1,ORp.BaseRate2,DefaultCurRoundOff);
      FindSalesExVat(orrp.VATCode,s,ORp.InclVAT,ORp.NoTAXonVAT,s);
      orrp.rowGP = s - round(t,2);// Edit ************************** Wednesday, 15 September 2010 14:21:25          
    end;
  end;
  RETURN;
END;

procedure ReadORFunctions(var record ORVc ORp)
BEGIN
  Integer i,rwcnt;
  row ORVc ORrw;
  
  rwcnt = MatRowCnt(ORp);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(ORp,i,ORrw);
    switch (ORrw.stp) begin
      case 1:
        if (ORrw.Recepy=="_") then begin
          ORrw.Recepy = "";
        end;
        if ((nonblank(ORrw.ArtCode)) and (blank(ORrw.Spec))) then begin
          ORRowInsertValues(ORp,ORrw,0);//GenOptr.UseDiscount KH??
          MatRowPut(ORp,i,ORrw);
        end;
    end;
  end;
  RETURN;
END;

global
updating function LongInt ORVcRecordSave(var record ORVc ORr,record ORVc OR2r,LongInt long3,LongInt long4)
BEGIN
  LongInt res;

  AutDelNonStockItem(ORr);
  UpdateOrdOut(ORr,true);
  UpdatePRSO(ORr,true);
  SetORFlags(ORr);
  RecalculateWeightORVc(ORr,false);
//  MakeActFromSubSys_ORVc(ORr,false,false);  done below in CreateActFromOR
  ORVcRecordSave = res; 
  RETURN;
END;

global
updating function LongInt ORVcRecordSaveAfter(var record ORVc ORr,record ORVc OR2r,LongInt long3,LongInt long4)
BEGIN
  LongInt res;

//  ORObjectStats(ORr,OR2r);it is stored only and not used ever
  CreateActFromOR(ORr);
  UpdateVARItemsOR(ORr);
  SMSWhenOR(ORr,1);  
  ORVcRecordSaveAfter = res; 
  RETURN;
END;

global
function LongInt ORVcRecordDefaults(var record ORVc ORr,record ORVc OR2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  record OrdSettBlock OSr;
  record AccBlock ARAccRec;
  record UserVc USr;
  val fr,to1,to2,br1,br2;
  string 10 curcode;
  record MainStockBlock MainStockRec;
  record LocalMachineAccBlock LMAb;// Edit ************************** Wednesday, 19 October 2011 10:59:48
  row LocalMachineAccBlock LMArw;// Edit ************************** Wednesday, 19 October 2011 10:59:49
  record LocalMachineBlock LMb;// Edit ************************** Wednesday, 19 October 2011 10:59:49
  integer mtrw,i;// Edit ************************** Wednesday, 19 October 2011 10:59:50
  
  BlockLoad(OSr);
  BlockLoad(ARAccRec);
  BlockLoad(MainStockRec);
  ORr.SerNr = -1;
  ORr.OrdDate = CurrentDate;
  ORr.CustCat = "";
  ORr.Prntdf = 0;
  ORr.ExportFlag = 0;
  ORr.InvFlag = 0;
  ORr.Closed = 0;
  ORr.ShipFlag = 0;
  ORr.QuoteNr = -1;
  ORr.DiscSum = blankval;
  ORr.DiscPerc = blankval;
  ORr.TotGP = blankval;
  ORr.Probability = blankval;
  ORr.TotQty = blankval;
  ORr.TotWeight = blankval;
  ORr.TotVolume = blankval;
  ORr.Commision = blankval;
  ORr.DownPaySent = blankval;
  ORr.DownPayRedcd = blankval;
  ORr.TAX1Sum = blankval;
  ORr.InclVAT = ARAccRec.BasePriceInclVAT;
  ORr.NoTAXonVAT = ARAccRec.NoTAXonVAT;
  ORr.TotalwoTAX = ARAccRec.TotalwoTAX;
  GetCurUser(USr);
  ORr.Objects = USr.PersObjx;
  
  // Edit Start ---------------------------------------------- Edit Start
	//Thursday, 30 December 2010 10:44:34
	blockload(LMb);// Edit ************************** Wednesday, 19 October 2011 10:59:52
  blockload(LMAb);// Edit ************************** Wednesday, 19 October 2011 10:59:52
	mtrw = matrowcnt(LMAb);
	for(i=0;i<mtrw;i=i+1)begin
	  matrowget(LMAb,i,LMArw);
	  if(LMArw.DefLoc==ORr.Location)then begin
	    if(nonblank(ORr.Objects))then begin
	      ORr.Objects = ORr.Objects & "," & LMArw.Objects;
	    end else begin
        ORr.Objects = LMArw.Objects;
	    end;
	  end;
	end;
  // Edit ************************** Wednesday, 19 October 2011 12:22:29
  ORr.OurContact = USr.CurOurContact;
  ORr.Location = USr.Location;
  ORr.SalesMan = USr.Code;
  ORr.SalesGroup = USr.SalesGroup;  
  if (SingleUserMode) then begin
    ORr.SerNr = NextSerNr("ORVc",ORr.OrdDate,-1,false,"");
  end;
  ORr.PayDeal = "";
  ORr.CurncyCode = "";
  curcode = ORr.CurncyCode;
  GetFullCurncyRate(curcode,ORr.OrdDate,fr,to1,to2,br1,br2);
  ORr.CurncyCode = curcode;
  ORr.FrRate = fr;
  ORr.ToRateB1 = to1; 
  ORr.ToRateB2 = to2;
  ORr.BaseRate1 = br1;
  ORr.BaseRate2 = br2;  
  if (OSr.OrdToDespDate!=0) then begin
    ORr.DespatchDate = ORr.OrdDate;
  end;
  ORr.InvBeforeShip = MainStockRec.AllowInvBeforeShip;
  ORVcRecordDefaults = res;  
  RETURN;
END;



global
function LongInt ORVcRecordDuplicate(var record ORVc ORr,record ORVc OR2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  record OrdSettBlock OSr;
  row ORVc ORrw;
  Integer i,rwcnt;
  val fr,to1,to2,br1,br2,t;
  string 10 curcode;
  record UserVc USr;
  record MainStockBlock MainStockRec;

  BlockLoad(MainStockRec);
  BlockLoad(OSr);
  ORr.SerNr = -1;
  ORr.Prntdf = 0;
  ORr.Closed = 0;
  ORr.OKFlag = 0;
  ORr.QuoteNr = -1;
  ORr.DiscSum = blankval;
  ORr.DiscPerc = blankval;
  ORr.Probability = blankval;
  rwcnt = MatRowCnt(ORr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(ORr,i,ORrw);
    ORrw.Shipd1 = blankval;
    ORrw.Shipd2 = blankval;
    ORrw.Invd = blankval;
    ORrw.SerialNr = "";
    ORrw.BasePrice = GetINCostPrice(ORr.PriceList,ORrw.ArtCode,true);
    MatRowPut(ORr,i,ORrw);
    ORDchsum(ORr,i);
  end;
  ORSumup(ORr);
  GetCurUser(USr);
  ORr.OurContact = USr.CurOurContact;
  ORr.PlanShip = "";
  ORr.CustOrdNr = "";
  ORr.OrdDate = CurrentDate;
  ORr.DownPaySent = blankval;
  ORr.DownPayRedcd = blankval;
  ORr.PrepaidAmount = blankval;
  curcode = ORr.CurncyCode;
  GetFullCurncyRate(curcode,ORr.OrdDate,fr,to1,to2,br1,br2);
  ORr.CurncyCode = curcode;
  ORr.FrRate = fr;
  ORr.ToRateB1 = to1; 
  ORr.ToRateB2 = to2;
  ORr.BaseRate1 = br1;
  ORr.BaseRate2 = br2;    
  if (OSr.OrdToDespDate!=0) then begin
    if (blankdate(ORr.DespatchDate)) then begin
      ORr.DespatchDate = ORr.OrdDate;
    end;
  end;
  SetORFlags(ORr);
  if (SingleUserMode) then begin
    ORr.SerNr = NextSerNr("ORVc",ORr.OrdDate,-1,false,"");
  end;
//  ORr.InvBeforeShip = MainStockRec.AllowInvBeforeShip;//they want this to be copied
  ORVcRecordDuplicate = res;  
  RETURN;
END;



