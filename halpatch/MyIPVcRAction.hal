external function Boolean POSBalanceExistsAfterThis(Date,Time,string,string);
external function Boolean IsSessionOpen(string,string,Date,Time);
external function Boolean RequireOpenSession(string);
external function Boolean IPTestCredMan(record IPVc,Integer,var Integer);
external updating procedure AddTTrans_IPVc(record TRVc,record IPVc);
external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);
external function Integer MakeTransFromIP(var record TRVc,var record IPVc,Boolean);
external function Integer IsUnOKAllowed_IPVc(record IPVc);
external procedure AddIPRoundOffToRows(var record IPVc,record AccBlock);
external function string 255 CheckTrans(var record TRVc,Integer,Boolean);
external updating procedure SaveTrans(record TRVc);
external function Integer GetCheck(string,string,LongInt,var string,var string,var string,var val,var Date);
external function Integer CheckObjs(string,string,var string);
external function Boolean GetPMRow(string,var row PMBlock);
external function Boolean CheckCurncy(string,string);
external function Boolean GetAccName(string,var string,Integer);
external function Boolean CurncyCodeRegistered(string);
external function Boolean PayModeAccIsClosed(string);
external function Boolean GetPMgentrans(string);
external function Integer PMCheckType(string,var string,var string);
external function Boolean Date2Test(string,Date,string,Integer);
external function Boolean SerNrTestIPVc(LongInt,Date,var Boolean);
external function Integer CashSerNumberTest(string,val,string,LongInt,var Boolean);

function Boolean CheckIfPrepaymentError(record ARPayVc ARPayr,row IPVc IPrw,Date td)
BEGIN
  Boolean res;
  record BaseCurBlock BCb;
  val ipfr,ipto1,ipto2,ipbr1,ipbr2;
  val ppfr,ppto1,ppto2,ppbr1,ppbr2;
  val preprate,iprate;
 
  if (ARPayr.CurncyCode!=IPrw.InvCurncy) then begin
    res = true;
  end;
  if (!res) then begin
    BlockLoad(BCb);
    if (IPrw.BankCurncy==BCb.BaseCur1) then begin
      iprate = ARPayr.RVal/ARPayr.BookRVal;
      preprate = IPrw.InvVal/IPrw.BankVal;
      if (iprate!=preprate) then begin
        res = true;
      end;
    end else begin
      GetFullCurncyRate(IPrw.InvCurncy,td,ipfr,ipto1,ipto2,ipbr1,ipbr2);
      GetFullCurncyRate(ARPayr.CurncyCode,ARPayr.PayDate,ppfr,ppto1,ppto2,ppbr1,ppbr2);
      if (ipto1!=ppto1) or (ipto2!=ppto2) then begin
        res = true;
      end;
    end;
  end;
  CheckIfPrepaymentError = res;
  RETURN;
END;

global
updating function LongInt IPVcRecordCheck(var record IPVc IPp,record IPVc IP2p,LongInt stat,LongInt long4)
BEGIN
  LongInt res;  
  record DownPayBlock DownPayRec;
  record MainCLBlock MainCLRec;
  record AccBlock ARAccRec;
  record SRBlock SRRec;
  record ARPayHistVc ARHistr;
  record IPrsVc IPrsr;
  record ARPayVc ARPayr;
  record ARVc ARr;
  record IVVc IVr;
  record CUVc CUr;
  record ORVc ORp;
  record IPVc lIPr;
  record CheckVc Checkr;  
  row IPVc IPrw,IP2rw;
  LongInt oldnr;
  Integer i,j,rwcnt,cashres;
  val amount,temp;
  Boolean testf,gentrans,transf,check,unokf;
  Integer cht,gchk;
  string 255 tstr,pmobjstr,errstr,wrofacc;
  Integer nrofprepay;
  string 2 pmmode;
  string 10 pmacc;
  Integer insertmode,updatemode,errcode;
  Boolean iprsf,tmpf;
  Date td;
  record TRVc gTRp;
  row PMBlock pmrw;
  Record CouponVc Couponr;
  Integer koef;
  record ORVc ORr;
    
  res = 0;
  if (long4>0) then begin
    check = true;
  end else begin
    check = false;
  end;
  insertmode = 1;//Rs_insert
  updatemode = 2;//Rs_update    
  if (IPp.OKFlag==0) then begin
    if (stat==updatemode) then begin
      if (IP2p.OKFlag==1) then begin unokf = true; end;
    end;
  end;
  if (unokf) then begin
    errcode = IsUnOKAllowed_IPVc(IPp);
    if (errcode!=0) then begin
      RecordCheckError(errcode,"",-1,"TransDate");      
      res = -1; 
    end;    
    goto LIPVcRecordCheck;
  end;
  BlockLoad(SRRec);
  BlockLoad(ARAccRec);
  BlockLoad(MainCLRec);
  BlockLoad(DownPayRec);
  nrofprepay = 0;
  gentrans = true;
  oldnr = IPp.SerNr;
  if (IPp.SerNr<=0) then begin
    IPp.SerNr = NextSerNr("IPVc",IPp.TransDate,SRRec.LastPayNr,false,"");
  end;
  if (stat==updatemode) then begin
    if (IPp.SerNr<=0) and (IP2p.OKFlag==0) then begin
      IPp.SerNr = IP2p.SerNr;
    end;
  end;  
  if (stat==insertmode) then begin
    lIPr.SerNr = IPp.SerNr;
    if (ReadFirstMain(lIPr,1,true)) then begin
      RecordCheckError(1103,"",-1,"SerNr");      
      res = -1; 
      goto LIPVcRecordCheck;    
    end;
  end;
  cashres = CashSerNumberTest(IPp.PayMode,IPp.CurPayVal,"IPVc",IPp.SerNr,gentrans);
  if (cashres==99) then begin 
    res = -1; 
    goto LIPVcRecordCheck; 
  end;
  if (cashres==12) then begin 
    goto L12;
  end;
  if (SerNrTestIPVc(IPp.SerNr,IPp.TransDate,gentrans)==false) then begin
    RecordCheckError(1557,"",-1,"SerNr");      
    res = -1; 
    goto LIPVcRecordCheck;
  end;
L12:;
  if (Date2Test("IPVc",IPp.TransDate,"TransDate",-1)==false) then begin
    res = -1;
    goto LIPVcRecordCheck;
  end;
  if (blank(IPp.PayMode)) then begin
    RecordCheckError(1101,"",-1,"PayMode");      
    res = -1; 
    goto LIPVcRecordCheck;
  end;
  if (MainCLRec.CashCollection!=0) then begin
    if (MainCLRec.PMControl!=0) then begin
      if (PMCheckType(IPp.PayMode,tstr,tstr)==5) then begin
        if (GetPMgentrans(IPp.PayMode)) then begin
          RecordCheckError(1277,"",-1,"PayMode");      
          res = -1; 
          goto LIPVcRecordCheck;        
        end;
      end;
    end;
  end;    
  testf = false;
  if (IPp.ReceivedFlag==1) then begin
    if (stat!=updatemode) then begin
      testf = true;
    end else begin
      if (IP2p.ReceivedFlag==0) then begin
        testf = true;
      end;
    end;
    if (testf) then begin
      if (blank(IPp.RecNumber)) then begin
        RecordCheckError(1058,"",-1,"RecNumber");      
        res = -1; 
        goto LIPVcRecordCheck;
      end;
    end;
  end;
  if (PayModeAccIsClosed(IPp.PayMode)) then begin
    RecordCheckError(1258,IPp.PayMode,-1,"PayMode");      
    res = -1; 
    goto LIPVcRecordCheck;
  end;  
  IPp.RegTime = CurrentTime;
  if (RequireOpenSession(IPp.MachineName)) then begin
    IPp.TransDate = CurrentDate;
    if (IsSessionOpen(IPp.MachineName,IPp.DrawerCode,IPp.TransDate,IPp.RegTime)==false) then begin
      RecordCheckError(2195,"",-1,"SerNr");      
      res = -1;
      goto LIPVcRecordCheck;
    end;
  end;
  if (POSBalanceExistsAfterThis(IPp.TransDate,IPp.RegTime,IPp.MachineName,IPp.DrawerCode)) then begin
    RecordCheckError(2194,"",-1,"TransDate");      
    res = -1;
    goto LIPVcRecordCheck;
  end;
    
  AddIPRoundOffToRows(IPp,ARAccRec);
  rwcnt = MatRowCnt(IPp);
  for (i=0; i<rwcnt;i=i+1) begin
    MatRowGet(IPp,i,IPrw);
    if ((IPrw.stp==1) or (IPrw.stp==5) or (IPrw.stp==6) or (IPrw.stp==7)) begin
        if (IPrw.ovst==0) then begin
           // Edit Start ---------------------------------------------- Edit Start
    //Friday, 10 December 2010 09:42:37
          if(currentUser!="LADA" and currentUser!="SA" and currentUser!="FCUA")then begin
            if (IPrw.InvoiceNr<=0 and IPrw.CUPNr<=0) then begin
              RecordCheckError(1854,"",i,"CUPNr");      
              res = -1; 
              goto LIPVcRecordCheck;
            end;
          end;
          
          
          if(IPrw.BankCurncy==IPrw.RecCurncy)then begin
            if(IPrw.BankVal!=IPrw.RecVal)then begin
              RecordCheckError(31028,"",i,"BankVal");      
              res = -1; 
              goto LIPVcRecordCheck;
            end;
          end;
    // Edit End ---------------------------------------------- Edit End
    
          if (PayModeAccIsClosed(IPrw.PayMode)) then begin
            RecordCheckError(1289,IPrw.PayMode,i,"PayMode");      
            res = -1; 
            goto LIPVcRecordCheck;
          end;
          if (blank(IPrw.RecVal)) then begin
            RecordCheckError(1854,"",i,"RecVal");      
            res = -1; 
            goto LIPVcRecordCheck;
          end;
          if (IPrw.CUPNr>0) then begin
            if (ARAccRec.PreIPBookVAT!=0) then begin
              if (blank(IPrw.VATVal)) then begin
                RecordCheckError(1058,"",i,"VATVal");      
                res = -1; 
                goto LIPVcRecordCheck;
              end;
            end;
          end;
          if (ARAccRec.PreIPBookVAT!=0) and (IPrw.CUPNr>0) then begin
            if (blank(IPrw.VATVal)) then begin
              RecordCheckError(1058,"",i,"VATVal");      
              res = -1; 
              goto LIPVcRecordCheck;
            end;
          end;
          if (CurncyCodeRegistered(IPrw.InvCurncy)==false) then begin
            RecordCheckError(1582,"",i,"InvCurncy");      
            res = -1; 
            goto LIPVcRecordCheck;
          end;
          if (CurncyCodeRegistered(IPrw.RecCurncy)==false) then begin
            RecordCheckError(1582,"",i,"RecCurncy");      
            res = -1; 
            goto LIPVcRecordCheck;
          end;
          if (CurncyCodeRegistered(IPrw.BankCurncy)==false) then begin
            RecordCheckError(1582,"",i,"BankCurncy");      
            res = -1; 
            goto LIPVcRecordCheck;
          end;
          if (nonblank(IPrw.RoundOffAcc)) then begin
            if (GetAccName(IPrw.RoundOffAcc,tstr,60)==false) then begin
              RecordCheckError(1010,"",i,"RoundOffAcc");      
              res = -1; 
              goto LIPVcRecordCheck;
            end;
          end;
          if (nonblank(IPrw.PayMode)) then begin
            if (CheckCurncy(IPrw.PayMode,IPrw.BankCurncy)==false) then begin
              RecordCheckError(1425,"",i,"PayMode");      
              res = -1; 
              goto LIPVcRecordCheck;
            end;
          end;
          if (blank(IPrw.PayMode)) then begin
            if (CheckCurncy(IPp.PayMode,IPrw.BankCurncy)==false) then begin
              RecordCheckError(1425,"",i,"PayMode");      
              res = -1; 
              goto LIPVcRecordCheck;
            end;
          end;
          IPrsr.IVNr = IPrw.InvoiceNr;
          if (ReadFirstKey("IVKey",IPrsr,1,true)) then begin
            iprsf = true;
          end;
          CUr.Code = IPrw.CustCode;
          if (ReadFirstMain(CUr,1,true)==false) then begin
            RecordCheckError(1120,"",i,"CustCode");      
            res = -1; 
            goto LIPVcRecordCheck;
          end;
          if (CUr.CUType==0) then begin
            RecordCheckError(1120,IPrw.CustCode,i,"CustCode");      
            res = -1; 
            goto LIPVcRecordCheck;
          end;          
          if (IPTestCredMan(IPp,i,errcode)==false) then begin
            RecordCheckError(errcode,"",i,"CredManNr");      
            res = -1; 
            goto LIPVcRecordCheck;
          end;
          if (IPrw.InvoiceNr>0) and
            (ARAccRec.NoOverPayIV==1) then begin
            ARr.InvoiceNr = IPrw.InvoiceNr;
            if (ReadFirstMain(ARr,1,true)==true) then begin
              amount = IPrw.InvVal;
              for (j=0;j<rwcnt;j=j+1) begin
                MatRowGet(IPp,j,IP2rw);
                if (j!=i) then begin          
                  if (IP2rw.InvoiceNr==IPrw.InvoiceNr) then begin
                    amount = amount + IP2rw.InvVal;
                  end;
                end;
              end;
              if ((ARr.RVal<0) and (amount<0)) then begin
                koef = -1;
              end else begin
                koef = 1; 
              end;
              if ((ARr.RVal*koef)<(amount*koef)) then begin
                tstr = " " & amount & USetStr(20061);
                tstr = tstr & " " & ARr.RVal;
                tstr = tstr & USetStr(20062) & (amount-ARr.RVal) & USetStr(20063);
                RecordCheckError(20060,tstr,i,"InvVal");      
                res = -1; 
                goto LIPVcRecordCheck;  
              end;      
            end;
          end;
          if ((IPrw.CUPNr!=-1) and (IPrw.InvoiceNr!=-1)) then begin
            RecordCheckError(20059,"",i,"CUPNr");      
            res = -1; 
            goto LIPVcRecordCheck;
          end;
          if (IPrw.OrderNr!=-1) then begin
            ORr.SerNr = IPrw.OrderNr;
            if (ReadFirstMain(ORr,1,true)==false) then begin
              RecordCheckError(1252,"",i,"OrderNr");      
              res = -1; 
              goto LIPVcRecordCheck;
            end;
          end;
          if ((IPrw.CUPNr!=-1) and (IPrw.InvoiceNr==-1)) then begin
            if (UserCanAction("DisallowPrepToNotOKOR",false)) then begin
              if (IPrw.OrderNr>0) then begin
                ORr.SerNr = IPrw.OrderNr;
                if (ReadFirstMain(ORr,1,true)) then begin
                  if (ORp.OKFlag==0) then begin
                    RecordCheckError(20072,"",i,"OrderNr");      
                    res = -1;
                    goto LIPVcRecordCheck;
                  end;
                end;
              end;
            end;
            nrofprepay = nrofprepay + 1;
            ARHistr.CUPNr = IPrw.CUPNr;
            ARHistr.FileName = "IPVc";
            if (ReadFirstMain(ARHistr,2,true)==true) then begin
              if (ARAccRec.ForceUniquePP!=0) then begin
                temp = blankval;
                ARPayr.CUPNr = ARHistr.CUPNr;
                if (ReadFirstMain(ARPayr,1,true)==true) then begin
                  temp = ARPayr.RVal;
                end;
                temp = temp + IPrw.RecVal;
                if (temp!=0) and (IPrw.RecVal>0) then begin
                  RecordCheckError(20057,"",i,"CUPNr");      
                  res = -1; 
                  goto LIPVcRecordCheck;
                end;
              end;
              if (ARHistr.CustCode!=IPrw.CustCode) then begin
                RecordCheckError(1218,"",i,"CUPNr");      
                res = -1; 
                goto LIPVcRecordCheck;
              end;
              if (ARHistr.CurncyCode!=IPrw.RecCurncy) then begin
                RecordCheckError(1217,"",i,"CUPNr");      
                res = -1; 
                goto LIPVcRecordCheck;
              end;
            end;
            ARPayr.CUPNr = IPrw.CUPNr;
            if (ReadFirstMain(ARPayr,1,true)) then begin
              if (IPrw.InvVal>0) then begin
                if (ARPayr.PayDate!=IPp.TransDate) then begin
                  RecordCheckError(20853,"",i,"TransNr");      
                  res = -1; 
                  goto LIPVcRecordCheck;
                end;
              end else begin
                if (-IPrw.InvVal>ARPayr.RVal) then begin
                  RecordCheckError(1254,"",i,"TransNr");      
                  res = -1; 
                  goto LIPVcRecordCheck;
                end;
              end;
              if (CheckIfPrepaymentError(ARPayr,IPrw,IPp.TransDate)) then begin
                if (ARPayr.PayDate!=IPp.TransDate) and (IPrw.BankVal>0) then begin
                  RecordCheckError(20405,"",i,"CUPNr");      
                  res = -1; 
                  goto LIPVcRecordCheck;
                end;
              end;
/*              
              if (ARPayr.CurncyCode!=IPrw.InvCurncy) then begin
                if (ARPayr.PayDate!=IPp.TransDate) and (IPrw.BankVal>0) then begin
                  RecordCheckError(1142,"",i,"CUPNr");      
                  res = -1; 
                  goto LIPVcRecordCheck;
                end;
              end;
*/              
            end else begin
              if (IPrw.RecVal<0) then begin
                RecordCheckError(20403,"",i,"CUPNr");      
                res = -1; 
                goto LIPVcRecordCheck;
              end;
            end;
            if ((IPrw.CUPNr!=-1) and (IPrw.InvoiceNr==-1)) then begin
              for (j=0;j<i;j=j+1) begin
                MatRowGet(IPp,j,IP2rw);
                if ((IP2rw.CUPNr!=-1) and (IP2rw.InvoiceNr==-1) and (IP2rw.CUPNr==IPrw.CUPNr)) then begin
                  if (IP2rw.CustCode!=IPrw.CustCode) then begin
                    RecordCheckError(1218,"",i,"CUPNr");      
                    res = -1; 
                    goto LIPVcRecordCheck;
                  end;                
		              if (ARAccRec.ForceUniquePP!=0) then begin
                    RecordCheckError(20057,"",i,"CUPNr");      
                    res = -1; 
                    goto LIPVcRecordCheck;
		              end;
                end;
              end;
            end;

            ARPayr.CUPNr = IPrw.CUPNr;
            if (ReadFirstMain(ARPayr,1,true)==true) then begin
              if (ARPayr.VATCode!=IPrw.VATCode) then begin
                RecordCheckError(1286,"",i,"VATCode");      
                res = -1; 
                goto LIPVcRecordCheck;
              end;
              if (IPrw.RecVal<0) then begin
                amount = IPrw.RecVal;
                for (j=0;j<i;j=j+1) begin
                  MatRowGet(IPp,j,IP2rw);
                  if (IP2rw.CUPNr==IPrw.CUPNr) then begin
                    amount = amount + IP2rw.RecVal;
                  end;
                end;
                if (-amount>ARPayr.RVal) then begin
                  RecordCheckError(1254,"",i,"CUPNr");      
                  res = -1; 
                  goto LIPVcRecordCheck;
                end;
              end;
              if (nrofprepay>1) then begin
                if (ARPayr.VATVal!=0) then begin
                  RecordCheckError(1287,"",i,"CUPNr");      
                  res = -1; 
                  goto LIPVcRecordCheck;
                end;
              end;
            end;  
            if (DownPayRec.ConnPrePayAndSalesOrder!=0) then begin
              ORp.SerNr = IPrw.CUPNr;
              if (ReadFirstMain(ORp,1,true)==false) then begin
                RecordCheckError(1252,"",i,"CUPNr");      
                res = -1; 
                goto LIPVcRecordCheck;
              end;
            end;
          end;
          pmmode = IPrw.PayMode;
          if (blank(pmmode)) then begin
            pmmode = IPp.PayMode;
          end;  
          if (GetPMRow(pmmode,pmrw)) then begin           
            pmacc = pmrw.AccNr;
/*                 
we don't have to check pmobject since it goes to diffrent account then OPrw.Object
            pmobjstr = pmrw.Objects;
            tstr = pmobjstr;
            if (nonblank(tstr)) then begin
              tstr = tstr & ",";
            end;
            tstr = tstr & IPrw.Objects;          
*/            
            cashres = CheckObjs(pmacc,IPrw.Objects,errstr);
            if (cashres!=0) then begin
              RecordCheckError(cashres,errstr,i,"Objects");      
              res = -1; 
              goto LIPVcRecordCheck;
            end;  
            if (IPrw.B1BankVal==0) then begin
              if (pmrw.ForceBankVals>0) then begin
                RecordCheckError(1058,"",i,"B1BankVal");      
                res = -1; 
                goto LIPVcRecordCheck;                
              end;
            end;
            if (IPrw.B2BankVal==0) then begin
              if (pmrw.ForceBankVals==2) then begin
                RecordCheckError(1058,"",i,"B2BankVal");      
                res = -1; 
                goto LIPVcRecordCheck;                
              end;
            end;
          end;
          if ((IPrw.InvoiceNr!=-1) or (IPrw.stp!=1)) then begin
            if (IPrw.InvoiceNr!=-1) then begin
              IVr.SerNr = IPrw.InvoiceNr;
              if (ReadFirstMain(IVr,1,true)==false) then begin
                if (iprsf==false) then begin
                  RecordCheckError(1133,"",i,"InvoiceNr");      
                  res = -1; 
                  goto LIPVcRecordCheck;
                end;
              end;            
              if (IVr.Invalid!=0) then begin
                RecordCheckError(1282,"",i,"InvoiceNr");      
                res = -1; 
                goto LIPVcRecordCheck;
              end;
              if (IVr.OKFlag==0) then begin
                RecordCheckError(1224,"",i,"InvoiceNr");      
                res = -1; 
                goto LIPVcRecordCheck;
              end;
            end;
            if (iprsf==true) then begin
              if (IPrw.stp==1) and (IPrw.InvoiceNr!=-1) then begin 
                if (IPp.TransDate<IVr.InvDate) then begin
                  RecordCheckError(20852,"",i,"InvoiceNr");      
                  res = -1; 
                  goto LIPVcRecordCheck;
                end;
                if (IPrw.PayDate<IVr.InvDate) then begin 
                  RecordCheckError(20852,"",i,"PayDate");      
                  res = -1; 
                  goto LIPVcRecordCheck;
                end;
              end;
            end;
            if (IPrw.InvoiceNr!=-1) then begin
              if (IVr.CustCode!=CUr.Code) then begin              
                if (iprsf==true) then begin
                  if (IPrsr.CustCode==CUr.Code)  then begin tmpf = true; end;
                end;  
                if (tmpf==false) then begin
                  RecordCheckError(1218,"",i,"InvoiceNr");      
                  res = -1; 
                  goto LIPVcRecordCheck;
                end;  
              end;
            end;
            if ((IPrw.stp==1) and (blankdate(IPrw.PayDate))) then begin
              RecordCheckError(1053,"",i,"PayDate");      
              res = -1; 
              goto LIPVcRecordCheck;
            end;
          end else begin
            if (CUr.OnAccount==0) then begin
              RecordCheckError(1131,"",I,"InvoiceNr");      
              res = -1; 
              goto LIPVcRecordCheck;
            end;
            if ((IPrw.CUPNr==-1) and (ARAccRec.DemandPPNo==1)) then begin
              RecordCheckError(1289,"",i,"CUPNr");      
              res = -1; 
              goto LIPVcRecordCheck;
            end;
            if (nonblank(CUr.CurncyCode)) then begin
              if (CUr.CurncyCode!=IPrw.InvCurncy) then begin
                RecordCheckError(1217,"",i,"CustCode");      
                res = -1; 
                goto LIPVcRecordCheck;
              end;
            end;
          end;
          if (nonblank(IPrw.PayMode)) then begin
            cht = PMCheckType(IPrw.PayMode,tstr,tstr);
          end else begin
            cht = PMCheckType(IPp.PayMode,tstr,tstr);
          end;
          switch (cht) begin
            case 1:
              if (IPrw.ChequeNr!=-1) then begin
                Checkr.SerNr = IPrw.ChequeNr;
                if (ReadFirstMain(Checkr,1,true)==false) then begin
                  RecordCheckError(1279,"",I,"ChequeNr");      
                  res = -1; 
                  goto LIPVcRecordCheck;
                end else begin
                  if not (((Checkr.Openf==0) and (IPrw.RecVal>0)) or
                          ((Checkr.Openf==1) and (IPrw.RecVal<0))) then begin
                    RecordCheckError(1292,"",I,"ChequeNr");      
                    res = -1; 
                    goto LIPVcRecordCheck;
                  end;
                end;
              end else begin
                RecordCheckError(1854,"",I,"ChequeNr");      
                res = -1; 
                goto LIPVcRecordCheck;
              end;
            case 3:
              if (IPrw.ChequeNr!=-1) then begin
                Couponr.SerNr = IPrw.ChequeNr;
                if readfirstmain(Couponr,1,true) then begin
                  if not (((Couponr.Status==0) and (IPrw.RecVal>0)) or
                          ((Couponr.Status==1) and (IPrw.RecVal<0))) then begin
                    res = -1;
                    RecordCheckError(1292,IPrw.ChequeNr,i,"ChequeNr");  
                    goto LIPVcRecordCheck;
                  end;
                end else begin //LGD Fix
                  res = -1;
                  RecordCheckError(1279,IPrw.ChequeNr,i,"ChequeNr");  
                  goto LIPVcRecordCheck;
                end;
              end else begin //LGD Fix
                RecordCheckError(1854,"",I,"ChequeNr");      
                res = -1; 
                goto LIPVcRecordCheck;              
              end;
          end;
          gchk = GetCheck(IPp.PayMode,IPrw.PayMode,IPrw.ChequeNr,tstr,tstr,tstr,amount,td);
          if (gchk==1 or gchk==2) then begin
            temp = blankval;
            for (j=0; j<rwcnt; j=j+1) begin
              MatRowGet(IPp,j,IP2rw);
              if (IP2rw.ChequeNr==IPrw.ChequeNr) then begin
                temp = temp + IP2rw.BankVal;
              end;
            end;
            if (temp<0) then begin temp = -1*temp; end;
            if (temp!=amount) then begin
              RecordCheckError(1280,"",I,"ChequeNr");      
              res = -1; 
              goto LIPVcRecordCheck;
            end;
          end;
          if ((IPrw.stp==5) or (IPrw.stp==6) or (IPrw.stp==7)) then begin
            IPrw.PayDate = IPp.TransDate;
          end;
          if (IPrw.stp==6) then begin
            if (IPrw.BankVal>0) then begin
              wrofacc = ARAccRec.CredAcc;
            end else begin
              wrofacc = ARAccRec.WriteOffLossAcc;
            end;
            if (blank(wrofacc)) then begin
              wrofacc = ARAccRec.CredAcc;
            end;            
            cashres = CheckObjs(wrofacc,IPrw.Objects,errstr);
            if (cashres!=0) then begin
              RecordCheckError(cashres,errstr,i,"Objects");      
              res = -1; 
              goto LIPVcRecordCheck;
            end;  
          end;
          
        end;
    end;
  end;
  transf = false;
  if (IPp.OKFlag==1) then begin
    if (stat==insertmode) then begin transf = true; end;
    if (stat==updatemode) then begin
      if (IP2p.OKFlag==0) then begin transf = true; end;
    end;
  end;
  if (IPp.ReceivedFlag==1) then begin
    if (stat==insertmode) then begin transf = true; end;
    if (stat==updatemode) then begin
      if (IP2p.ReceivedFlag==0) then begin transf = true; end;
    end;
  end;
  if (IPp.RejectedFlag==1) then begin
    if (stat==insertmode) then begin transf = true; end;
    if (stat==updatemode) then begin
      if (IP2p.RejectedFlag==0) then begin transf = true; end;
    end;
  end;
  if (transf) then begin
    if (UserCanAction("IPOK",true)==false) then begin
      RecordCheckError(1274,StringFromStringSet(3,"IPOK"),-1,"SerNr");      
      res = -1; 
      goto LIPVcRecordCheck;
    end;
  end;
  if (transf) then begin
    if (UserCanAction("IPOK",true)==false) then begin
      RecordCheckError(1274,StringFromStringSet(3,"IPOK"),-1,"SerNr");      
      res = -1; 
      goto LIPVcRecordCheck;
    end;
  end;
  if (gentrans==false) then begin transf = false; end;
  if (transf) then begin
    if (stat==insertmode) then begin
      errcode = MakeTransFromIP(gTRp,IPp,false);
    end else begin
      errcode = MakeTransFromIP(gTRp,IPp,false);
    end;
    if (errcode!=0) then begin
      RecordCheckError(errcode,"",-1,"SerNr");      
      res = -1; 
      goto LIPVcRecordCheck;
    end;
    if ((gTRp.Number>0) and (gTRp.IntYc==IPYc)) then begin
      tstr = CheckTrans(gTRp,2,true);
      if (nonblank(tstr)) then begin
        RecordCheckError(1085,tstr,-1,"SerNr");      
        res = -1;
        goto LIPVcRecordCheck;
      end;
      SaveTrans(gTRp);
      AddTTrans_IPVc(gTRp,IPp);
    end;
  end;
LIPVcRecordCheck:;
  if (res!=0) then begin
    IPp.SerNr = oldnr;
  end;
  IPVcRecordCheck = res;
  RETURN;
END;
